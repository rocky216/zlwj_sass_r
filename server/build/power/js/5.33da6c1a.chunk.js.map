{"version":3,"sources":["power/components/Modular/SearchModular.tsx","power/components/Element/CompanyHeElement.tsx","power/actions/appAction.ts","public/utils/action.ts","power/views/proman/columns/index.tsx","public/common/powerMapper.ts","power/actions/projectAction.ts","power/components/Modular/getnode.tsx","power/components/Element/CompanyHeMeterElement.tsx","power/components/Element/CompanyHeSheElement.tsx","power/views/proman/deviceconf.tsx"],"names":["SearchModular","before","data","submitSearch","initialValues","resetValues","Form","useForm","form","size","className","style","marginRight","layout","onFinish","values","map","item","index","Item","key","label","name","initialValue","valuePropName","getNode","type","ghost","htmlType","icon","onClick","setFieldsValue","TreeNode","TreeSelect","connect","state","companyhe","app","dispatch","actions","bindActionCreators","getCompanyHe","onChange","value","useEffect","multiple","allowClear","width","rCTreeNode","arr","uuid","title","items","length","showSearch","options","changedValue","fieldNames","children","placeholder","ACTION","getCompanyHeShe","params","next","getState","a","url","method","storetApi","getCompanyHeMeter","keyName","opt","refresh","obj","JSON","stringify","isCache","MC","get","fetch","put","_","findIndex","list","o","id","assign","console","log","stateApi","devicesColumns","dataIndex","render","color","OnLineTypeColor","OnLineType","wattConfColumns","sheConfColumns","ProConfColumns","WhetherType","maxWidth","elem","i","FuseStatusColor","fuseStatus","FuseStatus","unitTime","unitNum","PayType","unitMoney","getDeviceList","omit","isDistribution","companyId","companyHe","itemId","deleteWattConf","editWattConf","addWattConf","statusWattConf","getWattConfList","deleteSheConf","editSheConf","addSheConf","statusSheConf","getShedConfList","getProConfList","statusProConf","changeProConf","powerRuleList","powerFuseList","TextArea","Input","Option","Select","selectList","companyhemeter","companyHeId","notAll","v","meterName","companyheshe","shedName","current","shedId","meterId","deviceSerial","iotId","status","resetParams","DeviceConffPage","this","props","spinning","utils","devices","JCard","CompanyHeElement","setState","CompanyHeMeterElement","columns","dataSource","addIndex","pagination","Pagination","page","React","Component","project"],"mappings":"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","file":"power/js/5.33da6c1a.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\"\r\nimport { Button, Card, Form, Input, InputNumber} from \"antd\"\r\nimport {ItemType, getNode} from \"./getnode\"\r\nimport { RetweetOutlined, SearchOutlined } from \"@ant-design/icons\";\r\n\r\n\r\ninterface Props {\r\n  before?: ReactNode;\r\n  data: ItemType[];\r\n  submitSearch: Function;\r\n  initialValues: any;\r\n  resetValues?:any;\r\n}\r\n\r\nconst SearchModular:React.FC<Props> = ({\r\n  before,\r\n  data,\r\n  submitSearch,\r\n  initialValues,\r\n  resetValues\r\n})=>{\r\n  const [form] = Form.useForm();\r\n\r\n  const submitReset = ()=>{\r\n    form.setFieldsValue(resetValues)\r\n    submitSearch()\r\n  }\r\n\r\n  return (\r\n    <Card size=\"small\">\r\n      <div className=\"flexbetween\">\r\n        <div style={{marginRight: 30}}>\r\n          {before}\r\n        </div>\r\n        <div>\r\n          <Form form={form} \r\n            layout=\"inline\"\r\n            onFinish={(values)=>submitSearch(values)}\r\n            initialValues={initialValues}\r\n          > \r\n            {data.map((item, index)=>(\r\n              <Form.Item\r\n                key={index}\r\n                label={item.label||null}\r\n                name={item.name}\r\n                initialValue={item.initialValue}\r\n                valuePropName={item.valuePropName || \"value\"}\r\n              >\r\n                {getNode(item)}\r\n              </Form.Item>\r\n            ))}\r\n            <Form.Item >\r\n              <Button type=\"primary\" ghost htmlType=\"submit\" icon={<SearchOutlined />}>搜索</Button>\r\n              {resetValues?\r\n              <Button className=\"mgl10\" onClick={submitReset} icon={<RetweetOutlined />}>重置</Button>:null}\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n    \r\n  )\r\n}\r\n\r\nexport default SearchModular;","import React, { useEffect } from \"react\"\r\nimport {Cascader, TreeSelect} from \"antd\"\r\nimport {getCompanyHe} from \"@power/actions/appAction\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport _ from \"lodash\"\r\n\r\nconst {TreeNode} = TreeSelect\r\n\r\n\r\ninterface Props {\r\n  companyhe: any[];\r\n  actions: any;\r\n  onChange?:(value:any)=>void;\r\n  value?:string[];\r\n  type?:string;\r\n}\r\n\r\nconst CompanyHeElement:React.FC<Props> = ({\r\n  onChange,\r\n  value=[],\r\n  actions,\r\n  companyhe,\r\n  type\r\n})=>{\r\n\r\n  useEffect(()=>{\r\n    actions.getCompanyHe({})\r\n  }, [])\r\n\r\n  const rCTreeNode = (arr:any[])=>{\r\n    return arr?arr.map(item=>(\r\n      <TreeNode key={item.uuid} value={item.uuid} title={item.name}>\r\n        {item.items && item.items.length? rCTreeNode(item.items):null}\r\n      </TreeNode>\r\n    )):null\r\n  }\r\n\r\n\r\n  const triggerChange = (changedValue:any) => {\r\n    if (onChange) {\r\n      onChange(changedValue );\r\n    }\r\n  };\r\n\r\n  return type==\"treeselect\"?\r\n          <TreeSelect\r\n            multiple\r\n            allowClear\r\n            style={{width: 200}}\r\n          >\r\n            {rCTreeNode(companyhe)}\r\n          </TreeSelect>\r\n        :<Cascader \r\n          showSearch\r\n          value={value} \r\n          options={companyhe || []} \r\n          onChange={triggerChange}\r\n          fieldNames={{ label: 'name', value: 'id', children: 'items' }} \r\n          placeholder=\"请选择公司/小区\"\r\n        />\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyHe}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    companyhe: state.app.companyhe\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyHeElement)","import {APP_LOADING_START, APP_LOADING_END, APP_LOADING_NOT} from \"@power/constant/appTypes\"\r\nimport {storetApi, stateApi} from \"@public/utils/action\"\r\nconst ACTION = \"APP\"\r\n\r\n\r\n\r\nexport const getCompanyHeShe = (params:any, next?:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-shed/powerShedList\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"companyheshe\", dispatch, ACTION, {})\r\n  }\r\n}\r\n\r\nexport const getCompanyHeMeter = (params:any, next?:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-meter/powerMeterList\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"companyhemeter\", dispatch, ACTION, {})\r\n  }\r\n}\r\n\r\nexport const getCompanyHe = (params:any, next?:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-company/companyItemList\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"companyhe\", dispatch, ACTION, {})\r\n  }\r\n}\r\n\r\n","import MC from \"memory-cache\"\r\nimport {fetch} from \"@public/utils\"\r\nimport { Method } from \"axios\";\r\nimport _ from \"lodash\";\r\n\r\n\r\ninterface OptionsProps {\r\n  url: string;\r\n  method: Method;\r\n  data?:any;\r\n}\r\n\r\nexport interface OptProps {\r\n  refresh?:boolean;\r\n  next?: (...arg:any)=>void;\r\n  type?: string; //edit | add | delete\r\n  obj?: any;\r\n}\r\n\r\nexport const storetApi = async (options:OptionsProps, keyName:string, dispatch:any, ACTION:string, opt?:OptProps)=>{\r\n  const {refresh=false, next, type, obj} = opt || {};\r\n  try{\r\n    let key = options.url+JSON.stringify(options.data)\r\n    let isCache = MC.get(key)\r\n    if(!isCache || refresh ){\r\n      dispatch({\r\n        type: `${ACTION}_LOADING_START`\r\n      })\r\n      let data = await fetch(options)\r\n      if(next)next(data)\r\n      MC.put(key, data)\r\n      dispatch({\r\n        type: `${ACTION}_LOADING_END`,\r\n        [keyName]: data\r\n      })\r\n    }else{\r\n      if(obj && _.size(obj)){\r\n        let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n        if(type==\"edit\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }else if(type==\"add\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }\r\n        MC.put(key, isCache)\r\n        dispatch({\r\n          type: `${ACTION}_LOADING_NOT`,\r\n          [keyName]: isCache\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: `${ACTION}_LOADING_END`,\r\n          [keyName]: isCache\r\n        })\r\n      }\r\n    }\r\n  }catch(e){\r\n    console.log(e)\r\n  }\r\n\r\n}\r\n\r\nexport const stateApi = async (options: OptionsProps, dispatch:any, ACTION:string, next?:(...arg:any)=>void)=>{\r\n  \r\n  try{\r\n    dispatch({\r\n      type: `${ACTION}_LOADING_START`,\r\n    })\r\n\r\n    let data:any = await fetch(options)\r\n    if(next)next(data)\r\n    dispatch({\r\n      type: `${ACTION}_LOADING_END`,\r\n    })\r\n    \r\n  }catch(e){\r\n    console.log(e)\r\n    dispatch({type: `${ACTION}_LOADING_END`})\r\n  }\r\n}","import React from \"react\"\r\nimport { Tag } from \"antd\";\r\nimport {WhetherType, PayType, FuseStatus, FuseStatusColor, OnLineType, OnLineTypeColor} from \"@public/common/powerMapper\"\r\n\r\nexport const devicesColumns = [\r\n  {\r\n    title: \"状态\",\r\n    dataIndex: \"online\",\r\n    render:(item:number)=><Tag color={OnLineTypeColor[item]}>{OnLineType[item]}</Tag>\r\n  },\r\n  {\r\n    title: \"IotID\",\r\n    dataIndex: \"iotId\"\r\n  },\r\n  {\r\n    title: \"序列号\",\r\n    width: 50,\r\n    dataIndex: \"deviceSerial\"\r\n  },\r\n  {\r\n    title: \"公司\",\r\n    dataIndex: \"companyName\"\r\n  },\r\n  {\r\n    title: \"小区\",\r\n    dataIndex: \"itemName\"\r\n  },\r\n  {\r\n    title: \"所属电表\",\r\n    dataIndex: \"meterName\"\r\n  },\r\n  {\r\n    title: \"所属充电棚\",\r\n    dataIndex: \"shedName\"\r\n  },\r\n  {\r\n    title: \"设备名称\",\r\n    dataIndex: \"deviceName\"\r\n  },\r\n  {\r\n    title: \"设备类型\",\r\n    dataIndex: \"deviceBrand\"\r\n  },\r\n  {\r\n    title: \"端口详情及数量\",\r\n    dataIndex: \"portType\"\r\n  },\r\n]\r\n\r\nexport const wattConfColumns = [\r\n  {\r\n    title: \"公司\",\r\n    dataIndex: \"companyName\"\r\n  },\r\n  {\r\n    title: \"小区\",\r\n    dataIndex: \"itemName\"\r\n  },\r\n  {\r\n    title: \"电表名称\",\r\n    dataIndex: \"meterName\"\r\n  },\r\n  {\r\n    title: \"设备数量(台)\",\r\n    dataIndex: \"deviceCount\"\r\n  },\r\n  {\r\n    title: \"初始电表值\",\r\n    dataIndex: \"initDegrees\"\r\n  },\r\n  {\r\n    title: \"当前电表值\",\r\n    dataIndex: \"nowDegrees\"\r\n  },\r\n  {\r\n    title: \"电价\",\r\n    dataIndex: \"unitMoney\"\r\n  },\r\n]\r\n\r\nexport const sheConfColumns = [\r\n  {\r\n    title: \"公司\",\r\n    dataIndex: \"companyName\"\r\n  },\r\n  {\r\n    title: \"小区\",\r\n    dataIndex: \"itemName\"\r\n  },\r\n  {\r\n    title: \"充电棚名称\",\r\n    dataIndex: \"shedName\"\r\n  },\r\n  {\r\n    title: \"设备数量(台)\",\r\n    dataIndex: \"deviceNum\"\r\n  }\r\n]\r\n\r\n\r\nexport const ProConfColumns = [\r\n  {\r\n    title: \"公司\",\r\n    dataIndex: \"companyName\"\r\n  },\r\n  {\r\n    title: \"小区\",\r\n    dataIndex: \"itemName\"\r\n  },\r\n  {\r\n    title: \"电表数量\",\r\n    dataIndex: \"meterSum\"\r\n  },\r\n  {\r\n    title: \"充电棚数量\",\r\n    dataIndex: \"shedSum\"\r\n  },\r\n  {\r\n    title: \"设备数量\",\r\n    dataIndex: \"deviceSum\"\r\n  },\r\n  {\r\n    title: \"自动退款\",\r\n    dataIndex: \"isRefund\",\r\n    render: (item:any)=>WhetherType[item]\r\n  },\r\n  {\r\n    title: \"熔断配置\",\r\n    maxWidth: 200,\r\n    dataIndex: \"powerFuseList\",\r\n    render(item:any[]) {\r\n      return item.map((elem, i)=>(\r\n      <Tag key={i}><span style={{color: FuseStatusColor[elem.fuseStatus]}}>{FuseStatus[elem.fuseStatus]}</span>\r\n        {elem.unitTime}分钟{elem.unitNum}次</Tag>\r\n      ))\r\n    }\r\n  },\r\n  {\r\n    title: \"收费配置\",\r\n    maxWidth: 200,\r\n    dataIndex: \"powerRuleList\",\r\n    render(item:any[]) {\r\n      return item.map((elem)=><Tag key={elem.id}>{PayType[elem.type]}{elem.unitMoney}/{elem.unitTime}分钟</Tag>);\r\n    }\r\n  }\r\n]","\r\n\r\nexport const WhetherType = [\"否\", \"是\"]\r\n\r\nexport const FuseStatus =  [\"正常\", \"警告\", \"禁用\"]\r\nexport const FuseStatusColor =  [\"#077bf2\", \"#f8b628\", \"#f72c44\"]\r\n\r\nexport const PayType:any = {\"K\": \"充电卡\", \"G\": \"智联万家APP\", \"W\": \"微信小程序\", \"Z\": \" 支付宝小程序\"}\r\n\r\nexport const OnLineType = [\"离线\", \"在线\"]\r\nexport const OnLineTypeColor = [\"#f50\", \"#2db7f5\"]","import {storetApi, stateApi} from \"@public/utils/action\"\r\nconst ACTION = \"PROJECT\"\r\nimport {OptProps} from \"@public/utils/action\"\r\nimport _ from \"lodash\"\r\n\r\n\r\nexport const getDeviceList = (params:any, opt?:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-device/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params,\"companyHe\")),\r\n        isDistribution: params.isDistribution?1:0,\r\n        companyId: params.companyHe[0]||\"\",\r\n        itemId: params.companyHe[1]||\"\",\r\n      }\r\n    }\r\n    storetApi(options, \"devices\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const deleteWattConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-meter/delById\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const editWattConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-meter/updateById\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, \"companyHe\")), \r\n        companyId: params.companyHe[0]||\"\",\r\n        itemId: params.companyHe[1]||\"\",\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const addWattConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-meter/save\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, \"companyHe\")), \r\n        companyId: params.companyHe[0]||\"\",\r\n        itemId: params.companyHe[1]||\"\",\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const statusWattConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-meter/updateStatus\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getWattConfList = (params:any, opt?:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-meter/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, \"companyHe\")), \r\n        companyId: params.companyHe[0]||\"\",\r\n        itemId: params.companyHe[1]||\"\",\r\n      }\r\n    }\r\n    storetApi(options, \"wattconf\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const deleteSheConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-shed/removeById\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const editSheConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-shed/updateById\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, \"companyHe\")), \r\n        companyId: params.companyHe[0]||\"\",\r\n        itemId: params.companyHe[1]||\"\",\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const addSheConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-shed/save\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, \"companyHe\")), \r\n        companyId: params.companyHe[0]||\"\",\r\n        itemId: params.companyHe[1]||\"\",\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const statusSheConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-shed/enable\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getShedConfList = (params:any, opt?:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-shed/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"sheconf\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getProConfList = (params:any, opt?:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-config/page\",\r\n      method: \"get\",\r\n      data: {...(_.omit(params, \"companyHe\")), companyId: params.companyHe[0]||\"\", itemId: params.companyHe[1]||\"\"}\r\n    }\r\n    storetApi(options, \"proconf\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\n\r\nexport const statusProConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-config/enable\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const changeProConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  console.log(params)\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/powerDevice/sys/power-config/saveOrUpdatePowerConfig\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, \"companyHe\")), \r\n        powerRuleList: JSON.stringify(params.powerRuleList), \r\n        powerFuseList: JSON.stringify(params.powerFuseList),\r\n        companyId: params.companyHe[0]||\"\", \r\n        itemId: params.companyHe[1]||\"\"\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}","import React from \"react\"\r\nimport {Input, InputNumber, Select} from \"antd\"\r\nconst {TextArea} = Input\r\nconst {Option} = Select\r\n\r\ninterface selectListProps {\r\n  label: string,\r\n  id: any;\r\n}\r\n\r\nexport interface ItemType {\r\n  label?: string,\r\n  name: string,\r\n  type: any,\r\n  selectList?: selectListProps[];\r\n  initialValue?:any;\r\n  valuePropName?:string;\r\n}\r\n\r\nexport const getNode = (item:ItemType)=>{\r\n  switch(item.type){\r\n    case \"input\":\r\n      return <Input/>\r\n    case \"textarea\":\r\n      return <TextArea/>\r\n    case \"inputNumber\":\r\n      return <InputNumber style={{width: \"100%\"}}/>\r\n    case \"select\":\r\n      return (\r\n        <Select>\r\n          {item.selectList?.map(elem=>(\r\n            <Option key={elem.id} value={elem.id} >{elem.label}</Option>\r\n          ))}\r\n        </Select>\r\n      )\r\n  }\r\n\r\n  return item.type;\r\n}","import React, { useEffect } from \"react\"\r\nimport {Cascader, Select} from \"antd\"\r\nimport {getCompanyHeMeter} from \"@power/actions/appAction\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\n\r\nconst {Option} = Select\r\n\r\ninterface Props {\r\n  actions:any;\r\n  value?:any;\r\n  onChange?:any;\r\n  companyHeId:any[];\r\n  companyhemeter:any;\r\n  notAll?:boolean;\r\n}\r\n\r\nconst CompanyHeMeter: React.FC<Props> = ({\r\n  value,\r\n  onChange,\r\n  actions,\r\n  companyHeId,\r\n  companyhemeter,\r\n  notAll\r\n})=>{\r\n\r\n  useEffect(()=>{\r\n    if(companyHeId.length){\r\n      actions.getCompanyHeMeter({\r\n        companyId: companyHeId[0] || \"\",\r\n        itemId: companyHeId[1] || \"\"\r\n      })\r\n      onChange(\"\")\r\n    }\r\n  }, [companyHeId])\r\n\r\n  return (\r\n    <Select value={value} onChange={(v)=>{\r\n      if(onChange){\r\n        onChange(v)\r\n      }\r\n    }}>\r\n      {notAll?null:<Option value=\"\">选择电表</Option>}\r\n      {companyhemeter?companyhemeter.map((item:any)=>(\r\n        <Option key={item.id} value={item.id}>{item.meterName}</Option>\r\n      )):null}\r\n    </Select>\r\n  )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyHeMeter}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    companyhemeter: state.app.companyhemeter\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyHeMeter)","import React, { useEffect } from \"react\"\r\nimport {Cascader, Select} from \"antd\"\r\nimport {getCompanyHeShe} from \"@power/actions/appAction\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\n\r\nconst {Option} = Select\r\n\r\ninterface Props {\r\n  actions:any;\r\n  value?:any;\r\n  onChange?:any;\r\n  companyHeId:any[];\r\n  companyheshe:any;\r\n  notAll?:boolean;\r\n}\r\n\r\nconst CompanyHeSheElement: React.FC<Props> = ({\r\n  value,\r\n  onChange,\r\n  actions,\r\n  companyHeId,\r\n  companyheshe,\r\n  notAll\r\n})=>{\r\n\r\n  useEffect(()=>{\r\n    if(companyHeId.length){\r\n      actions.getCompanyHeShe({\r\n        companyId: companyHeId[0] || \"\",\r\n        itemId: companyHeId[1] || \"\"\r\n      })\r\n      onChange(\"\")\r\n    }\r\n  }, [companyHeId])\r\n\r\n  return (\r\n    <Select value={value} onChange={(v)=>{\r\n      if(onChange){\r\n        onChange(v)\r\n      }\r\n    }}>\r\n      {notAll?null:<Option value=\"\">选择充电棚</Option>}\r\n      {companyheshe?companyheshe.map((item:any)=>(\r\n        <Option key={item.id} value={item.id}>{item.shedName}</Option>\r\n      )):null}\r\n    </Select>\r\n  )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyHeShe}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    companyheshe: state.app.companyheshe\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyHeSheElement)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport JCard from \"@public/components/JCard\"\r\nimport { Button, Checkbox, Table } from \"antd\";\r\nimport CompanyHeElement from \"@power/components/Element/CompanyHeElement\";\r\nimport SearchModular from \"@power/components/Modular/SearchModular\";\r\nimport CompanyHeMeterElement from \"@power/components/Element/CompanyHeMeterElement\";\r\nimport CompanyHeSheElement from \"@power/components/Element/CompanyHeSheElement\";\r\nimport {getDeviceList} from \"@power/actions/projectAction\"\r\nimport {devicesColumns} from \"./columns\"\r\n\r\n\r\ninterface Props extends IProps {\r\n  devices:any;\r\n}\r\n\r\nlet params = {\r\n  current: 1,\r\n  companyHe: [],\r\n  shedId: \"\",\r\n  meterId:\"\",\r\n  deviceSerial:\"\",\r\n  iotId: \"\",\r\n  isDistribution: false,\r\n  status: \"\"\r\n}\r\nlet resetParams = {\r\n  current: 1,\r\n  companyHe: [],\r\n  shedId: \"\",\r\n  meterId:\"\",\r\n  deviceSerial:\"\",\r\n  iotId: \"\",\r\n  isDistribution: false,\r\n  status: \"\"\r\n}\r\n\r\nclass DeviceConffPage extends React.Component<Props> {\r\n\r\n  state = {\r\n    companyHeId: params.companyHe\r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.props.actions.getDeviceList(params)\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils, devices} = this.props\r\n    const {companyHeId} = this.state\r\n\r\n    return (\r\n      <JCard spinning={spinning}> \r\n        <div key=\"a\">\r\n          <SearchModular\r\n            before={<Button type=\"primary\">新增</Button>}\r\n            initialValues={params}\r\n            resetValues={resetParams}\r\n            submitSearch={(values:any)=>{\r\n              console.log(values)\r\n            }}\r\n            data={[\r\n              {name: \"isDistribution\", type: <Checkbox>待分配设备</Checkbox>, valuePropName: \"checked\"},\r\n              {label: \"状态\", name: \"status\", type: \"select\", selectList: [\r\n                {label: \"全部\", id: \"\"},\r\n                {label: \"启用\", id: 1},\r\n                {label: \"禁用\", id: 0},\r\n              ]},\r\n              {label: \"公司/项目\", name: \"companyHe\", type: <CompanyHeElement onChange={(v)=>{\r\n                this.setState({companyHeId:v})\r\n              }} />},\r\n              {label: \"电表\", name: \"meterId\", type: <CompanyHeMeterElement companyHeId={companyHeId} />},\r\n              {label: \"充电棚子\", name: \"shedId\", type: <CompanyHeSheElement companyHeId={companyHeId} />},\r\n              {label:\"序列号\", name: \"deviceSerial\", type: \"input\"},\r\n              {label:\"IotID\", name: \"iotId\", type: \"input\"},\r\n            ]}\r\n            \r\n          />\r\n        </div>\r\n        <div key=\"b\">\r\n          <Table size=\"small\" columns={devicesColumns} dataSource={devices?utils.addIndex(devices.list):[]}  \r\n          pagination={utils.Pagination(devices, page=>{\r\n            params.current = page\r\n            this.props.actions.getDeviceList(params)\r\n          })} /> \r\n        </div>\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getDeviceList}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    devices: state.project.devices,\r\n    utils: state.app.utils,\r\n    spinning: state.project.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(DeviceConffPage)"],"sourceRoot":""}