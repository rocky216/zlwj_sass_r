{"version":3,"sources":["admin/views/system/columns/index.tsx","admin/views/system/index.tsx"],"names":["systemColumns","title","dataIndex","render","item","ProjectLevel","TextArea","Input","Option","Select","params","current","SystemPage","state","addVisible","editVisible","detail","temIcon","id","this","props","actions","getSystems","_this","width","type","onClick","setState","to","values","addSystem","utils","submitFiles","OpenNotification","refresh","editSystem","spinning","systems","JCard","key","size","columns","getCol","dataSource","addIndex","list","pagination","Pagination","page","AddPage","visible","onCancel","onOk","addSubmit","bind","data","label","name","rules","value","UploadElement","initialValue","_","editSubmit","initialValues","echoFiles","React","Component","connect","system","app","dispatch","bindActionCreators"],"mappings":"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","file":"sass/js/12.478a00e5.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {ProjectLevel} from \"@public/common/mapper\"\r\n\r\nexport const systemColumns = [\r\n  {\r\n    title: \"系统代号\",\r\n    dataIndex: \"temCode\"\r\n  },\r\n  {\r\n    title: \"系统名称\",\r\n    dataIndex: \"temName\"\r\n  },\r\n  {\r\n    title: \"访问URL\",\r\n    dataIndex: \"temUrl\"\r\n  },\r\n  {\r\n    title: \"系统级别\",\r\n    dataIndex: \"temLevel\",\r\n    render:(item:any)=>ProjectLevel[item]\r\n  },\r\n  // {\r\n  //   title: \"应用公司与项目\",\r\n  //   dataIndex: \"key\"\r\n  // },\r\n  // {\r\n  //   title: \"系统权限\",\r\n  //   dataIndex: \"key\"\r\n  // },\r\n]","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport {IProps} from \"@public/common/interface\"\r\nimport {getSystems, addSystem, editSystem} from \"@admin/actions/systemAction\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { Button, Card, Input, Select, Table } from \"antd\"\r\nimport {systemColumns} from \"./columns\"\r\nimport AddPage from \"@admin/components/Page/AddPage\"\r\nimport UploadElement from \"@admin/components/Element/UploadElement\"\r\nimport _ from \"lodash\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst {TextArea} = Input\r\nconst {Option} = Select\r\n\r\ninterface Props extends IProps{\r\n  systems: any;\r\n}\r\n\r\nlet params={\r\n  current:1\r\n}\r\n\r\nclass SystemPage extends React.Component<Props> {\r\n  state = {\r\n    addVisible: false,\r\n    editVisible: false,\r\n    detail: {\r\n      temIcon: \"\",\r\n      id: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getSystems({params})\r\n  }\r\n\r\n  getCol(){\r\n    let _this = this\r\n    return [...systemColumns, {\r\n      title: \"操作\",\r\n      width: 150,\r\n      render(item:any) {\r\n        return (\r\n          <>\r\n            <Button type=\"link\" onClick={()=>_this.setState({detail: item, editVisible: true})}>编辑</Button>\r\n            <Link to={`/company/${item.id}/permisser`} >\r\n              <Button type=\"link\">权限包</Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      }\r\n    }]\r\n  }\r\n\r\n  addSubmit(values:any){\r\n    this.props.actions.addSystem({\r\n      ...values,\r\n      temIcon: this.props.utils.submitFiles(values.temIcon)\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getSystems({params, refresh: true})\r\n      this.setState({addVisible: false})\r\n    })\r\n  }\r\n  editSubmit(values:any){\r\n    this.props.actions.editSystem({\r\n      ...values,\r\n      id: this.state.detail.id,\r\n      temIcon: this.props.utils.submitFiles(values.temIcon)\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getSystems({params, refresh: true})\r\n      this.setState({editVisible: false})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils, systems} = this.props\r\n    const {addVisible, editVisible, detail} = this.state;\r\n    \r\n\r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <div key=\"a\">\r\n          <Card size=\"small\" title={<Button type=\"primary\" onClick={()=>this.setState({addVisible: true})}>新增</Button>}>\r\n            <Table size=\"small\" columns={this.getCol()} dataSource={systems?utils.addIndex(systems.list):[]} \r\n            pagination={utils.Pagination(systems, page=>{\r\n              params.current = page\r\n              this.props.actions.getSystems({params, refresh: true})\r\n            })}/>\r\n          </Card>\r\n        </div>\r\n\r\n\r\n        <AddPage\r\n          title=\"新增系统\"\r\n          spinning={spinning}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={this.addSubmit.bind(this)}\r\n          data={[\r\n            {label: \"系统代号\", name: \"temCode\", type: Input, rules: true},\r\n            {label: \"系统名称\", name: \"temName\", type: Input, rules: true},\r\n            {label: \"访问URL\", name: \"temUrl\", type: Input, rules: true},\r\n            {label: \"系统级别\", name: \"temType\", type: (\r\n              <Select>\r\n                <Option value=\"GS\">公司级别</Option>\r\n                <Option value=\"XM\">项目级别</Option>\r\n              </Select>\r\n            ), rules: true},\r\n            {label: \"图标\", name: \"temIcon\", type: <UploadElement/>, initialValue: []},\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n        />\r\n        \r\n        <AddPage\r\n          title=\"编辑系统\"\r\n          spinning={spinning}\r\n          visible={editVisible && _.size(detail)>1}\r\n          onCancel={()=>this.setState({editVisible: false})}\r\n          onOk={this.editSubmit.bind(this)}\r\n          initialValues={{...detail, temIcon: utils.echoFiles(detail.temIcon)}}\r\n          data={[\r\n            {label: \"系统代号\", name: \"temCode\", type: Input, rules: true},\r\n            {label: \"系统名称\", name: \"temName\", type: Input, rules: true},\r\n            {label: \"访问URL\", name: \"temUrl\", type: Input, rules: true},\r\n            {label: \"系统级别\", name: \"temType\", type: (\r\n              <Select>\r\n                <Option value=\"GS\">公司级别</Option>\r\n                <Option value=\"XM\">项目级别</Option>\r\n              </Select>\r\n            ), rules: true},\r\n            {label: \"图标\", name: \"temIcon\", type: <UploadElement/>, },\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n        />\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getSystems, addSystem, editSystem}, dispatch)\r\n  }\r\n} \r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    systems: state.system.systems,\r\n    spinning: state.system.spinning,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(SystemPage)"],"sourceRoot":""}