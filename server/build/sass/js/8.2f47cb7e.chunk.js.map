{"version":3,"sources":["admin/actions/userAction.ts","admin/views/users/columns/index.tsx","admin/components/Element/CompanyHeElement.tsx","admin/views/users/index.tsx"],"names":["optionList","opt","a","options","dispatch","keyName","obj","next","type","refresh","key","url","JSON","stringify","data","isCache","MC","get","USER_LOADING_START","fetch","put","USER_LOADING_END","_","size","index","findIndex","list","o","id","assign","USER_LOADING_NOT","console","log","addSysUser","params","getState","method","getSelectRoleMenus","getSelectUserCompany","getUserBalance","getUserIntegral","getSelectWxAccount","getPushConfig","editAccountInfo","getAccountInfo","editUserInfo","getUserInfo","getUsers","usersBalanceColumns","title","dataIndex","render","item","Income","ClientType","usersIntegralColumns","usersColumns","realName","Sex","gender","Status","connect","state","companyhe","app","actions","bindActionCreators","getCompanyHe","onChange","value","useEffect","changedValue","fieldNames","label","children","placeholder","Option","Select","current","userName","phone","status","userNick","account","companyId","heId","temId","UsersPage","formRef","React","createRef","addVisible","currentKey","filterSelect","authList","name","initialValue","userList","style","width","accountList","this","props","values","auth","Object","length","to","utils","OpenNotification","setState","spinning","users","JCard","AddPage","visible","onCancel","onOk","addUser","bind","InputNumber","rules","Input","display","justifyContent","onClick","className","layout","ref","onFinish","handleSearch","Item","v","map","ghost","htmlType","columns","getCol","dataSource","addIndex","pagination","Pagination","pages","Component","user"],"mappings":"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","file":"sass/js/8.2f47cb7e.chunk.js","sourcesContent":["import {USER_LOADING_START, USER_LOADING_END, USER_LOADING_NOT} from \"@admin/constant/user\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\nimport _ from \"lodash\"\r\n\r\n\r\n/**\r\n * list API公共方法\r\n * \r\n */\r\ninterface OptionListProps{\r\n  options: any;\r\n  dispatch:any;\r\n  keyName: string;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n\r\ninterface ParamsListProps{\r\n  params: any;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n// options:any,keyName:string, obj?:any, next?:(...arg0:any)=>void\r\nconst optionList = async (opt: OptionListProps)=>{\r\n    const {options,dispatch, keyName, obj, next, type, refresh} = opt;\r\n    try{\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n    if(!isCache || refresh){\r\n      dispatch({\r\n        type: USER_LOADING_START\r\n      })\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      MC.put(key, data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n        [keyName]: data\r\n      })\r\n    }else{\r\n      if(obj && _.size(obj)){\r\n        let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n        if(type==\"edit\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }else if(type==\"add\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }\r\n\r\n        MC.put(key, isCache)\r\n        dispatch({\r\n          type: USER_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: USER_LOADING_END,\r\n          [keyName]: isCache\r\n        })\r\n      }\r\n      \r\n    }\r\n    \r\n  }catch(e){\r\n    console.log(e)\r\n    dispatch({type: USER_LOADING_END})\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport const addSysUser = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-user/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getUserSystemAuth = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-user-system/userSystemAuth\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addRoleMenus = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-menu/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSelectRoleMenus = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company-system-role-menu/selectRoleMenus\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getSelectUserCompany = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-user/selectUserAuth\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"usercompany\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\n\r\nexport const getUserBalance = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-balance-order/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"balance\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\nexport const getUserIntegral = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-integral-order/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"integral\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\n\r\nexport const getSelectWxAccount = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-wx-user/selectWxAccount\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const getPushConfig = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-jg-register/pushConfig\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const editAccountInfo = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-user/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAccountInfo = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-user/getById\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const editUserInfo = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-user-info/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getUserInfo = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: USER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-user-info/selectUserInfo\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: USER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: USER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getUsers = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-user/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"users\", obj, next, refresh, type})\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {Tag} from \"antd\"\r\nimport { ColumnsType } from 'antd/es/table';\r\nimport {Status, ClientType, Income, Sex} from \"@public/common/mapper\"\r\n\r\ninterface ColumsProps {\r\n  title:string;\r\n  dataIndex: string;\r\n  render?:Function\r\n}\r\n\r\n\r\nexport const usersBalanceColumns:ColumnsType<ColumsProps> = [\r\n  {\r\n    title: \"时间\",\r\n    dataIndex: \"buildTime\",\r\n  },\r\n  {\r\n    title: \"收支类型\",\r\n    dataIndex: \"operaType\",\r\n    render: (item:string)=><Tag >{Income[item]}</Tag>\r\n  },\r\n  {\r\n    title: \"关联信息\",\r\n    dataIndex: \"linkInfo\"\r\n  },\r\n  {\r\n    title: \"类型\",\r\n    dataIndex: \"targetType\",\r\n    render: (item:string)=><Tag >{ClientType[item]}</Tag>\r\n  },\r\n  {\r\n    title: \"起始余额\",\r\n    dataIndex: \"initBalance\",\r\n  },\r\n  {\r\n    title: \"变更余额\",\r\n    dataIndex: \"changeBalance\",\r\n  },\r\n  {\r\n    title: \"实时余额\",\r\n    dataIndex: \"finalBalance\",\r\n  },\r\n]\r\n\r\nexport const usersIntegralColumns:ColumnsType<ColumsProps> = [\r\n  {\r\n    title: \"时间\",\r\n    dataIndex: \"buildTime\",\r\n  },\r\n  {\r\n    title: \"收支类型\",\r\n    dataIndex: \"targetType\",\r\n  },\r\n  {\r\n    title: \"关联信息\",\r\n    dataIndex: \"linkInfo\"\r\n  },\r\n  {\r\n    title: \"类型\",\r\n    dataIndex: \"targetType\",\r\n    render: (item:string)=>ClientType[item]\r\n  },\r\n  {\r\n    title: \"起始积分\",\r\n    dataIndex: \"initIntegral\",\r\n  },\r\n  {\r\n    title: \"变更积分\",\r\n    dataIndex: \"changeIntegral\",\r\n  },\r\n  {\r\n    title: \"实时积分\",\r\n    dataIndex: \"finalIntegral\",\r\n  },\r\n]\r\n\r\nexport const usersColumns:ColumnsType<ColumsProps> = [\r\n  {\r\n    title: \"姓名\",\r\n    dataIndex: \"sysUserInfo\",\r\n    render(item) {\r\n      return item.realName;\r\n    }\r\n  },\r\n  {\r\n    title: \"手机号\",\r\n    dataIndex: \"phoneAccount\",\r\n  },\r\n  {\r\n    title: \"邮箱\",\r\n    dataIndex: \"emailAccount\"\r\n  },\r\n  {\r\n    title: \"性别\",\r\n    dataIndex: \"sysUserInfo\",\r\n    render: item=>Sex[item.gender]\r\n  },\r\n  {\r\n    title: \"积分\",\r\n    dataIndex: \"sysUserIntegral\"\r\n  },\r\n  {\r\n    title: \"状态\",\r\n    dataIndex: \"status\",\r\n    render: (item:number)=> Status[item]\r\n  },\r\n]","import React, { useEffect } from \"react\"\r\nimport {Cascader} from \"antd\"\r\nimport {getCompanyHe} from \"@admin/actions/appAction\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\n\r\n\r\ninterface Props {\r\n  companyhe: any[];\r\n  actions: any;\r\n  onChange?:(value:any)=>void;\r\n  value?:string[];\r\n}\r\n\r\nconst CompanyHeElement:React.FC<Props> = ({\r\n  onChange,\r\n  value=[],\r\n  actions,\r\n  companyhe\r\n})=>{\r\n\r\n  useEffect(()=>{\r\n    actions.getCompanyHe({})\r\n  }, [])\r\n\r\n  const triggerChange = (changedValue:any) => {\r\n    if (onChange) {\r\n      onChange(changedValue );\r\n    }\r\n  };\r\n\r\n  return <Cascader \r\n          value={value} \r\n          options={companyhe || []} \r\n          onChange={triggerChange}\r\n          fieldNames={{ label: 'name', value: 'id', children: 'items' }} \r\n          placeholder=\"请选择公司/小区\"\r\n        />\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyHe}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    companyhe: state.app.companyhe\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyHeElement)","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {Button, Card, Form, Input, InputNumber, Select, Table} from \"antd\"\r\nimport {usersColumns} from \"./columns\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {getUsers, addSysUser} from \"@admin/actions/userAction\"\r\nimport {IProps} from \"@public/common/interface\"\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport AddPage from \"@admin/components/Page/AddPage\"\r\nimport CompanyHeElement from \"@admin/components/Element/CompanyHeElement\"\r\n\r\nconst {Option} = Select\r\n\r\ninterface Props extends IProps {\r\n  users:any;\r\n}\r\n\r\nlet params = {\r\n  current: 1,\r\n  userName: \"\",\r\n  phone: \"\",\r\n  status: \"\",\r\n  userNick: \"\",\r\n  account: \"\",\r\n  companyId: \"\",\r\n  heId: \"\",\r\n  temId: \"\",\r\n}\r\n\r\n\r\nclass UsersPage extends React.Component<Props> {\r\n  formRef = React.createRef<FormInstance>()\r\n\r\n  state:any={\r\n    addVisible: false,\r\n    currentKey: \"authList\",\r\n    filterSelect: [\r\n      {label: \"权限查询\", value: \"authList\"},\r\n      {label: \"用户查询\", value: \"userList\"},\r\n      {label: \"账户查询\", value: \"accountList\"}\r\n    ],\r\n    authList: [\r\n      {label: \"公司项区权限\", name: \"auth\", type: <CompanyHeElement/>, \r\n        initialValue: params.companyId?[params.companyId,params.heId]:[]},\r\n    ],\r\n    userList: [\r\n      {label: \"姓名\", name: \"userName\", type: <Input/>},\r\n      {label: \"手机号\", name: \"phone\", type: <InputNumber style={{width: 130}}/>},\r\n      {label: \"昵称\", name: \"userNick\", type: <Input/>},\r\n    ],\r\n    accountList: [\r\n      {label: \"唯一ID\", name: \"temId\", type: <Input/>},\r\n      {label: \"账号\", name: \"account\", type: <Input/>},\r\n      {label: \"状态\", name: \"status\", type: (\r\n        <Select >\r\n          <Option value=\"\">全部</Option>\r\n          <Option value={1}>启用</Option>\r\n          <Option value={0}>禁用</Option>\r\n        </Select>\r\n      ), initialValue:\"\" },\r\n    ],\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n    this.props.actions.getUsers({params, refresh:true}) \r\n    \r\n  }\r\n\r\n  handleSearch(values:any){\r\n    const {currentKey} = this.state\r\n    const {auth, userName, phone, userNick, status, account, temId} = values\r\n    if(currentKey == \"authList\"){\r\n      params = Object.assign({params, \r\n        companyId: auth.length?auth[0]:\"\",\r\n        heId: auth.length?auth[1]:\"\",\r\n      })\r\n      this.props.actions.getUsers({params, refresh: true})\r\n      return\r\n    }\r\n    if(currentKey == \"userList\"){\r\n      params = Object.assign({params, \r\n        userName,\r\n        phone,\r\n        userNick,\r\n      })\r\n      this.props.actions.getUsers({params, refresh: true})\r\n      return\r\n    }\r\n    if(currentKey == \"accountList\"){\r\n      params = Object.assign({params, \r\n        status,\r\n        account,\r\n        temId,\r\n      })\r\n      this.props.actions.getUsers({params, refresh: true})\r\n      return\r\n    }\r\n  }\r\n\r\n  getCol(){\r\n    return [...usersColumns, {\r\n      title: \"操作\",\r\n      width: 100,\r\n      render(item:any) {\r\n        return (\r\n          <Link to={`/users/${item.id}/detail/${item.temId}/base`}>\r\n            <Button type=\"link\">用户详情</Button>\r\n          </Link>\r\n        )\r\n      }\r\n    }]\r\n  }\r\n\r\n  addUser(values:any){\r\n    this.props.actions.addSysUser({\r\n      ...values,\r\n    }, ()=>{\r\n      this.props.actions.getUsers({params, refresh:true}) \r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({addVisible: false})\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {spinning, utils, users} = this.props;\r\n    const {filterSelect, currentKey, addVisible} = this.state\r\n    \r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <AddPage\r\n          title=\"新增用户\"\r\n          spinning={false}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={this.addUser.bind(this)}\r\n          data={[\r\n            {label:\"手机号\", name: \"phoneAccount\", type: InputNumber, rules: true},\r\n            {label:\"姓名\", name: \"userName\", type: Input},\r\n            {label:\"昵称\", name: \"userNick\", type: Input},\r\n            {label:\"性别\", name: \"gender\", type: (\r\n              <Select>\r\n                <Option value={1}>男</Option>\r\n                <Option value={2}>女</Option>\r\n                <Option value={3}>未知</Option>\r\n              </Select>\r\n            )},\r\n          ]}\r\n        />\r\n\r\n        <div key=\"a\">\r\n          <Card size=\"small\" >\r\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n              <Button type=\"primary\" onClick={()=>this.setState({addVisible: true})}>新增用户</Button>\r\n              <div>\r\n                <Form className=\"flexend\" layout=\"inline\" ref={this.formRef} onFinish={this.handleSearch.bind(this)} >\r\n                  <Form.Item label=\"搜索类型\" name=\"type\" initialValue={currentKey}>\r\n                    <Select onChange={(v)=>{\r\n                      this.setState({currentKey: v})\r\n                    }}>\r\n                      {filterSelect.map((item:any)=>(\r\n                        <Option key={item.value} value={item.value}>{item.label}</Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  {this.state[currentKey].map((item:any, index:number)=>(\r\n                    <Form.Item key={index} name={item.name} label={item.label} initialValue={item.initialValue}  >\r\n                      {item.type}\r\n                    </Form.Item>\r\n                  ))}\r\n                  <Form.Item>\r\n                    <Button ghost type=\"primary\" htmlType=\"submit\">搜索</Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n        <div key=\"b\">\r\n          <Card size=\"small\"  >\r\n            <Table size=\"small\" columns={this.getCol()} dataSource={users?utils.addIndex(users.list):[]} \r\n            pagination={utils.Pagination(users, (pages:number)=>{\r\n              params.current = pages;\r\n              this.props.actions.getUsers({params, refresh: true})\r\n            })}/>\r\n          </Card>\r\n        </div>\r\n      </JCard>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getUsers, addSysUser}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    users: state.user.users,\r\n    spinning: state.user.spinning,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(UsersPage)"],"sourceRoot":""}