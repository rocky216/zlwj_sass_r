{"version":3,"sources":["admin/constant/app.ts","admin/views/home/index.tsx","admin/constant/company.ts","admin/actions/companyAction.ts","admin/components/Element/Region.tsx","admin/components/Page/MenuTree.tsx","admin/components/Element/SystemElement.tsx","admin/views/company/detial/baseinfo.tsx","admin/views/company/columns/index.tsx","admin/views/company/detial/companyproject.tsx","admin/views/company/detial/companymessage.tsx","admin/views/company/detial/companyrole.tsx","admin/views/company/detial/index.tsx","admin/views/company/index.tsx","admin/routers/routeData.tsx","public/pages/error/index.tsx","admin/routers/index.tsx","sass/views/index.tsx","admin/reducers/appReducer.ts","admin/reducers/companyReducer.ts","admin/reducers/userReducer.ts","admin/reducers/systemReducer.ts","admin/reducers/messageReducer.ts","admin/reducers/otherReducer.ts","admin/reducers/index.ts","sass/store/index.ts","sass/index.tsx","admin/components/Page/AddPage.tsx","admin/components/JCard/index.tsx","admin/actions/systemAction.ts","admin/constant/message.ts","admin/components/Element/UploadElement.tsx","admin/components/Element/SelectCompany.tsx","admin/actions/appAction.ts","admin/constant/user.ts","admin/constant/other.ts","admin/constant/system.ts","public/common/mapper.ts","admin/components/Submit/Search.tsx","public/utils/http.ts","public/utils/index.ts"],"names":["APP_LOADING_START","APP_LOADING_END","APP_LOADING_NOT","config","data","year","value","xField","yField","point","size","shape","label","style","fill","HomePage","console","log","this","props","JCard","spinning","key","React","Component","connect","state","COMPANY_LOADING_START","COMPANY_LOADING_END","COMPANY_LOADING_NOT","optionList","opt","a","options","dispatch","keyName","obj","next","type","refresh","url","JSON","stringify","isCache","MC","get","fetch","put","_","index","findIndex","list","o","id","assign","getCompanyRole","getState","params","method","addCompanyAuthPackage","editCompanyProject","addCompanyProject","getCompanyProject","editCompanyBase","getCompanyDetail","updateCompanyStatus","addCompany","getCompanys","companyAddress","join","region","app","actions","bindActionCreators","getRegions","onChange","useEffect","defaultValue","changedValue","fieldNames","children","placeholder","menutree","system","getSelectChildTree","arr","systemId","checkable","disabled","defaultExpandAll","blockNode","treeData","recursion","each","item","title","menuName","childMenu","length","active","Option","Select","systems","getSystems","pageSize","minWidth","showSearch","filterOption","input","option","toLowerCase","indexOf","val","map","temName","TextArea","Input","layout","labelCol","span","wrapperCol","CompanyBaseInfo","formRef","createRef","formList","name","UploadElement","SelectCompany","Region","companyDetail","logo","addVisible","match","res","split","setState","values","utils","submitFiles","OpenNotification","extra","ghost","onClick","current","submit","ref","onFinish","onFinishBase","bind","initialValues","uid","Item","AddPage","visible","onCancel","onOk","selectList","DatePicker","companyProjectColumns","dataIndex","render","Status","companyColumns","CompanyProject","editVisible","detail","itemAddress","companyId","_this","companyproject","appSpinning","addOk","initialValue","InputNumber","editOk","columns","getCol","dataSource","addIndex","pagination","Pagination","page","company","CompanyMessage","CompanyRole","userAuthVoList","selectable","className","PlusOutlined","DeleteOutlined","companyrole","titleRender","handleData","onSelect","handleSelect","TabPane","Tabs","CompanyDetailPage","tabs","history","push","tabBarExtraContent","to","tab","path","component","from","status","restParams","CompanyPage","Object","rows","changeStatus","companys","resourceType","fileType","linkType","fileSize","isFlag","rules","submitAdd","before","resetValues","handleSearch","lazy","loader","loadable","cacheKey","fallback","routes","exact","Home","routeData","handleRoute","ErrorPage","margin","width","src","preview","Routers","Index","initialState","token","getToken","echoFiles","appReducer","action","companyReducer","USER_LOADING_START","USER_LOADING_END","USER_LOADING_NOT","systemReducer","SYSTEM_LOADING_START","SYSTEM_LOADING_END","SYSTEM_LOADING_NOT","messageReducer","MESSAGE_LOADING_START","MESSAGE_LOADING_END","MESSAGE_LOADING_NOT","otherReducer","OTHER_LOADING_START","OTHER_LOADING_END","OTHER_LOADING_NOT","combineReducers","user","userReducer","message","other","createStore","rootReducer","applyMiddleware","reduxThunk","ReactDOM","store","locale","zhCN","document","getElementById","RangePicker","modalVisible","elem","required","forceRender","destroyOnClose","confirmLoading","afterClose","handleRules","getElement","nextProps","prevState","delay","tip","appear","savePackageMenu","findPackageMenu","deleteSelectChildTree","editSelectChildTree","addSelectChildTree","deleteSystemPackage","editSystemPackage","addSystemPackage","getSystemPackage","editSystem","addSystem","more","useState","loading","setLoading","uploadButton","marginTop","listType","fileList","e","Array","isArray","file","response","code","msg","imgArr","newArr","dowloadHttpUrl","fileName","showUploadList","onRemove","v","filter","beforeUpload","icon","getCompanyHe","companyhe","Sex","ClientType","Income","ProjectLevel","DefaultStatus","MessageType","Search","Form","useForm","form","marginRight","marginBottom","getNode","htmlType","setFieldsValue","pending","instance","axios","CancelToken","create","timeout","responseType","interceptors","request","use","error","Promise","reject","cancel","splice","removePending","errorCode","undefined","pageInfo","hasIn","total","handleArr","load","notification","resolve","toUpperCase","post","qs","createInstance","then","window","_navigation","catch","err"],"mappings":"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","file":"sass/js/main.76c47bc2.chunk.js","sourcesContent":["export const APP_LOADING_START = 'APP_LOADING_START'\r\nexport const APP_LOADING_END = 'APP_LOADING_END'\r\nexport const APP_LOADING_NOT = 'APP_LOADING_NOT'","import React from \"react\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport { Line } from '@ant-design/charts';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst data = [\r\n  { year: '1991', value: 3 },\r\n  { year: '1992', value: 4 },\r\n  { year: '1993', value: 3.5 },\r\n  { year: '1994', value: 5 },\r\n  { year: '1995', value: 4.9 },\r\n  { year: '1996', value: 6 },\r\n  { year: '1997', value: 7 },\r\n  { year: '1998', value: 9 },\r\n  { year: '1999', value: 13 },\r\n];\r\n\r\nconst config = {\r\n  data,\r\n  xField: 'year',\r\n  yField: 'value',\r\n  point: {\r\n    size: 5,\r\n    shape: 'diamond',\r\n  },\r\n  label: {\r\n    style: {\r\n      fill: '#aaa',\r\n    },\r\n  },\r\n};\r\nclass HomePage extends React.Component {\r\n  componentDidMount(){\r\n    console.log(this.props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <JCard spinning={false} >\r\n        <div key=\"a\">\r\n          <Line {...config} />\r\n        </div>\r\n        <div key=\"b\">Queue 111Demo</div>\r\n        <div key=\"c\">Queue Demo</div>\r\n        <div key=\"d\">Queue Demo</div>\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {\r\n  console.log(state)\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePage)","export const COMPANY_LOADING_START = 'COMPANY_LOADING_START'\r\nexport const COMPANY_LOADING_END = 'COMPANY_LOADING_END'\r\nexport const COMPANY_LOADING_NOT = 'COMPANY_LOADING_NOT'","import {COMPANY_LOADING_START, COMPANY_LOADING_END, COMPANY_LOADING_NOT} from \"@admin/constant/company\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\nimport _ from \"lodash\"\r\n\r\n\r\n/**\r\n * list API公共方法\r\n * \r\n */\r\ninterface OptionListProps{\r\n  options: any;\r\n  dispatch:any;\r\n  keyName: string;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n\r\ninterface ParamsListProps{\r\n  params: any;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n// options:any,keyName:string, obj?:any, next?:(...arg0:any)=>void\r\nconst optionList = async (opt: OptionListProps)=>{\r\n    const {options,dispatch, keyName, obj, next, type, refresh} = opt;\r\n    try{\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n    if(!isCache || refresh){\r\n      dispatch({\r\n        type: COMPANY_LOADING_START\r\n      })\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      MC.put(key, data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n        [keyName]: data\r\n      })\r\n    }else{\r\n      if(obj && _.size(obj)){\r\n        let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n        if(type==\"edit\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }else if(type==\"add\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }\r\n\r\n        MC.put(key, isCache)\r\n        dispatch({\r\n          type: COMPANY_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: COMPANY_LOADING_END,\r\n          [keyName]: isCache\r\n        })\r\n      }\r\n      \r\n    }\r\n    \r\n  }catch(e){\r\n    console.log(e)\r\n    dispatch({type: COMPANY_LOADING_END})\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport const getCompanyRole = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-company/selectSystem\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"companyrole\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\n\r\nexport const addCompanyAuthPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company-package/add\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const editCompanyProject = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-item/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addCompanyProject = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-item/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanyProject = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-item/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"companyproject\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\n\r\nexport const editCompanyBase = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanyDetail = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/getById\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateCompanyStatus = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/updateStatus\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addCompany = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanys = (opt:ParamsListProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    \r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-company/page\",\r\n      method: \"get\",\r\n      data: {...params, companyAddress: params.companyAddress.join()}\r\n    }\r\n    optionList({options: options,dispatch,keyName: \"companys\", obj: obj, next:next, refresh:refresh, type:type})\r\n    \r\n    // try{\r\n    //   const options:any = {\r\n    //     url: \"/zlwj/api/system/sys/sys-company/page\",\r\n    //     method: \"get\",\r\n    //     data: params\r\n    //   }\r\n    //   let key = options.url+JSON.stringify(options.data)\r\n    //   let isCache = MC.get(key)\r\n      \r\n    //   if(!isCache){\r\n    //     dispatch({\r\n    //       type: COMPANY_LOADING_START\r\n    //     })\r\n    //     let data:any = await fetch(options)\r\n    //     MC.put(key, data)\r\n    //     dispatch({\r\n    //       type: COMPANY_LOADING_END,\r\n    //       companys: data\r\n    //     })\r\n    //   }else{\r\n    //     if(obj){\r\n    //       let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n    //       isCache.list[index] = _.assign(isCache.list[index], obj);\r\n    //       MC.put(key, isCache)\r\n    //       dispatch({\r\n    //         type: COMPANY_LOADING_NOT,\r\n    //         companys: isCache\r\n    //       })\r\n    //     }else{\r\n    //       dispatch({\r\n    //         type: COMPANY_LOADING_END,\r\n    //         companys: isCache\r\n    //       })\r\n    //     }\r\n        \r\n    //   }\r\n      \r\n    // }catch(e){\r\n    //   console.log(e)\r\n    //   dispatch({type: COMPANY_LOADING_END})\r\n    // }\r\n  }\r\n}\r\n","/**\r\n * onChange  地区框改变回调\r\n */\r\n\r\nimport React, {useEffect, useState} from \"react\"\r\nimport {Cascader} from \"antd\"\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {getRegions} from \"@admin/actions/appAction\"\r\n\r\n\r\n\r\ninterface Props {\r\n  actions: any;\r\n  region: any[];\r\n  onChange?: (value:any)=>void;\r\n  value?:any\r\n}\r\n\r\nconst RegionElement:React.FC<Props> = ({\r\n  actions,\r\n  region,\r\n  onChange,\r\n  value\r\n})=>{\r\n  \r\n  useEffect(() => {\r\n    actions.getRegions({})\r\n  }, [])\r\n\r\n  const triggerChange = (changedValue:any) => {\r\n    if (onChange) {\r\n      onChange(changedValue );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Cascader\r\n      defaultValue={value}\r\n      value={value} \r\n      onChange={triggerChange}\r\n      options={region} \r\n      fieldNames={{ label: 'name', value: 'code', children: 'child' }}\r\n      placeholder=\"请选择省/市/区\"/>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n    actions: bindActionCreators({getRegions}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {\r\n  return {\r\n    region: state.app.region\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionElement);","import React, { useEffect } from \"react\"\r\nimport { Skeleton, Tree } from \"antd\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {getSelectChildTree} from \"@admin/actions/systemAction\"\r\nimport _ from \"lodash\";\r\n\r\ninterface Props {\r\n  actions:any;\r\n  systemId: any;\r\n  menutree:any;\r\n  checkable?:boolean;\r\n  disabled?:boolean;\r\n  defaultExpandAll?:boolean;\r\n}\r\n\r\nconst MenuTree:React.FC<Props> = ({\r\n  actions,\r\n  systemId,\r\n  menutree,\r\n  checkable,\r\n  disabled,\r\n  defaultExpandAll\r\n})=>{\r\n\r\n  const handleData = (arr:any[])=>{\r\n\r\n    function recursion(arr:any[]){\r\n      _.each(arr, (item,index)=>{\r\n        item.title = item.menuName\r\n        item.key = item.id\r\n        item.children = item.childMenu\r\n        if(item.childMenu && item.childMenu.length){\r\n          recursion(item.childMenu)\r\n        }\r\n      })\r\n    }\r\n    recursion(arr)\r\n    return arr;\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    \r\n    if(systemId){\r\n      \r\n      actions.getSelectChildTree({params:{systemId}})\r\n    }\r\n  }, [systemId])\r\n\r\n  return (\r\n    menutree?\r\n    <Tree\r\n      disabled={disabled}\r\n      checkable={checkable}\r\n      defaultExpandAll\r\n      blockNode\r\n      treeData={handleData(menutree)}\r\n    />: <Skeleton active />\r\n  )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getSelectChildTree}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state: any)=>{\r\n  return {\r\n    menutree: state.system.menutree\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(MenuTree);","import React, { useEffect, useState } from \"react\"\r\nimport { Select } from \"antd\"\r\nimport { connect } from \"react-redux\"\r\nimport {IState} from \"@public/common/interface\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {getSystems} from \"@admin/actions/systemAction\"\r\n\r\n\r\nconst {Option} = Select\r\n\r\ninterface Props {\r\n  actions:any;\r\n  systems: any;\r\n  onChange?:(arg1:any)=>void;\r\n  value?: any;\r\n}\r\n\r\nconst SystemElement:React.FC<Props> = ({actions, systems, onChange, value})=>{\r\n\r\n  useEffect(() => {\r\n    actions.getSystems({pageSize: 1000})\r\n  }, [])\r\n\r\n  const hanleChange = (val:any)=>{\r\n    if(onChange){\r\n      onChange(val);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      style={{minWidth: 100}}\r\n      showSearch\r\n      filterOption={(input, option:any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n      value={value}\r\n      onChange={hanleChange}\r\n    >\r\n      <Option value=\"\">全部</Option>\r\n      {systems?systems.list.map((item:any)=>(\r\n        <Option key={item.id} value={item.id}>{item.temName}</Option>\r\n      )):null}\r\n    </Select>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n    actions: bindActionCreators({getSystems }, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {\r\n  return {\r\n    systems: state.system.systems\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemElement)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {getCompanyDetail, editCompanyBase, addCompanyAuthPackage} from \"@admin/actions/companyAction\"\r\nimport { IProps } from \"@public/common/interface\";\r\nimport { Button, Card, Col, DatePicker, Form, Input, Row, Select, Skeleton } from \"antd\"\r\nimport SelectCompany from \"@admin/components/Element/SelectCompany\"\r\nimport UploadElement from \"@admin/components/Element/UploadElement\";\r\nimport _ from \"lodash\"\r\nimport Region from \"@admin/components/Element/Region\"\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport MenuTree from \"@admin/components/Page/MenuTree\";\r\nimport AddPage from \"@admin/components/Page/AddPage\";\r\nimport SystemElement from \"@admin/components/Element/SystemElement\";\r\n\r\nconst {TextArea} = Input\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 19 },\r\n};\r\n\r\n\r\ninterface Props extends IProps {\r\n  companyDetail: any;\r\n}\r\n\r\n\r\n\r\nclass CompanyBaseInfo extends React.Component<Props> {\r\n\r\n\r\n  formRef = React.createRef<FormInstance>()\r\n\r\n  state = {\r\n    formList: [\r\n      {label: \"公司logo\", name: \"logo\", type: <UploadElement />},\r\n      {label: \"公司名称\",name: \"name\", type: <Input/>},\r\n      {label: \"公司简称\",name: \"nickname\", type: <Input/>},\r\n      {label: \"上级公司\",name: \"parentId\", type: <SelectCompany/>},\r\n      {label: \"省/市/区\",name: \"companyAddress\", type: <Region/>},\r\n      {label: \"公司地址\",name: \"addressDetail\", type: <TextArea/>},\r\n      {label: \"经度\",name: \"longitude\", type: <Input/>},\r\n      {label: \"纬度\",name: \"latitude\", type: <Input/>},\r\n    ],\r\n    companyDetail: {\r\n      logo: \"\"\r\n    },\r\n    addVisible: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getCompanyDetail({id: this.props.match.params.id}, (res:any)=>{\r\n      res.companyAddress = res.companyAddress?res.companyAddress.split(\",\"):[]\r\n      this.setState({companyDetail: res})\r\n    })\r\n  }\r\n\r\n  onFinishBase(values:any){\r\n    \r\n    const {companyAddress, logo} = values;\r\n    this.props.actions.editCompanyBase({\r\n      ...values,\r\n      id: this.props.match.params.id,\r\n      logo: this.props.utils.submitFiles(logo),\r\n      companyAddress: companyAddress?companyAddress.join():\"\"\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {companyDetail,  addVisible} = this.state;\r\n    \r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col span={8}>\r\n            <Card size=\"small\" extra={<Button ghost type=\"primary\" onClick={()=>this.formRef.current?.submit()}>保存</Button>}>\r\n              {_.size(companyDetail)>2?\r\n              <Form {...layout} ref={this.formRef}\r\n                onFinish={this.onFinishBase.bind(this)}\r\n                initialValues={{...companyDetail, logo: [{url: companyDetail.logo, uid: -1, name: \"a\"}]}}>\r\n                {this.state.formList.map((item, index)=>(\r\n                  <Form.Item key={index} label={item.label} name={item.name} >\r\n                    {item.type}\r\n                  </Form.Item>\r\n                ))}\r\n              </Form>:<Skeleton active />}\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card size=\"small\" title=\"系统权限包\" \r\n              extra={<Button type=\"primary\" onClick={()=>this.setState({addVisible:true})}>新增权限包</Button>}>\r\n              \r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card size=\"small\">\r\n              <MenuTree\r\n                disabled\r\n                checkable\r\n                defaultExpandAll\r\n                systemId={\"25\"}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <AddPage\r\n          title=\"新增权限包\"\r\n          spinning={false}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={()=>{}}\r\n          data={[\r\n            {label: \"选择系统\", name: \"package\", type: <SystemElement  />},\r\n            {label: \"选择权限包\", name: \"packageId\", type: <SystemElement  />},\r\n            {label: \"有效期\", name: \"isLong\", type: Select, selectList: [\r\n              {name: \"永久有效\", id: \"Y\"},\r\n              {name: \"有效时间\", id: \"N\"},\r\n            ]},\r\n            {label: \"有效期至\", name: \"expireTime\", type: DatePicker},\r\n          ]}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyDetail, editCompanyBase, addCompanyAuthPackage}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyBaseInfo)","import {Status} from \"@public/common/mapper\"\r\n\r\n\r\nexport const companyProjectColumns = [\r\n  {\r\n    title: \"项目编号\",\r\n    dataIndex: \"key\"\r\n  },\r\n  {\r\n    title: \"项目名称\",\r\n    dataIndex: \"name\"\r\n  },\r\n  {\r\n    title: \"简称\",\r\n    dataIndex: \"nickname\"\r\n  },\r\n  {\r\n    title: \"项目联系信息\",\r\n    dataIndex: \"parentName\"\r\n  },\r\n  {\r\n    title: \"楼栋统计\",\r\n    dataIndex: \"addressDetail\"\r\n  },\r\n  {\r\n    title: \"资产合计\",\r\n    dataIndex: \"zIndex\"\r\n  },\r\n  {\r\n    title: \"系统分库\",\r\n    dataIndex: \"itemCount\"\r\n  },\r\n  {\r\n    title: \"关联员工\",\r\n    dataIndex: \"systemCount\"\r\n  },\r\n  {\r\n    title: \"状态\",\r\n    dataIndex: \"status\",\r\n    render:(item:number)=>Status[item]\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n]\r\nexport const companyColumns = [\r\n  {\r\n    title: \"公司logo\",\r\n    dataIndex: \"key\"\r\n  },\r\n  {\r\n    title: \"公司名称\",\r\n    dataIndex: \"name\"\r\n  },\r\n  {\r\n    title: \"简称\",\r\n    dataIndex: \"nickname\"\r\n  },\r\n  {\r\n    title: \"上级公司\",\r\n    dataIndex: \"parentName\"\r\n  },\r\n  {\r\n    title: \"公司联系信息\",\r\n    dataIndex: \"addressDetail\"\r\n  },\r\n  {\r\n    title: \"系统分库\",\r\n    dataIndex: \"zIndex\"\r\n  },\r\n  {\r\n    title: \"下属项目\",\r\n    dataIndex: \"itemCount\"\r\n  },\r\n  {\r\n    title: \"系统权限\",\r\n    dataIndex: \"systemCount\"\r\n  },\r\n  {\r\n    title: \"短信\",\r\n    dataIndex: \"smsCount\"\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n]","\r\nimport React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { Button, Card, Input, InputNumber, Table } from \"antd\";\r\nimport {companyProjectColumns} from \"../columns\"\r\nimport {getCompanyProject, addCompanyProject, editCompanyProject} from \"@admin/actions/companyAction\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport { IProps } from \"@public/common/interface\";\r\nimport AddPage from \"@admin/components/Page/AddPage\"\r\nimport Region from \"@admin/components/Element/Region\"\r\nimport _ from \"lodash\";\r\n\r\nconst {TextArea} = Input\r\n\r\ninterface Props extends IProps {\r\n  companyproject: any;\r\n  appSpinning: boolean;\r\n}\r\n\r\n\r\nclass CompanyProject extends React.Component<Props> {\r\n\r\n  state = {\r\n    addVisible: false,\r\n    editVisible: false,\r\n    detail: {\r\n      id: \"\",\r\n      itemAddress: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getCompanyProject({params: {companyId: this.props.match.params.id}})\r\n  }\r\n\r\n  addOk(values:any){\r\n    this.props.actions.addCompanyProject({\r\n      ...values,\r\n      companyId: this.props.match.params.id,\r\n      itemAddress: values.itemAddress.join()\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getCompanyProject({\r\n        params: {companyId: this.props.match.params.id},\r\n        refresh: true\r\n      })\r\n      this.setState({addVisible: false})\r\n    })\r\n  }\r\n\r\n  editOk(values:any){\r\n    console.log(values)\r\n    this.props.actions.editCompanyProject({\r\n      ...values,\r\n      id: this.state.detail.id,\r\n      companyId: this.props.match.params.id,\r\n      itemAddress: values.itemAddress.join()\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getCompanyProject({\r\n        params: {companyId: this.props.match.params.id},\r\n        refresh: true\r\n      })\r\n      this.setState({editVisible: false})\r\n    })\r\n  }\r\n\r\n  getCol(){\r\n    let _this = this;\r\n    return [...companyProjectColumns, {\r\n      title: \"操作\",\r\n      render(item:any) {\r\n        return <Button type=\"link\" size=\"small\" onClick={()=>_this.setState({editVisible: true, detail: item})}>编辑</Button>\r\n      }\r\n    }]\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils, companyproject, appSpinning, match} = this.props\r\n    const {addVisible, detail, editVisible} = this.state;\r\n    console.log(detail)\r\n    return (\r\n      <>\r\n        <AddPage\r\n          title=\"新增公司项目\"\r\n          spinning={appSpinning}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={this.addOk.bind(this)}\r\n          data={[\r\n            {label: \"项目名称\", name: \"name\", type: Input},\r\n            {label: \"项目简称\t\", name: \"nickname\", type: Input},\r\n            {label: \"项目编号\t\", name: \"code\", type: Input},\r\n            {label: \"省/市/区\", name: \"itemAddress\", type: <Region/>, initialValue: []},\r\n            {label: \"具体地址\", name: \"addressDetail\", type: TextArea},\r\n            {label: \"经度\", name: \"longitude\", type: InputNumber},\r\n            {label: \"纬度\", name: \"latitude\", type: InputNumber},\r\n          ]}\r\n        />\r\n        <AddPage\r\n          title=\"编辑公司项目\"\r\n          spinning={appSpinning}\r\n          visible={editVisible}\r\n          onCancel={()=>this.setState({editVisible: false})}\r\n          onOk={this.editOk.bind(this)}\r\n          initialValues={_.size(detail)>1?\r\n            {...detail, itemAddress: detail.itemAddress?detail.itemAddress.split(\",\"):[]}:null}\r\n          data={[\r\n            {label: \"项目名称\", name: \"name\", type: Input},\r\n            {label: \"项目简称\t\", name: \"nickname\", type: Input},\r\n            {label: \"项目编号\t\", name: \"code\", type: Input},\r\n            {label: \"省/市/区\", name: \"itemAddress\", type: <Region/>},\r\n            {label: \"具体地址\", name: \"addressDetail\", type: TextArea},\r\n            {label: \"经度\", name: \"longitude\", type: InputNumber},\r\n            {label: \"纬度\", name: \"latitude\", type: InputNumber},\r\n          ]}\r\n        />\r\n        <Card size=\"small\" title={<Button ghost type=\"primary\" onClick={()=>this.setState({addVisible: true})} >新增项目</Button>} >\r\n          <Table size=\"small\" columns={this.getCol()} \r\n            dataSource={companyproject?utils.addIndex(companyproject.list):[]} \r\n            pagination={utils.Pagination(companyproject, (page)=>{\r\n              this.props.actions.getCompanyProject({params: {\r\n                companyId: match.params.id,\r\n                current: page,\r\n              }, refresh: true})\r\n            })} />\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyProject, addCompanyProject, editCompanyProject}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    appSpinning: state.app.spinning,\r\n    companyproject: state.company.companyproject,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyProject)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\nclass CompanyMessage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        CompanyMessage\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps)(CompanyMessage)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {getCompanyRole} from \"@admin/actions/companyAction\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport { Card, Col, Row, Space, Tree, Skeleton} from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { DeleteOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\n\r\ninterface Props extends IProps{\r\n  companyrole:any;\r\n}\r\n\r\nclass CompanyRole extends React.Component<Props> {\r\n\r\n  componentDidMount(){\r\n    let params = {companyId: this.props.match.params.id}\r\n    this.props.actions.getCompanyRole({params})\r\n  }\r\n\r\n  handleData(arr:any[]){\r\n    let newArr:any[]=[]\r\n    if(!arr){\r\n      return newArr\r\n    }\r\n\r\n    function recursion(arr:any[]){\r\n      _.each(arr, (item,index)=>{\r\n        item.key = item.id\r\n        item.title = item.name\r\n        item.children = item.userAuthVoList\r\n        if(item.type===\"item\"){\r\n          item.selectable=false\r\n        }\r\n        if(item.userAuthVoList && item.userAuthVoList.length){\r\n          item.selectable=false\r\n          recursion(item.userAuthVoList)\r\n        }\r\n      })\r\n    }\r\n    recursion(arr)\r\n    return arr;\r\n  }\r\n\r\n  titleRender({title, type}:any){\r\n    return (\r\n      <div className=\"flexbetween\">\r\n        <span>{title}</span>\r\n        <Space size={20}>\r\n          {type==\"system\"?<PlusOutlined  />:null}\r\n          <DeleteOutlined />\r\n        </Space>\r\n      </div>\r\n    )\r\n    \r\n  }\r\n\r\n  handleSelect(){\r\n    \r\n  }\r\n\r\n  render() {\r\n    const {companyrole} = this.props\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={8}>\r\n          <Card size=\"small\">\r\n          {companyrole?<Tree \r\n            blockNode\r\n            defaultExpandAll\r\n            titleRender={this.titleRender }\r\n            treeData={this.handleData(companyrole)} \r\n            onSelect={this.handleSelect.bind(this)}\r\n            />: <Skeleton active />}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyRole}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    appSpinning: state.app.spinning,\r\n    companyrole: state.company.companyrole,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyRole)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {Switch, Route, Redirect, Link} from \"react-router-dom\"\r\nimport {IProps} from \"@public/common/interface\"\r\nimport {Tabs, Card, Button} from \"antd\"\r\nimport JCard from \"@admin/components/JCard\";\r\nimport CompanyBaseInfo from \"./baseinfo\"\r\nimport CompanyProject from \"./companyproject\"\r\nimport CompanyMessage from \"./companymessage\"\r\nimport CompanyRole from \"./companyrole\"\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass CompanyDetailPage extends React.Component<IProps> {\r\n  state = {\r\n    tabs: [\r\n      {title: \"基础信息\", key: \"base\"},\r\n      {title: \"项目列表\", key: \"project\"},\r\n      {title: \"短信\", key: \"message\"},\r\n      {title: \"角色管理\", key: \"role\"},\r\n    ]\r\n  }\r\n  render() {\r\n    const {spinning, history, match} = this.props\r\n    \r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <div key=\"a\">\r\n          <Tabs type=\"card\" onChange={(val)=>{\r\n              history.push(`/company/${match.params.id}/detail/${val}`)\r\n            }}\r\n            tabBarExtraContent={<Link to=\"/company\"><Button>返回</Button></Link>}\r\n          >\r\n            {this.state.tabs.map(item=>(\r\n              <TabPane tab={item.title} key={item.key} />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n        <div key=\"b\">\r\n          <Switch>\r\n            <Route  path={\"/company/:id/detail/base\"} component={CompanyBaseInfo} />\r\n            <Route  path={\"/company/:id/detail/project\"} component={CompanyProject} />\r\n            <Route  path={\"/company/:id/detail/message\"} component={CompanyMessage} />\r\n            <Route  path={\"/company/:id/detail/role\"} component={CompanyRole} />\r\n            <Redirect from=\"/company/:id/detail\" to=\"/company/:id/detail/base\" />\r\n          </Switch>\r\n        </div>\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    spinning: state.company.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps)(CompanyDetailPage)","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {getCompanys, addCompany, updateCompanyStatus} from \"@admin/actions/companyAction\"\r\nimport {IProps, IState} from \"@public/common/interface\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport Seach from \"@admin/components/Submit/Search\"\r\nimport { Button, Input, Form, Select, Table, InputNumber} from \"antd\";\r\nimport RegionElement from \"@admin/components/Element/Region\"\r\nimport {companyColumns} from \"./columns\"\r\nimport AddPage from \"@admin/components/Page/AddPage\"\r\nimport SelectCompany from \"@admin/components/Element/SelectCompany\"\r\nimport UploadElement from \"@admin/components/Element/UploadElement\"\r\nimport _ from \"lodash\";\r\n\r\nconst {Option} = Select\r\nconst { TextArea } = Input;\r\n\r\n\r\nlet params:any = {\r\n  current: 1,\r\n  name: \"\",\r\n  companyAddress: [],\r\n  status: \"\"\r\n}\r\n\r\nlet restParams:any = {\r\n  current: 1,\r\n  name: \"\",\r\n  companyAddress: [],\r\n  status: \"\"\r\n}\r\n\r\ninterface Props extends IProps {\r\n  companys: any\r\n}\r\ninterface State {\r\n  addVisible:boolean\r\n}\r\n\r\nclass CompanyPage extends React.Component<Props, State> {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {\r\n      addVisible: false\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.props.actions.getCompanys({params})\r\n  }\r\n \r\n\r\n  handleSearch(values:any){\r\n    params = Object.assign(params, values)\r\n    if(!values){\r\n      console.log(restParams)\r\n      this.props.actions.getCompanys({params:restParams, refresh:true})\r\n      params= restParams\r\n      return\r\n    }\r\n    this.props.actions.getCompanys({params, refresh:true})\r\n  }\r\n\r\n  changeStatus(item:any){\r\n    this.props.actions.updateCompanyStatus({id: item.id}, (res:any)=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getCompanys({params, obj: res, type: \"edit\", refresh: true})\r\n    })\r\n  }\r\n\r\n  getCol(){\r\n    let _this = this;\r\n    return [...companyColumns, {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render(item:number, rows:any){\r\n        return (\r\n          <Select size=\"small\" value={item}\r\n              onChange={_this.changeStatus.bind(_this, rows)}\r\n            >\r\n            <Option value={1}>有效</Option>\r\n            <Option value={0}>无效</Option>\r\n          </Select>\r\n        )\r\n      }\r\n    },{\r\n      title: \"操作\",\r\n      render(item:any){\r\n        return (\r\n          <Link to={`/company/${item.id}/detail`}>\r\n            <Button type=\"link\" size=\"small\" >公司详情</Button>\r\n          </Link>\r\n        )\r\n      }\r\n    }]\r\n  }\r\n\r\n  submitAdd(values:any){\r\n    this.props.actions.addCompany({\r\n      ...values,\r\n      logo: this.props.utils.submitFiles(values.logo),\r\n      companyAddress: values.companyAddress.join()\r\n    }, (res:any)=>{\r\n      this.props.actions.getCompanys({params, refresh: true})\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({addVisible: false})\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {spinning,utils, companys} = this.props\r\n    const {addVisible} = this.state\r\n    const uploadData = {\r\n      resourceType: \"0\",\r\n      fileType: \"photo\",\r\n      linkType: \"logo\",\r\n      fileSize: 10240,\r\n      isFlag: 0\r\n    }\r\n    \r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <AddPage \r\n          spinning={spinning}\r\n          title=\"新增公司\"\r\n          data={[\r\n            {label: \"公司Logo\", name: \"logo\", type: <UploadElement data={uploadData}  />, },\r\n            {label: \"公司名称\", name: \"name\", type: Input, rules: true},\r\n            {label: \"公司简称\", name: \"nickname\", type: Input, rules: true},\r\n            {label: \"上级公司\", name: \"parentId\", type: <SelectCompany/>},\r\n            {label: \"省/市/区\", name: \"companyAddress\", type: <RegionElement />, rules: true},\r\n            {label: \"公司地址\", name: \"addressDetail\", type: TextArea, rules: true},\r\n            {label: \"经度\", name: \"longitude\", type: InputNumber},\r\n            {label: \"纬度\", name: \"latitude\", type: InputNumber},\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n          visible={addVisible} \r\n          onCancel={()=>this.setState({addVisible: false})} \r\n          onOk={this.submitAdd.bind(this)}/>\r\n        <div key=\"a\">\r\n          <Seach\r\n            before={<Button type=\"primary\" onClick={()=>this.setState({addVisible: true})}>新增</Button>}\r\n            initialValues={params}\r\n            resetValues={restParams}\r\n            data={[\r\n              {label: \"公司名称\", name: \"name\", type: Input},\r\n              {label: \"省/市/区\", name: \"companyAddress\", type: <RegionElement />,},\r\n              {label:\"状态\", name: \"status\", type: Select, selectList: [\r\n                {label: \"全部\", id: \"\"},\r\n                {label: \"有效\", id: 1},\r\n                {label: \"无效\", id: 0},\r\n              ]}\r\n            ]}\r\n            handleSearch={this.handleSearch.bind(this)}\r\n          />\r\n        </div>\r\n        <div key=\"b\">\r\n          <Table size=\"small\" columns={this.getCol()} dataSource={companys?utils.addIndex(companys.list, true):[]} \r\n          pagination={utils.Pagination(companys, (page)=>{\r\n            params.current = page;\r\n            this.props.actions.getCompanys(params)\r\n          })}/>\r\n        </div>\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n    actions: bindActionCreators({ getCompanys, addCompany, updateCompanyStatus}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:IState) => {\r\n  return {\r\n    companys: state.company.companys,\r\n    spinning: state.company.spinning,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyPage)","import React from \"react\"\r\nimport loadable from \"@loadable/component\";\r\nimport _ from \"lodash\"\r\nimport Home from \"@admin/views/home\"\r\nimport CompanyDetailPage from \"@admin/views/company/detial\"\r\nimport CompanyPage from \"@admin/views/company\"\r\n\r\n\r\nconst lazy = (props: {loader: any})=>{\r\n  const {loader} = props\r\n  return loadable( function(){\r\n    return loader\r\n  } , {\r\n    cacheKey: function(){\r\n      return \"key\"\r\n    },\r\n    fallback: <div>正在加载。。。</div>\r\n  })\r\n}\r\n\r\n\r\n\r\nconst routes = [\r\n  {\r\n    id: \"1\",\r\n    name: \"工作台\",\r\n    path: \"/\",\r\n    exact: true,\r\n    component: Home\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"用户管理\",\r\n    path: \"/users\",\r\n    exact: true,\r\n    component: lazy({loader: import(\"@admin/views/users\")}),\r\n    children: [\r\n      {\r\n        id: \"2-01\",\r\n        name: \"用户详情\",\r\n        path: \"/users/:id/detail/:temId\",\r\n        exact: false,\r\n        component: lazy({loader: import(\"@admin/views/users/detail\")}),\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: \"7\",\r\n    name: \"系统管理\",\r\n    path: \"/system\",\r\n    exact: true,\r\n    component: lazy({loader: import(\"@admin/views/system\")}),\r\n    children: [\r\n      {\r\n        id: \"7-01\",\r\n        name: \"公司详情\",\r\n        path: \"/company/:id/permisser\",\r\n        exact: true,\r\n        component: lazy({loader: import(\"@admin/views/system/permisser\")}),\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"公司管理\",\r\n    path: \"/company\",\r\n    exact: true,\r\n    component: CompanyPage,\r\n    children: [\r\n      {\r\n        id: \"3-01\",\r\n        name: \"公司详情\",\r\n        path: \"/company/:id/detail\",\r\n        exact: false,\r\n        component: CompanyDetailPage,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"资源管理\",\r\n    path: \"/resource\",\r\n    exact: true,\r\n    component: lazy({loader: import(\"@admin/views/resource\")})\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"定时任务\",\r\n    exact: true,\r\n    children: [\r\n      {\r\n        name: \"任务配置\",\r\n        path: \"/timetask/conf\",\r\n        component: lazy({loader: import(\"@admin/views/timetask/conf\")}),\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    id: \"6\",\r\n    name: \"短信管理\",\r\n    exact: true,\r\n    children: [\r\n      {\r\n        id: \"6-01\",\r\n        name: \"短信订单\",\r\n        path: \"/message/order\",\r\n        component: lazy({loader: import(\"@admin/views/message/order\")}),\r\n      },\r\n      {\r\n        id: \"6-02\",\r\n        name: \"短信配置\",\r\n        path: \"/message/conf\",\r\n        component: lazy({loader: import(\"@admin/views/message/conf\")}),\r\n      },\r\n      {\r\n        id: \"6-03\",\r\n        name: \"短信签名\",\r\n        path: \"/message/sign\",\r\n        component: lazy({loader: import(\"@admin/views/message/sign\")}),\r\n      },\r\n      {\r\n        id: \"6-04\",\r\n        name: \"短信模板\",\r\n        path: \"/message/template\",\r\n        component: lazy({loader: import(\"@admin/views/message/template\")}),\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nlet routeData:any[] = [];\r\n\r\n\r\n\r\nconst handleRoute = (arr: any[], obj:any=null)=>{\r\n  _.each(arr, async (item, index)=>{\r\n    if(item.component){\r\n      routeData.push(item)\r\n    }\r\n    if(item.children && item.children.length>0){\r\n      handleRoute(item.children, item)\r\n    }\r\n  })\r\n}\r\n\r\nhandleRoute(routes);\r\nexport default routeData;\r\n\r\n","import React from \"react\"\r\nimport {Image} from \"antd\"\r\n\r\nconst ErrorPage = ()=>{\r\n\r\n  \r\n  return (\r\n    <div style={{margin: \"auto\", width: 500}}>\r\n      <Image src=\"/images/error404.svg\" width={500} preview={false} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ErrorPage;","import React, {Suspense } from \"react\"\r\nimport {Switch, Route} from \"react-router-dom\"\r\nimport routeData from \"./routeData\"\r\nimport ErrorPage from \"@public/pages/error\"\r\nimport _ from \"lodash\"\r\n\r\ninterface RouteConf {\r\n  path: string;\r\n  componet?: any;\r\n  exact?: boolean;\r\n  key?: string\r\n}\r\n\r\nimport CompanyDetailPage from \"@admin/views/company/detial\"\r\n\r\nclass Routers extends React.Component {\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        {routeData.map((item:any, index:number)=>(\r\n          <Route \r\n            key={index} \r\n            exact={item.exact} \r\n            path={item.path} \r\n            component={item.component} />\r\n        ))}\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routers","import React from \"react\"\r\nimport Routers from \"@admin/routers\"\r\nimport {Route, Switch} from \"react-router-dom\"\r\n\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    return (\r\n      // <Switch>\r\n      //   <Route render={()=><Routers/>} />\r\n      // </Switch>\r\n      <Routers/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index","import {APP_LOADING_START, APP_LOADING_END, APP_LOADING_NOT} from \"@admin/constant/app\"\r\nimport {getToken, OpenNotification, addIndex, Pagination, submitFiles, echoFiles} from \"@public/utils\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  token: getToken(),\r\n  utils: {\r\n    OpenNotification,\r\n    addIndex,\r\n    Pagination,\r\n    getToken,\r\n    submitFiles,\r\n    echoFiles\r\n  }\r\n}\r\n\r\nconst appReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case APP_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case APP_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case APP_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default appReducer;","import {COMPANY_LOADING_START, COMPANY_LOADING_END, COMPANY_LOADING_NOT} from \"@admin/constant/company\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst companyReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case COMPANY_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case COMPANY_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case COMPANY_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default companyReducer;","import {USER_LOADING_START, USER_LOADING_END, USER_LOADING_NOT} from \"@admin/constant/user\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst companyReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case USER_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case USER_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case USER_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default companyReducer;","import {SYSTEM_LOADING_START, SYSTEM_LOADING_END, SYSTEM_LOADING_NOT} from \"@admin/constant/system\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst systemReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case SYSTEM_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case SYSTEM_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case SYSTEM_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default systemReducer;","import {MESSAGE_LOADING_START, MESSAGE_LOADING_END, MESSAGE_LOADING_NOT} from \"@admin/constant/message\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst messageReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case MESSAGE_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case MESSAGE_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case MESSAGE_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default messageReducer;","import {OTHER_LOADING_START, OTHER_LOADING_END, OTHER_LOADING_NOT} from \"@admin/constant/other\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst otherReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case OTHER_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case OTHER_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case OTHER_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default otherReducer;","import {combineReducers} from \"redux\"\r\nimport appReducer from \"./appReducer\"\r\nimport companyReducer from \"./companyReducer\"\r\nimport userReducer from \"./userReducer\"\r\nimport systemReducer from \"./systemReducer\"\r\nimport messageReducer from \"./messageReducer\"\r\nimport otherReducer from \"./otherReducer\"\r\n\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  app: appReducer,\r\n  company: companyReducer,\r\n  user: userReducer,\r\n  system:systemReducer,\r\n  message: messageReducer,\r\n  other: otherReducer\r\n})","import {createStore, applyMiddleware} from \"redux\"\r\nimport reduxThunk from \"redux-thunk\"\r\nimport rootReducer from \"@admin/reducers\"\r\n\r\n\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(reduxThunk)\r\n)","import React from 'react'\r\nimport * as ReactDOM from \"react-dom\"\r\nimport {Provider } from \"react-redux\"\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\"\r\nimport \"./index.less\"\r\nimport {ConfigProvider } from \"antd\"\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport Index from \"./views/index\"\r\nimport store from \"./store\"\r\n\r\n\r\n\r\n//热更新\r\nif( (module as any).hot) { \r\n  (module as any).hot.accept()\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter> \r\n      <ConfigProvider  locale={zhCN}>\r\n        <Index/>\r\n      </ConfigProvider>\r\n    </HashRouter>\r\n  </Provider>\r\n  ,\r\n  document.getElementById(\"root\")\r\n)\r\n","\r\n/**\r\n * visible required boolean\r\n * width 模态框宽\r\n * onOk required 点击模态框确定按钮回调\r\n * onCancel required 点击模态框取消按钮回调\r\n * initialValue 设置初始值\r\n * spinning 加载动画\r\n */\r\n\r\nimport React, { ReactNode } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport {Modal, Form, Input, Select, InputNumber, DatePicker} from \"antd\"\r\nimport { FormInstance } from \"antd/lib/form\";\r\n\r\nconst {TextArea} = Input;\r\nconst {Option} = Select;\r\nconst {RangePicker} = DatePicker\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 19 },\r\n};\r\n\r\ninterface ItemProps {\r\n  label?:string;\r\n  name: string;\r\n  type: ReactNode,\r\n  selectList?: any[];\r\n  showSearch?:boolean;\r\n  filterOption?:(...arg0:any)=>any;\r\n  initialValue?:any;\r\n  rules?: boolean | any[];\r\n}\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  width?:number;\r\n  onOk: (...arg0:any)=>void;\r\n  onCancel:()=>void;\r\n  title?:any;\r\n  data:ItemProps[];\r\n  initialValues?:any;\r\n  spinning?:boolean;\r\n}\r\n\r\nclass AddPage extends React.Component<Props> {\r\n\r\n  formRef = React.createRef<FormInstance>()\r\n\r\n  state = {\r\n    modalVisible: false\r\n  }\r\n  static getDerivedStateFromProps(nextProps:any, prevState:any){\r\n    if(nextProps.visible){\r\n      prevState.modalVisible = true\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getElement(item:ItemProps){\r\n    if(item.type == Input){\r\n      return <Input/>\r\n    }else if(item.type == TextArea){\r\n      return <TextArea  />\r\n    }else if(item.type == InputNumber){\r\n      return <InputNumber style={{width: \"100%\"}} />\r\n    }\r\n    else if(item.type == Select){\r\n      return (\r\n        <Select\r\n          showSearch={item.showSearch || false}\r\n          filterOption={item.filterOption || false}\r\n        >\r\n          {item.selectList?.map(elem=>(\r\n            <Option key={elem.id} value={elem.id} >{elem.name}</Option>\r\n          ))}\r\n        </Select>\r\n      )\r\n    }else if(item.type == DatePicker){\r\n      return <DatePicker style={{width: \"100%\"}} />\r\n    }else if(item.type == RangePicker){\r\n      return <RangePicker style={{width: \"100%\"}} />\r\n    }else{\r\n      return item.type;\r\n    }\r\n  }\r\n\r\n  onFinish(values: any){\r\n    this.props.onOk(values)\r\n  }\r\n  \r\n  handleRules(item:ItemProps){\r\n    if(typeof item.rules === 'boolean'){\r\n      return [{required: true, message: `${item.label}不能为空！`}]\r\n    }else if(typeof item.rules === 'object'){\r\n      return item.rules;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  render() {\r\n    const {visible, width, onCancel, title, data, spinning, initialValues} = this.props\r\n    const {modalVisible} = this.state\r\n    \r\n\r\n    return (\r\n      !visible && !modalVisible?null:\r\n      <Modal\r\n        //强渲染\r\n        forceRender={true}\r\n        title={title || null}\r\n        visible={visible}\r\n        destroyOnClose\r\n        width={width || 520}\r\n        onOk={()=>this.formRef.current?.submit()}\r\n        onCancel={onCancel}\r\n        confirmLoading={spinning}\r\n        afterClose={()=>{\r\n          this.setState({modalVisible: false})\r\n        }}\r\n      >\r\n        <Form \r\n          {...layout}\r\n          ref={this.formRef} \r\n          onFinish={this.onFinish.bind(this)}\r\n          initialValues={initialValues}\r\n          >\r\n          {data.map((item, index)=>(\r\n            <Form.Item \r\n              key={index} \r\n              label={item.label} \r\n              name={item.name} \r\n              initialValue={item.initialValue}\r\n              rules={this.handleRules(item)}\r\n              >\r\n              {this.getElement(item)}\r\n            </Form.Item>\r\n          ))}\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(AddPage)","import React from \"react\"\r\nimport {Spin} from \"antd\"\r\nimport QueueAnim from \"rc-queue-anim\"\r\n\r\ninterface Props {\r\n  spinning: boolean;\r\n}\r\n\r\nconst JCard:React.FC<Props> = ({\r\n  children,\r\n  spinning\r\n})=>{\r\n\r\n  return (\r\n    <Spin spinning={spinning} size=\"large\" delay={500} tip=\"正在加载...\" >\r\n      <QueueAnim delay={300} appear={true}>\r\n        {children}\r\n      </QueueAnim>\r\n    </Spin>\r\n  )\r\n}\r\n\r\nexport default JCard;","import {SYSTEM_LOADING_START, SYSTEM_LOADING_END, SYSTEM_LOADING_NOT} from \"@admin/constant/system\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\nimport _ from \"lodash\"\r\n\r\n\r\n\r\n/**\r\n * list API公共方法\r\n * \r\n */\r\ninterface OptionListProps{\r\n  options: any;\r\n  dispatch:any;\r\n  keyName: string;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n\r\ninterface ParamsListProps{\r\n  params: any;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n// options:any,keyName:string, obj?:any, next?:(...arg0:any)=>void\r\nconst optionList = async (opt: OptionListProps)=>{\r\n    const {options,dispatch, keyName, obj, next, type, refresh} = opt;\r\n    try{\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n    if(!isCache || refresh){\r\n      dispatch({\r\n        type: SYSTEM_LOADING_START\r\n      })\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      MC.put(key, data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n        [keyName]: data\r\n      })\r\n    }else{\r\n      if(obj && _.size(obj)){\r\n        let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n        if(type==\"edit\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }else if(type==\"add\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }\r\n\r\n        MC.put(key, isCache)\r\n        dispatch({\r\n          type: SYSTEM_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: SYSTEM_LOADING_END,\r\n          [keyName]: isCache\r\n        })\r\n      }\r\n      \r\n    }\r\n    \r\n  }catch(e){\r\n    console.log(e)\r\n    dispatch({type: SYSTEM_LOADING_END})\r\n  }\r\n  \r\n}\r\n\r\nexport const savePackageMenu = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-package-menu/savePackageMenu\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const findPackageMenu = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-package-menu/selectPackageMenu\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteSelectChildTree = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-menu/removeById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const editSelectChildTree = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-menu/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addSelectChildTree = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-menu/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSelectChildTree = (opt:any)=>{\r\n  \r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-menu/selectChildTree\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"menutree\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const deleteSystemPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-auth-package/removeById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const editSystemPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-auth-package/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addSystemPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-auth-package/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSystemPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-auth-package/list\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const editSystem = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-system/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addSystem = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-system/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanyRole = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-company/selectSystem\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"companyrole\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\nexport const getSystems = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-proper-system/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"systems\", obj, next, refresh, type})\r\n  }\r\n}\r\n","export const MESSAGE_LOADING_START = 'MESSAGE_LOADING_START'\r\nexport const MESSAGE_LOADING_END = 'MESSAGE_LOADING_END'\r\nexport const MESSAGE_LOADING_NOT = 'MESSAGE_LOADING_NOT'","/**\r\n * type: 判断是否为图片 img是， file文件\r\n * data: required 传给服务器参数 DataProps\r\n      *  const uploadData = {\r\n            resourceType: \"0\",\r\n            fileType: \"photo\",\r\n            linkType: \"logo\",\r\n            fileSize: 10240,\r\n            isFlag: 0\r\n          }\r\n  more 是否上传多个文件 default false\r\n  fileList value对象 {url, uid, name}\r\n */\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport {Upload, Button, Form} from \"antd\"\r\nimport { connect } from \"react-redux\"\r\nimport {PlusOutlined, UploadOutlined, LoadingOutlined} from \"@ant-design/icons\"\r\nimport {IState, UtilsProps} from \"@public/common/interface\"\r\nimport \"./index.less\"\r\nimport _ from \"lodash\"\r\n\r\ninterface DataProps {\r\n  companyCode?:any;\r\n  fileType?:any;\r\n  fileSize?:any;\r\n  heCode?:any;\r\n  resourceType:any;\r\n  linkType?:any;\r\n  userId?:any;\r\n  isFlag?:any;\r\n}\r\n\r\ninterface Props {\r\n  data?:DataProps;\r\n  utils: UtilsProps;\r\n  type?:string;\r\n  onChange?:any;\r\n  value?:any;\r\n  more?:boolean;\r\n}\r\n\r\n\r\n\r\nconst UploadElement:React.FC<Props> = ({\r\n  data={\r\n    resourceType: \"0\",\r\n    fileType: \"photo\",\r\n    linkType: \"logo\",\r\n    fileSize: 10240,\r\n    isFlag: 0\r\n  }, \r\n  utils, \r\n  type=\"image\",\r\n  onChange,\r\n  value,\r\n  more=false\r\n})=>{\r\n  const [loading, setLoading] = useState(false)\r\n  \r\n  const uploadButton = (\r\n    <div>\r\n      {loading?<LoadingOutlined/>:<PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>上传图片</div>\r\n    </div>\r\n  );\r\n\r\n  const handleData = (arr:any[])=>{\r\n    var newArr:any[] = [];\r\n    _.each(arr, (item,index)=>{\r\n      if(item.response && item.response.code == 1){\r\n        const {dowloadHttpUrl, fileName, id} = item.response.data\r\n        newArr.push({url: dowloadHttpUrl, name: fileName, uid: id })\r\n      }else{\r\n        newArr.push(item)\r\n      }\r\n    })\r\n    \r\n    return newArr;\r\n  }\r\n\r\n  const handleChange = (e:any)=>{\r\n    setLoading(true)\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    if(e.file.status == \"done\"){\r\n      const {code, msg} = e.file.response\r\n      if(code!=1){\r\n        utils.OpenNotification(\"error\", msg)\r\n        return;\r\n      }\r\n    }\r\n    if( onChange && e.file.status == \"done\"){\r\n      if(!more && e.fileList && e.fileList.length>1){\r\n        e.fileList = [e.fileList[e.fileList.length-1]]\r\n      }\r\n      let imgArr = handleData(e.fileList);\r\n      onChange(imgArr)\r\n      setLoading(false)\r\n      return imgArr\r\n    }\r\n  }\r\n  const handleRemove = (file:any)=>{\r\n    let v = _.filter(value, o=>o.url!=file.url)\r\n    onChange(v)\r\n  }\r\n\r\n  const beforeUpload = (file:any)=>{\r\n    if(file && file.size>(1024*1024*10)){ \r\n      utils.OpenNotification(\"error\", \"附件不能大于10M\")\r\n      return false;\r\n    }\r\n    return file;\r\n  }\r\n\r\n  const UploadWrap = (\r\n    <Upload\r\n      action=\"/zlwj/api/resource/file/uploadFile\"\r\n      listType={type==\"image\"?\"picture-card\":\"text\"}\r\n      name=\"file\"\r\n      fileList={ value || [] }\r\n      onChange={handleChange}\r\n      showUploadList={true}\r\n      onRemove={handleRemove}\r\n      beforeUpload={beforeUpload}\r\n      data={{\r\n        token: utils.getToken(),\r\n        ...data,\r\n      }}\r\n    >\r\n\r\n      {loading}\r\n      {type==\"image\"?uploadButton:<Button size=\"small\" icon={loading?<LoadingOutlined/>:<UploadOutlined />}>上传附件</Button>}\r\n    </Upload>\r\n  )\r\n\r\n  return UploadWrap;\r\n}\r\nconst mapStateToProps = (state:IState) => {\r\n  return {\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadElement)","\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { Select } from \"antd\"\r\nimport { connect } from \"react-redux\"\r\nimport {IState} from \"@public/common/interface\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {getCompanys} from \"@admin/actions/appAction\"\r\n\r\n\r\nconst {Option} = Select\r\n\r\ninterface Props {\r\n  actions:any;\r\n  companys: any;\r\n  onChange?:(arg1:any)=>void;\r\n  value?: any;\r\n}\r\n\r\nconst SelectCompamy:React.FC<Props> = ({actions, companys, onChange, value})=>{\r\n\r\n  useEffect(() => {\r\n    actions.getCompanys({pageSize: 1000})\r\n  }, [])\r\n\r\n  const hanleChange = (val:any)=>{\r\n    if(onChange){\r\n      onChange(val);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      style={{minWidth: 100}}\r\n      showSearch\r\n      filterOption={(input, option:any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n      value={value}\r\n      onChange={hanleChange}\r\n    >\r\n      <Option value=\"\">全部公司</Option>\r\n      {companys?companys.list.map((item:any)=>(\r\n        <Option key={item.id} value={item.id}>{item.name}</Option>\r\n      )):null}\r\n    </Select>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n    actions: bindActionCreators({getCompanys}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:IState) => {\r\n  return {\r\n    companys: state.app.companys\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCompamy)","import {APP_LOADING_START, APP_LOADING_END, APP_LOADING_NOT} from \"@admin/constant/app\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\n\r\n\r\n\r\nexport const getCompanys = (params:any, next?:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/page\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n      if(!isCache){\r\n        dispatch({\r\n          type: APP_LOADING_START\r\n        })\r\n        let data:any = await fetch(options)\r\n        MC.put(key, data) \r\n        dispatch({\r\n          type: APP_LOADING_END,\r\n          companys: data\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: APP_LOADING_NOT,\r\n          companys: isCache\r\n        })\r\n      }\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: APP_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanyHe = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/companyItemList\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n      if(!isCache){ \r\n        dispatch({\r\n          type: APP_LOADING_START\r\n        })\r\n        let data:any = await fetch(options)\r\n        MC.put(key, data)\r\n        dispatch({\r\n          type: APP_LOADING_END,\r\n          companyhe: data\r\n        })\r\n      }\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: APP_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRegions = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/area/cityArea\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n      if(!isCache){ \r\n        dispatch({\r\n          type: APP_LOADING_START\r\n        })\r\n        let data:any = await fetch(options)\r\n        MC.put(key, data)\r\n        dispatch({\r\n          type: APP_LOADING_END,\r\n          region: data\r\n        })\r\n      }\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: APP_LOADING_END})\r\n    }\r\n  }\r\n}\r\n","export const USER_LOADING_START = 'USER_LOADING_START'\r\nexport const USER_LOADING_END = 'USER_LOADING_END'\r\nexport const USER_LOADING_NOT = 'USER_LOADING_NOT'","export const OTHER_LOADING_START = 'OTHER_LOADING_START'\r\nexport const OTHER_LOADING_END = 'OTHER_LOADING_END'\r\nexport const OTHER_LOADING_NOT = 'OTHER_LOADING_NOT'","export const SYSTEM_LOADING_START = 'SYSTEM_LOADING_START'\r\nexport const SYSTEM_LOADING_END = 'SYSTEM_LOADING_END'\r\nexport const SYSTEM_LOADING_NOT = 'SYSTEM_LOADING_NOT'","export const Status = [\"禁用\", \"启用\"]\r\n\r\nexport const Sex = [\"暂无\", \"男\", \"女\", \"未知\"]\r\n\r\nexport const ClientType:any = {\"XCX\": \"小程序\", \"APP\": \"智联万家APP\", \"WEB\": \"物业系统\", \"CDZ\": \"充电桩\"}\r\n\r\nexport const Income:any = {\"ADD\": \"收入\", \"RED\": \"支出\"}\r\n\r\nexport const ProjectLevel:any = {\"XM\": \"项目级别\", \"GS\": \"公司级别\"}\r\n\r\nexport const DefaultStatus = [\"否\", \"是\"]\r\n\r\nexport const MessageType:any = {\"ALY\": \"阿里云\", \"FG\": \"飞鸽\"}","/**\r\n * before: ReactElement,可添加在最前边\r\n * data: require List类型，生成表单数据\r\n * handleSearch require Function  点击搜索\r\n * initialValues require any 初始化回显数据\r\n */\r\n\r\nimport React, { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport {Button, Form, Input, Select, Card, Row, Col, DatePicker} from \"antd\"\r\nimport {SearchOutlined, RetweetOutlined } from \"@ant-design/icons\"\r\nimport _ from \"lodash\"\r\n\r\nconst {Option} = Select\r\nconst {RangePicker} = DatePicker\r\n\r\ninterface ItemType {\r\n  label?: string,\r\n  name: string,\r\n  type: ReactNode,\r\n  selectList?: any[];\r\n  initialValue?:any;\r\n  \r\n}\r\n\r\ninterface Props {\r\n  before?: ReactNode;\r\n  data: ItemType[];\r\n  handleSearch: Function;\r\n  initialValues: any;\r\n  resetValues:any;\r\n}\r\n\r\n\r\nconst Search:React.FC<Props> = ({\r\n  before,\r\n  data,\r\n  handleSearch,\r\n  initialValues,\r\n  resetValues\r\n})=>{\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values:any) => {\r\n    handleSearch(values)\r\n  };\r\n\r\n  const handleReset = function(){\r\n    form.setFieldsValue(resetValues)\r\n    handleSearch()\r\n  }\r\n\r\n\r\n  const getNode = ( item:any )=>{\r\n\r\n    if(item.type == Input){\r\n      return <Input/>\r\n    }else if(item.type == Select){\r\n      return (\r\n        <Select>\r\n          {item.selectList.map((elem:any)=>(\r\n            <Option key={elem.id} value={elem.id}>{elem.label}</Option>\r\n          ))}\r\n        </Select>\r\n      )\r\n    }else if(item.type == DatePicker){\r\n      return <DatePicker style={{width: \"100%\"}} />\r\n    }else if(item.type == RangePicker){\r\n      return <RangePicker style={{width: \"100%\"}} />\r\n    }\r\n    else{\r\n      return item.type\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Card size=\"small\" >\r\n      <div className=\"flexbetween\">\r\n        <div style={{marginRight: 30}}>\r\n          {before}\r\n        </div>\r\n        <div className=\"flexend\" style={{minWidth: \"80%\"}}>\r\n          <Form\r\n            form={form}\r\n            layout=\"inline\"\r\n            onFinish={onFinish}\r\n            initialValues={initialValues}\r\n          >\r\n            <Row >\r\n              {data.map((item, index)=>{\r\n                return (\r\n                  <Col style={{marginBottom: 5}} key={index}   >\r\n                    <Form.Item\r\n                      label={item.label||\"\"}\r\n                      name={item.name}\r\n                      initialValue={item.initialValue}\r\n                    >\r\n                      {getNode(item)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                )\r\n              })}\r\n              <Col  >\r\n                <Form.Item >\r\n                  <Button type=\"primary\" ghost htmlType=\"submit\" icon={<SearchOutlined />}>搜索</Button>\r\n                  <Button className=\"mgl10\" onClick={handleReset} icon={<RetweetOutlined />}>重置</Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            \r\n\r\n            \r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Search;","import axios, {AxiosRequestConfig, Method } from \"axios\"\r\n\r\n\r\n\r\n\r\nexport interface AxiosRequest {\r\n  baseUrl?: string;\r\n  url: string,\r\n  method: Method,\r\n  data?: any,\r\n}\r\n\r\n// 定义接口\r\ninterface PendingType {\r\n  url?: string;\r\n  method?: Method;\r\n  params: any;\r\n  data: any;\r\n  cancel: Function;\r\n}\r\n\r\n// 取消重复请求\r\nconst pending: Array<PendingType> = [];\r\nconst CancelToken = axios.CancelToken;\r\n// axios 实例\r\nconst instance = axios.create({\r\n    timeout: 10000,\r\n    responseType: 'json'\r\n});\r\n\r\n\r\n// 移除重复请求\r\nconst removePending = (config: AxiosRequestConfig) => {\r\n    \r\n  for (const key in pending) {\r\n      const item: number = +key;\r\n      const list: PendingType = pending[key];\r\n      // 当前请求在数组中存在时执行函数体\r\n      if (list.url === config.url && list.method === config.method && JSON.stringify(list.params) === JSON.stringify(config.params) && JSON.stringify(list.data) === JSON.stringify(config.data)) {\r\n          // 执行取消操作\r\n          list.cancel('操作太频繁，请稍后再试');\r\n          // 从数组中移除记录\r\n          pending.splice(item, 1);\r\n      }\r\n  }\r\n};\r\n\r\n// 添加请求拦截器\r\ninstance.interceptors.request.use(\r\n  request => {\r\n\r\n      // removePending(request);\r\n      // request.cancelToken = new CancelToken((c) => {\r\n      //     pending.push({ url: request.url, method: request.method, params: request.params, data: request.data, cancel: c });\r\n      // });\r\n      return request;\r\n  },\r\n  error => {\r\n      return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 添加响应拦截器\r\ninstance.interceptors.response.use(\r\n  response => {\r\n      removePending(response.config);\r\n\r\n      const errorCode = response?.data?.errorCode;\r\n      switch (errorCode) {\r\n          case '401':\r\n              // 根据errorCode，对业务做异常处理(和后端约定)\r\n              break;\r\n          default:\r\n              break;\r\n      }\r\n\r\n      return response;\r\n  },\r\n  error => {\r\n      const response = error.response;\r\n\r\n      // 根据返回的http状态码做不同的处理\r\n      switch (response?.status) {\r\n          case 401:\r\n              // token失效\r\n              break;\r\n          case 403:\r\n              // 没有权限\r\n              break;\r\n          case 500:\r\n              // 服务端错误\r\n              break;\r\n          case 503:\r\n              // 服务端错误\r\n              break;\r\n          default:\r\n              break;\r\n      }\r\n\r\n      // 超时重新请求\r\n      // const config = error.config;\r\n      \r\n      // // 全局的请求次数,请求的间隙\r\n      // const [RETRY_COUNT, RETRY_DELAY] = [3, 10000];\r\n\r\n      // if (config && RETRY_COUNT) {\r\n      //     // 设置用于跟踪重试计数的变量\r\n      //     config.__retryCount = config.__retryCount || 0;\r\n      //     // 检查是否已经把重试的总数用完\r\n      //     if (config.__retryCount >= RETRY_COUNT) {\r\n      //         return Promise.reject(response || { message: error.message });\r\n      //     }\r\n      //     // 增加重试计数\r\n      //     config.__retryCount++;\r\n      //     // 创造新的Promise来处理指数后退\r\n      //     const backoff = new Promise((resolve) => {\r\n      //         setTimeout(() => {\r\n      //             resolve();\r\n      //         }, RETRY_DELAY || 1);\r\n      //     });\r\n      //     // instance重试请求的Promise\r\n      //     return backoff.then(() => {\r\n      //         return instance(config);\r\n      //     });\r\n      // }\r\n\r\n      // // eslint-disable-next-line\r\n      // return Promise.reject(response || {message: error.message});\r\n      return Promise.reject(response)\r\n  }\r\n);\r\n\r\nexport default instance;","import instance, {AxiosRequest} from \"./http\"\r\nimport {notification } from \"antd\"\r\nimport qs from \"qs\"\r\nimport {save, remove, load} from \"react-cookies\"\r\nimport _ from \"lodash\"\r\n\r\n\r\nexport const echoFiles = (obj: string | any[])=>{\r\n  var newArr:any[] = []\r\n  \r\n  if(obj==\"\" || obj == null || obj == undefined){\r\n    return newArr\r\n  }\r\n  if(typeof obj === \"string\"){\r\n    var arr = obj.split(\",\");\r\n    _.each(arr, (item, index)=>{\r\n      newArr.push({\r\n        url: item,\r\n        uid: index+1,\r\n        name: index+1,\r\n      })\r\n    })\r\n  }\r\n  return newArr;\r\n}\r\n\r\n/* 处理图片上传服务器参数 */\r\nexport function submitFiles(arr:any[]){\r\n  if(!_.isArray(arr)) return \"\";\r\n  \r\n  let newArr:string[] = []\r\n  _.each(arr, (item:any)=>{\r\n    newArr.push(item.url)\r\n  })\r\n  return newArr.join();\r\n}\r\n\r\n/* 分页 */\r\nexport const Pagination = (pageInfo:any, next:(...arg0:any)=>void)=>{\r\n  if(!pageInfo) return {}\r\n  if(!_.hasIn(pageInfo, \"current\") || !_.hasIn(pageInfo, \"pageSize\") || !_.hasIn(pageInfo, \"total\")){\r\n    OpenNotification(\"error\", \"分页少了应有字段！\")\r\n    return {}\r\n  }\r\n  const {current, pageSize, total} = pageInfo\r\n  return {\r\n    current,\r\n    pageSize,\r\n    total,\r\n    onChange: function(page: number, pageSize: number){\r\n      if(next)next(page, pageSize);\r\n    }\r\n  }\r\n} \r\n\r\n/* 添加key */\r\nexport const addIndex = (arr:Array<any>, type:boolean=false)=>{\r\n  const handleArr = (obj:any[])=>{\r\n    _.each(obj, (item,index)=>{\r\n      item.key = !type?(index+1):item.id\r\n      if(item.children && item.children.length){\r\n        handleArr(item.children)\r\n      }\r\n    })\r\n  }\r\n  handleArr(arr)\r\n  return arr;\r\n}\r\n\r\n/* 移出token */\r\nexport const removeToken = ()=>{\r\n  remove(\"token\", {path: \"/\"})\r\n}\r\n/* 存储token */\r\nexport const saveToken = (token:string)=>{\r\n  save(\"token\", token, {path: \"/\"})\r\n}\r\n\r\n/* 获取token */\r\nexport const getToken = ()=>{\r\n  return load(\"token\")\r\n}\r\n\r\n\r\n/* 提示 */\r\nexport function OpenNotification(type:string=\"success\", msg:string=\"操作成功\"){\r\n  (notification as any)[type]({\r\n    message: msg\r\n  })\r\n}\r\n\r\n/**\r\n *  url： requuire\r\n *  method: get post put delete 默认 get\r\n *  data: not require {}\r\n */\r\n\r\nexport const fetch = (options: AxiosRequest)=>{\r\n  options.data = {...options.data, token: getToken()}\r\n  const createInstance = function(){\r\n    switch( options.method.toUpperCase() ){\r\n      case \"GET\":\r\n        return instance.get( options.url, {params: options.data?options.data:{} })\r\n      case \"POST\":\r\n        return instance.post( options.url, options.data? qs.stringify(options.data) :{} )\r\n      case \"PUT\":\r\n        return instance.post( options.url, options.data?qs.stringify(options.data):{} )\r\n      case \"DELETE\":\r\n        return instance.get( options.url, {params: options.data?options.data:{} })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return new Promise((resolve, reject)=>{\r\n    \r\n    createInstance()?.then( response=>{\r\n      const {data, msg, code } = response.data;\r\n      \r\n      if(code==1){\r\n        resolve( data );\r\n      }else if(code==0){\r\n        OpenNotification(\"error\", msg)\r\n        reject();\r\n      }else if(code==-1){\r\n        reject();\r\n        OpenNotification(\"error\", msg )\r\n      }else if(code==-2){\r\n        (window as any)._navigation.push(\"/login\")\r\n        reject();\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err, 'color: red')\r\n      reject(err);\r\n    })\r\n  });\r\n\r\n}"],"sourceRoot":""}