{"version":3,"sources":["public/components/Modular/getnode.tsx","plate/actions/otherAction.ts","public/components/Element/StatusElement.tsx","public/components/Modular/AddModular.tsx","plate/views/conf/columns/index.tsx","../node_modules/@ant-design/icons-svg/es/asn/MinusOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusOutlined.js","plate/views/conf/devicetype/typeform.tsx","plate/views/conf/devicetype/index.tsx"],"names":["TextArea","Input","Option","Select","RangePicker","DatePicker","getNode","item","type","disabled","style","width","selectList","map","elem","key","id","value","label","notAll","ACTION","initAllInfo","params","next","dispatch","getState","a","options","url","method","data","stateApi","setDeviceInit","_","omit","gCompanyHe","companyHe","getInitInfo","getDeviceInit","opt","storetApi","getConfigRule","getPlateMoneyByTime","gRtime","rtime","selectDate","moment","format","getPlateIncome","getPlatePassRecord","getIncomeCount","getSelectThirty","getDeviceonLineLog","getDeviceInfo","addOrUpTypeCallback","changeDeviceTypeConf","getDeviceTypeConf","changeDeviceConf","getDeviceConf","isHave","changeSysBwlist","getSysBwlist","changeBwlist","getBwlist","changeRegstrict","getRegstrict","openState","relieveElecfence","changeElecfence","getElecfence","getPlatePassRecordPages","isMoney","parkId","length","createCodeState","changeAccessCode","getAccessCode","StatusElement","onChange","size","v","layout","labelCol","span","wrapperCol","AddModular","visible","onOk","onCancel","title","initialValues","spinning","Form","useForm","form","useState","modalVisible","setModalVisible","useEffect","setFieldsValue","resetFields","handleRules","rules","required","message","destroyOnClose","submit","confirmLoading","afterClose","name","onFinish","values","index","Item","initialValue","valuePropName","sysDeviceTypeConfColumns","dataIndex","render","sysDeviceConfColumns","color","OnLineTypeColor","OnLineType","InOutType","MinusOutlined","props","ref","React","AntdIcon","Object","assign","icon","MinusOutlinedSvg","displayName","TypeForm","hChange","i","newValue","cloneDeep","className","PlusOutlined","onClick","push","callbackCode","callbackUrl","callbackName","clone","addonBefore","target","danger","splice","current","SysDeviceTypeConf","state","addVisible","editVisible","detail","typeCallbackJson","confVisible","this","actions","rows","objective","res","utils","OpenNotification","obj","setState","onConfirm","refresh","devicetype","JCard","columns","getCol","dataSource","addIndex","list","pagination","Pagination","page","JSON","stringify","typeId","Component","connect","other","app","bindActionCreators"],"mappings":"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","file":"plate/js/21.bf6b8dde.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\"\r\nimport {Input, InputNumber, Select, DatePicker} from \"antd\"\r\nconst {TextArea} = Input\r\nconst {Option} = Select\r\nconst {RangePicker} = DatePicker\r\n\r\ninterface selectListProps {\r\n  label: string,\r\n  id: any;\r\n}\r\n\r\nexport interface ItemType {\r\n  label?: ReactNode,\r\n  name: string,\r\n  type: any,\r\n  selectList?: selectListProps[];\r\n  initialValue?:any;\r\n  valuePropName?:string;\r\n  notAll?:boolean;\r\n  rules?:any;\r\n  disabled?:boolean;\r\n}\r\n\r\nexport const getNode = (item:ItemType)=>{\r\n  switch(item.type){\r\n    case \"input\":\r\n      return <Input disabled={item.disabled} />\r\n    case \"textarea\":\r\n      return <TextArea disabled={item.disabled} />\r\n    case \"inputNumber\":\r\n      return <InputNumber style={{width: \"100%\"}} disabled={item.disabled} />\r\n    case \"datepicker\":\r\n      return <DatePicker style={{width: \"100%\"}} disabled={item.disabled} />\r\n    case \"rangepicker\":\r\n      return <RangePicker style={{width: \"100%\"}} disabled={item.disabled} />\r\n    case \"select\":\r\n      return (\r\n        <Select disabled={item.disabled} >\r\n          {item.selectList?.map(elem=>(\r\n            <Option key={elem.id} value={elem.id} >{elem.label}</Option>\r\n          ))}\r\n        </Select>\r\n      )\r\n    case \"status\":\r\n      return (\r\n        <Select disabled={item.disabled} >\r\n          {item.notAll?null:<Option value=\"\">全部</Option>}\r\n          <Option value={1}>启用</Option>\r\n          <Option value={0}>禁用</Option>\r\n        </Select>\r\n      )\r\n  }\r\n\r\n  return item.type;\r\n}","import {OTHER_LOADING_START, OTHER_LOADING_END, OTHER_LOADING_NOT} from \"@plate/constant/otherTypes\"\r\nimport { gCompanyHe, gRtime } from \"@public/utils\"\r\nimport {storetApi, stateApi, OptProps} from \"@public/utils/action\"\r\nimport _ from \"lodash\"\r\nimport moment from \"moment\"\r\nconst ACTION = \"OTHER\"\r\n\r\n\r\nexport const initAllInfo = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-parking-config/initAllInfo\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const setDeviceInit = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/deviceInit\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe( params.companyHe)\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\n\r\nexport const getInitInfo = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-parking-config/initInfo\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe( params.companyHe)\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getDeviceInit = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/getDeviceInit\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe( params.companyHe)\r\n      }\r\n    }\r\n    storetApi(options, \"deviceinit\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\n\r\nexport const getConfigRule = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-parking-config/selectConfigRule\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe( params.companyHe)\r\n      }\r\n    }\r\n    storetApi(options, \"configrule\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getPlateMoneyByTime = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-data/selectPlateMoneyByTime\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\", \"rtime\"])),\r\n        ...gCompanyHe( params.companyHe),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        selectDate: moment(params.selectDate).format(params.type==\"year\" ? \"YYYY\" : \"YYYY-MM\"),\r\n        type: params.type==\"year\"?\"Y\":params.type==\"month\"?\"M\":\"D\"\r\n      }\r\n    }\r\n    storetApi(options, \"platebytime\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getPlateIncome = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-data/selectPlateIncome\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\", \"rtime\"])),\r\n        ...gCompanyHe( params.companyHe),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        selectDate: moment(params.selectDate).format(params.type==\"year\" ? \"YYYY\" : \"YYYY-MM\"),\r\n        type: params.type==\"year\"?\"Y\":params.type==\"month\"?\"M\":\"D\"\r\n      }\r\n    }\r\n    storetApi(options, \"changecount\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getPlatePassRecord = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-data/platePassRecord\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\", \"rtime\"])),\r\n        ...gCompanyHe( params.companyHe),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        selectDate: moment(params.selectDate).format(params.type==\"year\" ? \"YYYY\" : \"YYYY-MM\"),\r\n        type: params.type==\"year\"?\"Y\":params.type==\"month\"?\"M\":\"D\"\r\n      }\r\n    }\r\n    storetApi(options, \"platerecord\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\n\r\nexport const getIncomeCount = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-data/incomeCount\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\", \"rtime\"])),\r\n        ...gCompanyHe( params.companyHe),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        selectDate: moment(params.selectDate).format(params.type==\"year\" ? \"YYYY\" : \"YYYY-MM\"),\r\n        type: params.type==\"year\"?\"Y\":params.type==\"month\"?\"M\":\"D\"\r\n      }\r\n    }\r\n    storetApi(options, \"incomecount\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getSelectThirty = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-online/selectThirty\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getDeviceonLineLog = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-online/onlineInfo\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getDeviceInfo = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/getById\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const addOrUpTypeCallback = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device-type/addOrUpTypeCallback\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const changeDeviceTypeConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device-type/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getDeviceTypeConf = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device-type/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"devicetype\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const changeDeviceConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\n\r\nexport const getDeviceConf = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe(params.companyHe),\r\n        isHave: params.isHave?1:0,\r\n      }\r\n    }\r\n    storetApi(options, \"deviceconf\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const changeSysBwlist = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-system-black-white-list/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getSysBwlist = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-system-black-white-list/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"sysbwlist\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const changeBwlist = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-item-black-white-list/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getBwlist = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-item-black-white-list/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"bwlist\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const changeRegstrict = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-item-license-region-forbid/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getRegstrict = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-item-license-region-forbid/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...params,\r\n        openState: params.openState?1:0\r\n      }\r\n    }\r\n    storetApi(options, \"regstrict\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const relieveElecfence = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-license-fence/relieveEnclosure\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const changeElecfence = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-license-fence/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getElecfence = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-license-fence/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...params,\r\n        openState: params.openState?1:0\r\n      }\r\n    }\r\n    storetApi(options, \"elecfence\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getPlatePassRecordPages = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-pass-record/selectPlatePassRecordPages\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"rtime\"])),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        isMoney: params.isMoney?1:0,\r\n        parkId: params.parkId.length?params.parkId[params.parkId.length-1]:\"\"\r\n      } \r\n    }\r\n    storetApi(options, \"accesslog\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const createCodeState = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-active-code/createState\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const changeAccessCode = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-active-code/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getAccessCode = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-active-code/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"rtime\"])),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\")\r\n      } \r\n    }\r\n    storetApi(options, \"accesscode\", dispatch, ACTION, opt)\r\n  }\r\n}","import React from \"react\"\r\nimport {Select} from \"antd\"\r\nimport { SizeType } from \"antd/lib/config-provider/SizeContext\";\r\n\r\nconst {Option} = Select;\r\n\r\n\r\ninterface Props {\r\n  value?:any;\r\n  onChange?:any;\r\n  notAll?:boolean;\r\n  size?:SizeType;\r\n}\r\n\r\nconst StatusElement: React.FC<Props> = ({value, onChange, notAll, size})=>{\r\n  return (\r\n    <Select size={size} value={value} onChange={(v)=>{\r\n      if(onChange){\r\n        onChange(v)\r\n      }\r\n    }} >\r\n      {notAll?null:<Option value=\"\" >全部</Option>}\r\n      <Option value={1} >启用</Option>\r\n      <Option value={0} >禁用</Option>\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport default StatusElement","import React, { useEffect, useState } from \"react\"\r\nimport { Form, Modal } from \"antd\"\r\nimport {ItemType, getNode} from \"./getnode\"\r\n\r\n\r\ninterface ItemTypeProps extends ItemType {\r\n  rules?: boolean | any[];\r\n  wrapperCol?:any;\r\n  labelCol?:any;\r\n  valuePropName?:any;\r\n}\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  width?:number;\r\n  onOk: (...arg0:any)=>void;\r\n  onCancel:()=>void;\r\n  title?:any;\r\n  data:ItemTypeProps[];\r\n  initialValues?:any;\r\n  spinning?:boolean;\r\n  \r\n}\r\n\r\nconst layout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst AddModular:React.FC<Props> = ({\r\n  visible,\r\n  width,\r\n  onOk,\r\n  onCancel,\r\n  title,\r\n  data,\r\n  initialValues,\r\n  spinning,  \r\n})=>{\r\n  const [form] = Form.useForm();\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    if(visible){\r\n      setModalVisible(true)\r\n      if(initialValues){\r\n        form.setFieldsValue(initialValues)\r\n      }else{\r\n        form.resetFields()\r\n      }\r\n      \r\n    }\r\n\r\n  }, [visible])\r\n\r\n  const handleRules = (item:ItemTypeProps)=>{\r\n    if(typeof item.rules === 'boolean'){\r\n      return [{required: true, message: `${item.label || \"\"}不能为空！`}]\r\n    }else if(typeof item.rules === 'object'){\r\n      return item.rules;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  return (\r\n    !visible && !modalVisible?null:\r\n    <Modal\r\n      title={title || null}\r\n      visible={visible}\r\n      width={width || 560}\r\n      onCancel={()=>{\r\n        form.resetFields()\r\n        onCancel()\r\n      }}\r\n      destroyOnClose\r\n      onOk={()=>form.submit()}\r\n      confirmLoading={spinning}\r\n      afterClose={()=>{\r\n        setModalVisible(false)\r\n      }}\r\n    >\r\n      <Form \r\n        name=\"addModular\" \r\n        {...layout}\r\n        form={form} onFinish={(values)=>onOk(values)} initialValues={initialValues} >\r\n        {data.map((item, index)=>(\r\n          <Form.Item \r\n            key={index} \r\n            label={item.label} \r\n            name={item.name} \r\n            initialValue={item.initialValue}\r\n            rules={handleRules(item)}\r\n            wrapperCol={item.wrapperCol}\r\n            labelCol={item.labelCol}\r\n            valuePropName={item.valuePropName}\r\n            >\r\n            {getNode(item)}\r\n          </Form.Item>\r\n        ))}\r\n      </Form>\r\n\r\n    </Modal>\r\n  )\r\n}\r\n\r\n\r\nexport default AddModular;","import { OnLineType, OnLineTypeColor, InOutType} from \"@public/common/plateMapper\";\r\nimport { Tag } from \"antd\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const sysDeviceTypeConfColumns = [\r\n  {\r\n    title: \"设备类型编号\",\r\n    dataIndex: \"typeCode\",\r\n  },\r\n  {\r\n    title: \"设备类型名称\",\r\n    dataIndex: \"typeName\"\r\n  },\r\n  {\r\n    title: \"设备类型统计\",\r\n    dataIndex: \"deviceCount\",\r\n    render:(item:any)=>item+\"台\"\r\n  },\r\n  {\r\n    title: \"备注\",\r\n    dataIndex: \"remark\"\r\n  },\r\n]\r\n\r\nexport const sysDeviceConfColumns = [\r\n  {\r\n    title: \"状态\",\r\n    dataIndex: \"online\",\r\n    render:(item:any)=> <Tag color={OnLineTypeColor[item]}>{OnLineType[item]}</Tag> \r\n  },\r\n  {\r\n    title: \"IotID\",\r\n    dataIndex: \"iotId\"\r\n  },\r\n  {\r\n    title: \"设备序列号\",\r\n    dataIndex: \"asa\"\r\n  },\r\n  {\r\n    title: \"设备名称\",\r\n    dataIndex: \"deviceName\"\r\n  },\r\n  {\r\n    title: \"进出分类\",\r\n    dataIndex: \"inOut\",\r\n    render:(item:any)=>InOutType[item]\r\n  },\r\n  {\r\n    title: \"公司\",\r\n    dataIndex: \"plateCompanyItemStr\"\r\n  },\r\n  {\r\n    title: \"关联收费点\",\r\n    dataIndex: \"siteName\"\r\n  },\r\n  {\r\n    title: \"设备品牌\",\r\n    dataIndex: \"deviceBrand\"\r\n  },\r\n  {\r\n    title: \"设备类型\",\r\n    dataIndex: \"deviceType\"\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n  {\r\n    title: \"更新信息\",\r\n    dataIndex: \"updateTime\"\r\n  },\r\n]","// This icon file is generated automatically.\nvar MinusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"minus\", \"theme\": \"outlined\" };\nexport default MinusOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusOutlined = function MinusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MinusOutlinedSvg\n  }));\n};\n\nMinusOutlined.displayName = 'MinusOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusOutlined);","import { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, Space } from \"antd\"\r\nimport _ from \"lodash\";\r\nimport React, { useEffect } from \"react\"\r\n\r\n\r\ninterface Props {\r\n  value?:any;\r\n  onChange?:any;\r\n}\r\n\r\nconst TypeForm: React.FC<Props> = ({\r\n  value,\r\n  onChange,\r\n})=>{\r\n  \r\n  const addValue = ()=>{\r\n    value.push({\r\n      callbackCode:\"\",\r\n      callbackUrl:\"\",\r\n      callbackName:\"\",\r\n    })\r\n    if(onChange){\r\n      onChange(_.clone(value))\r\n    }\r\n  }\r\n  \r\n  const removeValue = (i:number)=>{\r\n    value.splice(i,1)\r\n    if(onChange){\r\n      onChange(_.clone(value))\r\n    }\r\n  }\r\n\r\n  const hChange = (v:any, key:string, i:number)=>{\r\n    value[i][key] = v;\r\n    if(onChange){\r\n      let newValue = _.cloneDeep(value)\r\n      onChange(newValue)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"flexend\">\r\n        <Button size=\"small\" type=\"primary\" icon={<PlusOutlined />} onClick={addValue} ></Button>\r\n      </div>\r\n      {value?value.map((item:any, index:number)=>(\r\n        <Space className=\"mgt10\" key={index}>\r\n          <Input addonBefore=\"key:\" value={item.callbackCode} onChange={({target})=>hChange(target.value, \"callbackCode\", index)} />\r\n          <Input addonBefore=\"接口URL:\" value={item.callbackUrl} onChange={({target})=>hChange(target.value, \"callbackUrl\", index)} />\r\n          <Input addonBefore=\"说明:\" value={item.callbackName} onChange={({target})=>hChange(target.value, \"callbackName\", index)} />\r\n          <Button size=\"small\" type=\"primary\" danger icon={<MinusOutlined />} onClick={()=>removeValue(index)} ></Button>\r\n        </Space>\r\n      )):null}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default TypeForm","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport JCard from \"@public/components/JCard\"\r\nimport { Button, Card, Popconfirm, Table } from \"antd\";\r\nimport { sysDeviceTypeConfColumns } from \"../columns\";\r\nimport {getDeviceTypeConf, changeDeviceTypeConf, addOrUpTypeCallback} from \"@plate/actions/otherAction\"\r\nimport StatusElement from \"@public/components/Element/StatusElement\";\r\nimport AddModular from \"@public/components/Modular/AddModular\";\r\nimport TypeForm from \"./typeform\";\r\n\r\n\r\n\r\ninterface Props extends IProps {\r\n  devicetype:any;\r\n}\r\n\r\nlet params = {\r\n  current: 1\r\n}\r\n\r\nclass SysDeviceTypeConf extends React.Component<Props> {\r\n\r\n  state = {\r\n    addVisible: false,\r\n    editVisible: false,\r\n    detail: {id: \"\", typeCallbackJson: null},\r\n    confVisible: false,\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getDeviceTypeConf(params)\r\n  }\r\n\r\n  getCol(){\r\n    return [...sysDeviceTypeConfColumns, {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render:(item:any, rows:any)=><StatusElement size=\"small\" notAll value={item} onChange={()=>{\r\n        this.props.actions.changeDeviceTypeConf({\r\n          objective: \"enable\",\r\n          id: rows.id\r\n        }, (res:any)=>{\r\n          this.props.utils.OpenNotification(\"success\")\r\n          this.props.actions.getDeviceTypeConf(params, {obj: res, type: \"edit\"})\r\n        })\r\n      }} />\r\n    },{\r\n      title: \"操作\",\r\n      width: 180,\r\n      render: (item:any)=>{\r\n        return (\r\n          <>\r\n            <Button type=\"link\" size=\"small\" onClick={()=>this.setState({editVisible: true, detail: item})} >编辑</Button>\r\n            <Button size=\"small\" type=\"link\"  onClick={()=>this.setState({confVisible: true, detail: item})} >类型配置</Button>\r\n            <Popconfirm title=\"是否删除？\" onConfirm={()=>{\r\n              this.props.actions.changeDeviceTypeConf({\r\n                objective: \"delete\",\r\n                id: item.id\r\n              }, (res:any)=>{\r\n                this.props.utils.OpenNotification(\"success\")\r\n                this.props.actions.getDeviceTypeConf(params, {refresh: true})\r\n              })\r\n            }}>\r\n              <Button size=\"small\" type=\"link\">删除</Button>\r\n            </Popconfirm>\r\n          </>\r\n        )\r\n      }\r\n    }]\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils, devicetype} = this.props\r\n    const {addVisible, editVisible, detail, confVisible } = this.state\r\n\r\n    return (\r\n      <JCard spinning={spinning}> \r\n        <div key=\"a\">\r\n          <Card size=\"small\" title={<Button type=\"primary\" onClick={()=>this.setState({addVisible: true})} >新增</Button>}>\r\n            <Table size=\"small\" columns={this.getCol()} dataSource={devicetype?utils.addIndex(devicetype.list):[]} \r\n            pagination={utils.Pagination(devicetype, page=>{\r\n              params.current = page;\r\n              this.props.actions.getDeviceTypeConf(params)\r\n            })} />\r\n          </Card>\r\n        </div>\r\n\r\n        <AddModular\r\n          title=\"新增设备类型\"\r\n          spinning={spinning}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={(values:any)=>{\r\n            this.props.actions.changeDeviceTypeConf({\r\n              ...values,\r\n              objective: \"add\",\r\n            }, (res:any)=>{\r\n              this.props.utils.OpenNotification(\"success\")\r\n              this.props.actions.getDeviceTypeConf(params, {refresh: true})\r\n              this.setState({addVisible: false})\r\n            })\r\n          }}\r\n          data={[\r\n            {label: \"类型编号\", name: \"typeCode\", type: \"input\", rules: true},\r\n            {label: \"类型名称\", name: \"typeName\", type: \"input\", rules: true},\r\n            {label: \"状态\", name: \"status\", type: <StatusElement notAll />, rules: true},\r\n            {label: \"备注\", name: \"reamrk\", type: \"textarea\"},\r\n          ]}\r\n        />\r\n\r\n        <AddModular\r\n          title=\"编辑设备类型\"\r\n          spinning={spinning}\r\n          visible={editVisible}\r\n          initialValues={detail}\r\n          onCancel={()=>this.setState({editVisible: false})}\r\n          onOk={(values:any)=>{\r\n            this.props.actions.changeDeviceTypeConf({\r\n              ...values,\r\n              objective: \"update\",\r\n              id: detail.id\r\n            }, (res:any)=>{\r\n              this.props.utils.OpenNotification(\"success\")\r\n              this.props.actions.getDeviceTypeConf(params, {obj: res, type: \"edit\"})\r\n              this.setState({editVisible: false})\r\n            })\r\n          }}\r\n          data={[\r\n            {label: \"类型编号\", name: \"typeCode\", type: \"input\", rules: true},\r\n            {label: \"类型名称\", name: \"typeName\", type: \"input\", rules: true},\r\n            {label: \"状态\", name: \"status\", type: <StatusElement notAll />, rules: true},\r\n            {label: \"备注\", name: \"reamrk\", type: \"textarea\"},\r\n          ]}\r\n        />\r\n\r\n        <AddModular\r\n          title=\"设备类型配置\"\r\n          width={800}\r\n          spinning={spinning}\r\n          visible={confVisible}\r\n          initialValues={detail}\r\n          onCancel={()=>this.setState({confVisible: false,detail:{id: \"\", typeCallbackJson:null}})}\r\n          onOk={(values)=>{\r\n            this.props.actions.addOrUpTypeCallback({\r\n              typeCallbackJson: JSON.stringify(values.typeCallbackJson),\r\n              typeId: detail.id,\r\n            }, (res:any)=>{\r\n              this.props.utils.OpenNotification(\"success\")\r\n              this.props.actions.getDeviceTypeConf(params, {obj: res, type: \"edit\"})\r\n              this.setState({confVisible: false})\r\n            })\r\n          }}\r\n          data={[\r\n            {name: \"typeCallbackJson\", type:<TypeForm/>,wrapperCol:{span: 24}, rules: true}\r\n          ]}\r\n        />\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getDeviceTypeConf, changeDeviceTypeConf, addOrUpTypeCallback }, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    devicetype: state.other.devicetype,\r\n    utils: state.app.utils,\r\n    spinning: state.other.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(SysDeviceTypeConf)"],"sourceRoot":""}