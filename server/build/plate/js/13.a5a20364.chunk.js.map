{"version":3,"sources":["public/components/Modular/getnode.tsx","public/components/Modular/SearchModular.tsx","plate/actions/otherAction.ts","../node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","../node_modules/@ant-design/icons/es/icons/SearchOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/RetweetOutlined.js","../node_modules/@ant-design/icons/es/icons/RetweetOutlined.js","plate/components/Charts/PieChart.tsx","plate/views/statis/PayExpendStatis.tsx","plate/views/statis/system/index.tsx"],"names":["TextArea","Input","Option","Select","RangePicker","DatePicker","getNode","item","type","disabled","style","width","selectList","map","elem","key","id","value","label","notAll","SearchModular","before","data","submitSearch","initialValues","resetValues","layout","bordered","Form","useForm","form","handleRules","rules","required","message","size","className","marginRight","marginBottom","onFinish","values","index","Item","name","initialValue","valuePropName","ghost","htmlType","icon","onClick","setFieldsValue","ACTION","initAllInfo","params","next","dispatch","getState","a","options","url","method","stateApi","setDeviceInit","_","omit","gCompanyHe","companyHe","getInitInfo","getDeviceInit","opt","storetApi","getConfigRule","getPlateMoneyByTime","gRtime","rtime","selectDate","moment","format","getPlateIncome","getPlatePassRecord","getIncomeCount","getSelectThirty","getDeviceonLineLog","getDeviceInfo","addOrUpTypeCallback","changeDeviceTypeConf","getDeviceTypeConf","changeDeviceConf","getDeviceConf","isHave","changeSysBwlist","getSysBwlist","changeBwlist","getBwlist","changeRegstrict","getRegstrict","openState","relieveElecfence","changeElecfence","getElecfence","getPlatePassRecordPages","isMoney","parkId","length","createCodeState","changeAccessCode","getAccessCode","SearchOutlined","props","ref","React","AntdIcon","Object","assign","SearchOutlinedSvg","displayName","RetweetOutlined","RetweetOutlinedSvg","PieChart","angleField","colorField","height","appendPadding","config","interactions","content","legend","radius","connect","state","platebytime","other","changecount","platerecord","incomecount","utils","app","spinning","actions","bindActionCreators","isChange","useState","companyHeChange","useEffect","getAllIncom","arr","s","each","span","title","extra","Text","active","Group","defaultValue","selectType","optionType","buttonStyle","onChange","target","xField","yField","isGroup","isStack","columnWidthRatio","seriesField","Tabs","TabPane","leven","SystemStatis","dType","activeKey","this","v","setState","tabBarExtraContent","Button","picker","tab","Component"],"mappings":"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","file":"plate/js/13.a5a20364.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\"\r\nimport {Input, InputNumber, Select, DatePicker} from \"antd\"\r\nconst {TextArea} = Input\r\nconst {Option} = Select\r\nconst {RangePicker} = DatePicker\r\n\r\ninterface selectListProps {\r\n  label: string,\r\n  id: any;\r\n}\r\n\r\nexport interface ItemType {\r\n  label?: ReactNode,\r\n  name: string,\r\n  type: any,\r\n  selectList?: selectListProps[];\r\n  initialValue?:any;\r\n  valuePropName?:string;\r\n  notAll?:boolean;\r\n  rules?:any;\r\n  disabled?:boolean;\r\n}\r\n\r\nexport const getNode = (item:ItemType)=>{\r\n  switch(item.type){\r\n    case \"input\":\r\n      return <Input disabled={item.disabled} />\r\n    case \"textarea\":\r\n      return <TextArea disabled={item.disabled} />\r\n    case \"inputNumber\":\r\n      return <InputNumber style={{width: \"100%\"}} disabled={item.disabled} />\r\n    case \"datepicker\":\r\n      return <DatePicker style={{width: \"100%\"}} disabled={item.disabled} />\r\n    case \"rangepicker\":\r\n      return <RangePicker style={{width: \"100%\"}} disabled={item.disabled} />\r\n    case \"select\":\r\n      return (\r\n        <Select disabled={item.disabled} >\r\n          {item.selectList?.map(elem=>(\r\n            <Option key={elem.id} value={elem.id} >{elem.label}</Option>\r\n          ))}\r\n        </Select>\r\n      )\r\n    case \"status\":\r\n      return (\r\n        <Select disabled={item.disabled} >\r\n          {item.notAll?null:<Option value=\"\">全部</Option>}\r\n          <Option value={1}>启用</Option>\r\n          <Option value={0}>禁用</Option>\r\n        </Select>\r\n      )\r\n  }\r\n\r\n  return item.type;\r\n}","import React, { ReactNode } from \"react\"\r\nimport { Button, Card, Form, Input, InputNumber} from \"antd\"\r\nimport {ItemType, getNode} from \"./getnode\"\r\nimport { RetweetOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport { FormLayout } from \"antd/lib/form/Form\";\r\n\r\n\r\n\r\ninterface Props {\r\n  before?: ReactNode;\r\n  data: ItemType[];\r\n  submitSearch: Function;\r\n  initialValues: any;\r\n  resetValues?:any;\r\n  layout?:FormLayout; //inline | vertical | horizontal\r\n  bordered?:boolean;\r\n}\r\n\r\nconst SearchModular:React.FC<Props> = ({\r\n  before,\r\n  data,\r\n  submitSearch,\r\n  initialValues,\r\n  resetValues,\r\n  layout=\"inline\",\r\n  bordered\r\n})=>{\r\n  const [form] = Form.useForm();\r\n\r\n  const submitReset = ()=>{\r\n    form.setFieldsValue(resetValues)\r\n    submitSearch()\r\n  }\r\n\r\n  const handleRules = (item:ItemType)=>{\r\n    if(typeof item.rules === 'boolean'){\r\n      return [{required: true, message: `${item.label||\"\"}不能为空！`}]\r\n    }else if(typeof item.rules === 'object'){\r\n      return item.rules;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  return (\r\n    <Card size=\"small\" bordered={bordered} >\r\n      <div className={layout==\"inline\"?\"flexbetween\":\"\"} >\r\n        <div style={layout==\"inline\"?{marginRight:30}:{marginBottom: 20}}  >\r\n          {before}\r\n        </div>\r\n        <div>\r\n          <Form form={form} \r\n            layout={layout}\r\n            onFinish={(values)=>submitSearch({...values})}\r\n            initialValues={initialValues}\r\n          > \r\n            {data.map((item, index)=>(\r\n              <Form.Item\r\n                key={index}\r\n                label={item.label||null}\r\n                name={item.name}\r\n                initialValue={item.initialValue}\r\n                valuePropName={item.valuePropName || \"value\"}\r\n                rules={handleRules(item)}\r\n              >\r\n                {getNode(item)}\r\n              </Form.Item>\r\n            ))}\r\n            <Form.Item >\r\n              <Button type=\"primary\" ghost htmlType=\"submit\" icon={<SearchOutlined />}>搜索</Button>\r\n              {resetValues?\r\n              <Button className=\"mgl10\" onClick={submitReset} icon={<RetweetOutlined />}>重置</Button>:null}\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n    \r\n  )\r\n}\r\n\r\nexport default SearchModular;","import {OTHER_LOADING_START, OTHER_LOADING_END, OTHER_LOADING_NOT} from \"@plate/constant/otherTypes\"\r\nimport { gCompanyHe, gRtime } from \"@public/utils\"\r\nimport {storetApi, stateApi, OptProps} from \"@public/utils/action\"\r\nimport _ from \"lodash\"\r\nimport moment from \"moment\"\r\nconst ACTION = \"OTHER\"\r\n\r\n\r\nexport const initAllInfo = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-parking-config/initAllInfo\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const setDeviceInit = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/deviceInit\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe( params.companyHe)\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\n\r\nexport const getInitInfo = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-parking-config/initInfo\",\r\n      method: \"post\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe( params.companyHe)\r\n      }\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getDeviceInit = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/getDeviceInit\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe( params.companyHe)\r\n      }\r\n    }\r\n    storetApi(options, \"deviceinit\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\n\r\nexport const getConfigRule = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-parking-config/selectConfigRule\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe( params.companyHe)\r\n      }\r\n    }\r\n    storetApi(options, \"configrule\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getPlateMoneyByTime = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-data/selectPlateMoneyByTime\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\", \"rtime\"])),\r\n        ...gCompanyHe( params.companyHe),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        selectDate: moment(params.selectDate).format(params.type==\"year\" ? \"YYYY\" : \"YYYY-MM\"),\r\n        type: params.type==\"year\"?\"Y\":params.type==\"month\"?\"M\":\"D\"\r\n      }\r\n    }\r\n    storetApi(options, \"platebytime\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getPlateIncome = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-data/selectPlateIncome\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\", \"rtime\"])),\r\n        ...gCompanyHe( params.companyHe),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        selectDate: moment(params.selectDate).format(params.type==\"year\" ? \"YYYY\" : \"YYYY-MM\"),\r\n        type: params.type==\"year\"?\"Y\":params.type==\"month\"?\"M\":\"D\"\r\n      }\r\n    }\r\n    storetApi(options, \"changecount\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getPlatePassRecord = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-data/platePassRecord\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\", \"rtime\"])),\r\n        ...gCompanyHe( params.companyHe),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        selectDate: moment(params.selectDate).format(params.type==\"year\" ? \"YYYY\" : \"YYYY-MM\"),\r\n        type: params.type==\"year\"?\"Y\":params.type==\"month\"?\"M\":\"D\"\r\n      }\r\n    }\r\n    storetApi(options, \"platerecord\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\n\r\nexport const getIncomeCount = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-data/incomeCount\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\", \"rtime\"])),\r\n        ...gCompanyHe( params.companyHe),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        selectDate: moment(params.selectDate).format(params.type==\"year\" ? \"YYYY\" : \"YYYY-MM\"),\r\n        type: params.type==\"year\"?\"Y\":params.type==\"month\"?\"M\":\"D\"\r\n      }\r\n    }\r\n    storetApi(options, \"incomecount\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getSelectThirty = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-online/selectThirty\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getDeviceonLineLog = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-online/onlineInfo\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getDeviceInfo = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/getById\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const addOrUpTypeCallback = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device-type/addOrUpTypeCallback\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const changeDeviceTypeConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device-type/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getDeviceTypeConf = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device-type/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"devicetype\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const changeDeviceConf = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\n\r\nexport const getDeviceConf = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-device/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"companyHe\"])),\r\n        ...gCompanyHe(params.companyHe),\r\n        isHave: params.isHave?1:0,\r\n      }\r\n    }\r\n    storetApi(options, \"deviceconf\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const changeSysBwlist = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-system-black-white-list/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getSysBwlist = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-system-black-white-list/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"sysbwlist\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const changeBwlist = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-item-black-white-list/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getBwlist = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-item-black-white-list/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    storetApi(options, \"bwlist\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const changeRegstrict = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-item-license-region-forbid/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getRegstrict = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-item-license-region-forbid/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...params,\r\n        openState: params.openState?1:0\r\n      }\r\n    }\r\n    storetApi(options, \"regstrict\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const relieveElecfence = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-license-fence/relieveEnclosure\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const changeElecfence = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-license-fence/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getElecfence = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-license-fence/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...params,\r\n        openState: params.openState?1:0\r\n      }\r\n    }\r\n    storetApi(options, \"elecfence\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const getPlatePassRecordPages = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-pass-record/selectPlatePassRecordPages\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"rtime\"])),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\"),\r\n        isMoney: params.isMoney?1:0,\r\n        parkId: params.parkId.length?params.parkId[params.parkId.length-1]:\"\"\r\n      } \r\n    }\r\n    storetApi(options, \"accesslog\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const createCodeState = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-active-code/createState\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const changeAccessCode = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-active-code/composite\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getAccessCode = (params:any, opt:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/plate/sys/plate-active-code/page\",\r\n      method: \"get\",\r\n      data: {\r\n        ...(_.omit(params, [\"rtime\"])),\r\n        ...gRtime(params.rtime, \"startTime\", \"endTime\")\r\n      } \r\n    }\r\n    storetApi(options, \"accesscode\", dispatch, ACTION, opt)\r\n  }\r\n}","// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\n\nSearchOutlined.displayName = 'SearchOutlined';\nexport default /*#__PURE__*/React.forwardRef(SearchOutlined);","// This icon file is generated automatically.\nvar RetweetOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M136 552h63.6c4.4 0 8-3.6 8-8V288.7h528.6v72.6c0 1.9.6 3.7 1.8 5.2a8.3 8.3 0 0011.7 1.4L893 255.4c4.3-5 3.6-10.3 0-13.2L749.7 129.8a8.22 8.22 0 00-5.2-1.8c-4.6 0-8.4 3.8-8.4 8.4V209H199.7c-39.5 0-71.7 32.2-71.7 71.8V544c0 4.4 3.6 8 8 8zm752-80h-63.6c-4.4 0-8 3.6-8 8v255.3H287.8v-72.6c0-1.9-.6-3.7-1.8-5.2a8.3 8.3 0 00-11.7-1.4L131 768.6c-4.3 5-3.6 10.3 0 13.2l143.3 112.4c1.5 1.2 3.3 1.8 5.2 1.8 4.6 0 8.4-3.8 8.4-8.4V815h536.6c39.5 0 71.7-32.2 71.7-71.8V480c-.2-4.4-3.8-8-8.2-8z\" } }] }, \"name\": \"retweet\", \"theme\": \"outlined\" };\nexport default RetweetOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RetweetOutlinedSvg from \"@ant-design/icons-svg/es/asn/RetweetOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RetweetOutlined = function RetweetOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: RetweetOutlinedSvg\n  }));\n};\n\nRetweetOutlined.displayName = 'RetweetOutlined';\nexport default /*#__PURE__*/React.forwardRef(RetweetOutlined);","import React from \"react\"\r\nimport { Pie } from '@ant-design/charts';\r\n\r\ninterface Props {\r\n  data:any[];\r\n  angleField:string;\r\n  colorField:string;\r\n  height?: number;\r\n  label?:any;\r\n  appendPadding?:number[];\r\n  legend?:any;\r\n  radius?:number;\r\n}\r\n\r\nconst PieChart:React.FC<Props> = ({\r\n  data,\r\n  angleField,\r\n  colorField,\r\n  height=200,\r\n  appendPadding=[8,0,8,0],\r\n  label={\r\n    type: \"outer\",\r\n    content: '{percentage}',\r\n  },\r\n  legend,\r\n  radius,\r\n})=>{\r\n\r\n  const config = {\r\n    angleField,\r\n    colorField,\r\n    data,\r\n    height,\r\n    appendPadding,\r\n    interactions: [{ type: 'element-active' }],\r\n    label,\r\n    legend,\r\n    radius,\r\n  }\r\n\r\n  return (\r\n    <Pie {...config} />\r\n  )\r\n}\r\n\r\nexport default PieChart;\r\n","import { Card, Col, Radio, Row, Skeleton, Typography } from \"antd\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {getIncomeCount, getPlatePassRecord, getPlateIncome, getPlateMoneyByTime } from \"@plate/actions/otherAction\"\r\nimport { Pie } from \"@ant-design/charts\"\r\nimport PieChart from \"@plate/components/Charts/PieChart\"\r\nimport _ from \"lodash\"\r\nimport StackColumnChart from \"@plate/components/Charts/StackColumnChart\"\r\nimport moment from \"moment\"\r\n\r\n\r\ninterface Props {\r\n  actions:any;\r\n  params:any;\r\n  isChange:number;\r\n  incomecount:any;\r\n  platerecord:any;\r\n  changecount:any;\r\n  platebytime:any;\r\n}\r\n\r\nconst PayExpendStatis:React.FC<Props> = ({\r\n  actions,\r\n  params,\r\n  isChange,\r\n  incomecount,\r\n  platerecord,\r\n  changecount,\r\n  platebytime\r\n})=>{\r\n  const [companyHeChange, setCompanyHeChange] = useState([\r\n    { label: '项目收支', value: 'I' },\r\n    { label: '公司收支', value: 'C' },\r\n  ])\r\n\r\n  useEffect(()=>{\r\n    actions.getIncomeCount(params)\r\n    actions.getPlatePassRecord(params)\r\n    actions.getPlateIncome(params)\r\n    actions.getPlateMoneyByTime(params)\r\n  },[isChange])\r\n\r\n  const getAllIncom = (arr:any[], key:string)=>{\r\n    let s = 0;\r\n    if(!arr) return s;\r\n    _.each(arr, item=>{\r\n      s+=item[key]\r\n    })\r\n    return s\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>\r\n          <Card size=\"small\" title=\"收入统计\" extra={<span>总收入<Typography.Text type=\"danger\" >{getAllIncom(incomecount, \"countMoney\")}</Typography.Text></span>} >\r\n            {incomecount?<PieChart \r\n              data={incomecount}\r\n              angleField=\"countMoney\"\r\n              colorField=\"type\"\r\n            />:<Skeleton active />}\r\n          </Card>\r\n          <Card size=\"small\" title=\"通行记录\" extra={<span>合计<Typography.Text type=\"danger\" >{getAllIncom(platerecord, \"sum\")}</Typography.Text></span>} >\r\n            {platerecord?<PieChart \r\n              data={platerecord}\r\n              angleField=\"sum\"\r\n              colorField=\"type\"\r\n            />:<Skeleton active />}\r\n          </Card>\r\n        </Col>\r\n        <Col span={18}>\r\n        <Card style={{height: 530}} size=\"small\" title={(\r\n          <Radio.Group \r\n          defaultValue={params.selectType}\r\n          options={companyHeChange}\r\n          optionType=\"button\"\r\n          buttonStyle=\"solid\"\r\n          onChange={({target})=>{\r\n            params.selectType = target.value\r\n            actions.getPlateIncome(params)\r\n          }}  />\r\n        )} >\r\n          <div>\r\n            {changecount?\r\n            <StackColumnChart \r\n            data={changecount}\r\n            height={450}\r\n            xField='key'\r\n            yField='countMoney'\r\n            isGroup={false}\r\n            isStack={true}\r\n            columnWidthRatio={0.5}\r\n            seriesField='type' />:null}\r\n          </div>\r\n        </Card>\r\n      </Col>\r\n      </Row>\r\n      <Card size=\"small\" title={`${moment(params.type==\"date\"?params.rtime[0]:params.selectDate).format(\"YYYY\")}年收支分析查询`} >\r\n        <div >\r\n        {platebytime?\r\n          <StackColumnChart \r\n            data={platebytime}\r\n            xField='key'\r\n            yField='countMoney'\r\n            isGroup={false}\r\n            isStack={true}\r\n            seriesField='type'\r\n            columnWidthRatio={0.8}/>:null}\r\n        </div>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getIncomeCount, getPlatePassRecord, getPlateIncome, getPlateMoneyByTime}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    platebytime: state.other.platebytime,\r\n    changecount: state.other.changecount,\r\n    platerecord: state.other.platerecord,\r\n    incomecount: state.other.incomecount,\r\n    utils: state.app.utils,\r\n    spinning: state.other.spinning\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateProps, mapDispatchProps )(PayExpendStatis)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport JCard from \"@public/components/JCard\"\r\nimport { Card, DatePicker, Radio, Tabs } from \"antd\";\r\nimport SearchModular from \"@public/components/Modular/SearchModular\";\r\nimport moment from \"moment\";\r\nimport PayExpendStatis from \"../PayExpendStatis\";\r\n\r\nconst {TabPane} = Tabs\r\nconst {RangePicker} =  DatePicker\r\n\r\ninterface Props extends IProps {\r\n\r\n}\r\n\r\n\r\n\r\nlet params:any = {\r\n  companyHe: [],\r\n  rtime: null,\r\n  type: \"year\",\r\n  selectDate:moment(),\r\n  leven: \"S\",\r\n  selectType: \"I\"\r\n}\r\n\r\nclass SystemStatis extends React.Component<Props> {\r\n\r\n  state = {\r\n    dType: params.type,\r\n    activeKey: \"1\",\r\n    isChange:0\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils} = this.props\r\n    const {activeKey, dType, isChange} = this.state\r\n\r\n    return (\r\n      <JCard spinning={spinning}> \r\n        <Card size=\"small\">\r\n          <Tabs\r\n            type=\"card\" \r\n            activeKey={activeKey}\r\n            onChange={(v)=>this.setState({activeKey:v})}\r\n            tabBarExtraContent={(\r\n              <div style={{marginBottom: \"1px\"}}>\r\n                  <SearchModular\r\n                  bordered={false}\r\n                  initialValues={params}\r\n                  submitSearch={(values:any)=>{\r\n                    params = {...params, ...values}\r\n                    this.setState({isChange: isChange+1})\r\n                  }}\r\n                  data={[\r\n                    {name: \"type\", type: (\r\n                      <Radio.Group onChange={({target})=>this.setState({dType:target.value})}>\r\n                        <Radio.Button value=\"year\">年</Radio.Button>\r\n                        <Radio.Button value=\"month\">月</Radio.Button>\r\n                        <Radio.Button value=\"date\">日</Radio.Button>\r\n                      </Radio.Group>\r\n                    )},\r\n                    {name: dType==\"date\"?\"rtime\":\"selectDate\", \r\n                    type: dType==\"date\"?<RangePicker/>:<DatePicker picker={dType} />, rules: true}\r\n                  ]}\r\n                />\r\n              </div>\r\n          )}\r\n          >\r\n            <Tabs.TabPane tab=\"收支数据\" key=\"1\" />\r\n            {/* <Tabs.TabPane tab=\"订单数据\" key=\"2\" /> */}\r\n          </Tabs>\r\n        </Card>\r\n        <PayExpendStatis params={params} isChange={isChange} />\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    utils: state.app.utils,\r\n    spinning: state.other.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(SystemStatis)"],"sourceRoot":""}