{"version":3,"sources":["admin/actions/systemAction.ts","admin/views/system/columns/index.tsx","admin/views/system/index.tsx"],"names":["optionList","opt","a","options","dispatch","keyName","obj","next","type","refresh","key","url","JSON","stringify","data","isCache","MC","get","SYSTEM_LOADING_START","fetch","put","SYSTEM_LOADING_END","_","size","index","findIndex","list","o","id","assign","SYSTEM_LOADING_NOT","console","log","deleteSystemPackage","params","getState","method","editSystemPackage","addSystemPackage","getSystemPackage","editSystem","addSystem","getSystems","systemColumns","title","dataIndex","render","item","ProjectLevel","TextArea","Input","Option","Select","current","SystemPage","state","addVisible","editVisible","detail","temIcon","this","props","actions","_this","width","onClick","setState","to","values","utils","submitFiles","OpenNotification","spinning","systems","JCard","columns","getCol","dataSource","addIndex","pagination","Pagination","page","AddPage","visible","onCancel","onOk","addSubmit","bind","label","name","rules","value","UploadElement","initialValue","editSubmit","initialValues","echoFiles","React","Component","connect","system","app","bindActionCreators"],"mappings":"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","file":"admin/js/11.c6f0f72a.chunk.js","sourcesContent":["import {SYSTEM_LOADING_START, SYSTEM_LOADING_END, SYSTEM_LOADING_NOT} from \"@admin/constant/system\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\nimport _ from \"lodash\"\r\n\r\n\r\n\r\n/**\r\n * list API公共方法\r\n * \r\n */\r\ninterface OptionListProps{\r\n  options: any;\r\n  dispatch:any;\r\n  keyName: string;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n\r\ninterface ParamsListProps{\r\n  params: any;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n// options:any,keyName:string, obj?:any, next?:(...arg0:any)=>void\r\nconst optionList = async (opt: OptionListProps)=>{\r\n    const {options,dispatch, keyName, obj, next, type, refresh} = opt;\r\n    try{\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n    if(!isCache || refresh){\r\n      dispatch({\r\n        type: SYSTEM_LOADING_START\r\n      })\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      MC.put(key, data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n        [keyName]: data\r\n      })\r\n    }else{\r\n      if(obj && _.size(obj)){\r\n        let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n        if(type==\"edit\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }else if(type==\"add\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }\r\n\r\n        MC.put(key, isCache)\r\n        dispatch({\r\n          type: SYSTEM_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: SYSTEM_LOADING_END,\r\n          [keyName]: isCache\r\n        })\r\n      }\r\n      \r\n    }\r\n    \r\n  }catch(e){\r\n    console.log(e)\r\n    dispatch({type: SYSTEM_LOADING_END})\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport const deleteSystemPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-auth-package/removeById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const editSystemPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-auth-package/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addSystemPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-auth-package/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSystemPackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-auth-package/list\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const editSystem = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-system/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addSystem = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: SYSTEM_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-proper-system/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: SYSTEM_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: SYSTEM_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanyRole = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-company/selectSystem\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"companyrole\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\nexport const getSystems = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-proper-system/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"systems\", obj, next, refresh, type})\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {ProjectLevel} from \"@public/common/mapper\"\r\n\r\nexport const systemColumns = [\r\n  {\r\n    title: \"系统代号\",\r\n    dataIndex: \"temCode\"\r\n  },\r\n  {\r\n    title: \"系统名称\",\r\n    dataIndex: \"temName\"\r\n  },\r\n  {\r\n    title: \"访问URL\",\r\n    dataIndex: \"temUrl\"\r\n  },\r\n  {\r\n    title: \"系统级别\",\r\n    dataIndex: \"temLevel\",\r\n    render:(item:any)=>ProjectLevel[item]\r\n  },\r\n  // {\r\n  //   title: \"应用公司与项目\",\r\n  //   dataIndex: \"key\"\r\n  // },\r\n  // {\r\n  //   title: \"系统权限\",\r\n  //   dataIndex: \"key\"\r\n  // },\r\n]","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport {IProps} from \"@public/common/interface\"\r\nimport {getSystems, addSystem, editSystem} from \"@admin/actions/systemAction\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { Button, Card, Input, Select, Table } from \"antd\"\r\nimport {systemColumns} from \"./columns\"\r\nimport AddPage from \"@admin/components/Page/AddPage\"\r\nimport UploadElement from \"@admin/components/Element/UploadElement\"\r\nimport _ from \"lodash\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst {TextArea} = Input\r\nconst {Option} = Select\r\n\r\ninterface Props extends IProps{\r\n  systems: any;\r\n}\r\n\r\nlet params={\r\n  current:1\r\n}\r\n\r\nclass SystemPage extends React.Component<Props> {\r\n  state = {\r\n    addVisible: false,\r\n    editVisible: false,\r\n    detail: {\r\n      temIcon: \"\",\r\n      id: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getSystems({params})\r\n  }\r\n\r\n  getCol(){\r\n    let _this = this\r\n    return [...systemColumns, {\r\n      title: \"操作\",\r\n      width: 150,\r\n      render(item:any) {\r\n        return (\r\n          <>\r\n            <Button type=\"link\" onClick={()=>_this.setState({detail: item, editVisible: true})}>编辑</Button>\r\n            <Link to={`/company/${item.id}/permisser`} >\r\n              <Button type=\"link\">权限包</Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      }\r\n    }]\r\n  }\r\n\r\n  addSubmit(values:any){\r\n    this.props.actions.addSystem({\r\n      ...values,\r\n      temIcon: this.props.utils.submitFiles(values.temIcon)\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getSystems({params, refresh: true})\r\n      this.setState({addVisible: false})\r\n    })\r\n  }\r\n  editSubmit(values:any){\r\n    this.props.actions.editSystem({\r\n      ...values,\r\n      id: this.state.detail.id,\r\n      temIcon: this.props.utils.submitFiles(values.temIcon)\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getSystems({params, refresh: true})\r\n      this.setState({editVisible: false})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils, systems} = this.props\r\n    const {addVisible, editVisible, detail} = this.state;\r\n    \r\n\r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <div key=\"a\">\r\n          <Card size=\"small\" title={<Button type=\"primary\" onClick={()=>this.setState({addVisible: true})}>新增</Button>}>\r\n            <Table size=\"small\" columns={this.getCol()} dataSource={systems?utils.addIndex(systems.list):[]} \r\n            pagination={utils.Pagination(systems, page=>{\r\n              params.current = page\r\n              this.props.actions.getSystems({params, refresh: true})\r\n            })}/>\r\n          </Card>\r\n        </div>\r\n\r\n\r\n        <AddPage\r\n          title=\"新增系统\"\r\n          spinning={spinning}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={this.addSubmit.bind(this)}\r\n          data={[\r\n            {label: \"系统代号\", name: \"temCode\", type: Input, rules: true},\r\n            {label: \"系统名称\", name: \"temName\", type: Input, rules: true},\r\n            {label: \"访问URL\", name: \"temUrl\", type: Input, rules: true},\r\n            {label: \"系统级别\", name: \"temType\", type: (\r\n              <Select>\r\n                <Option value=\"GS\">公司级别</Option>\r\n                <Option value=\"XM\">项目级别</Option>\r\n              </Select>\r\n            ), rules: true},\r\n            {label: \"图标\", name: \"temIcon\", type: <UploadElement/>, initialValue: []},\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n        />\r\n        \r\n        <AddPage\r\n          title=\"编辑系统\"\r\n          spinning={spinning}\r\n          visible={editVisible && _.size(detail)>1}\r\n          onCancel={()=>this.setState({editVisible: false})}\r\n          onOk={this.editSubmit.bind(this)}\r\n          initialValues={{...detail, temIcon: utils.echoFiles(detail.temIcon)}}\r\n          data={[\r\n            {label: \"系统代号\", name: \"temCode\", type: Input, rules: true},\r\n            {label: \"系统名称\", name: \"temName\", type: Input, rules: true},\r\n            {label: \"访问URL\", name: \"temUrl\", type: Input, rules: true},\r\n            {label: \"系统级别\", name: \"temType\", type: (\r\n              <Select>\r\n                <Option value=\"GS\">公司级别</Option>\r\n                <Option value=\"XM\">项目级别</Option>\r\n              </Select>\r\n            ), rules: true},\r\n            {label: \"图标\", name: \"temIcon\", type: <UploadElement/>, },\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n        />\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getSystems, addSystem, editSystem}, dispatch)\r\n  }\r\n} \r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    systems: state.system.systems,\r\n    spinning: state.system.spinning,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(SystemPage)"],"sourceRoot":""}