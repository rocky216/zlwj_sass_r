{"version":3,"sources":["admin/actions/messageAction.ts","admin/views/message/columns/index.tsx","admin/views/message/sign/index.tsx"],"names":["optionList","opt","a","options","dispatch","keyName","obj","next","type","refresh","key","url","JSON","stringify","data","isCache","MC","get","MESSAGE_LOADING_START","fetch","put","MESSAGE_LOADING_END","_","size","index","findIndex","list","o","id","assign","MESSAGE_LOADING_NOT","console","log","statusMessageSign","params","getState","method","deleteMessageSign","addMessageSign","getMessageSign","getMessagePackageSum","statusMessagePackage","editMessagePackage","addMessagePackage","deleteMessagePackage","addMessageNum","getMessagePackage","getMessageOrder","newParams","omit","startTime","time","moment","format","endTime","messageSignColumns","title","dataIndex","render","item","MessageType","DefaultStatus","messageConfColumns","messageOrderColumns","TextArea","Input","Option","Select","current","signName","status","resetParams","MessageSign","state","addVisible","this","props","actions","rows","value","onChange","statusSubmit","bind","width","onConfirm","deleteSubmit","values","utils","OpenNotification","setState","spinning","signs","before","onClick","initialValues","resetValues","handleSearch","submitSearch","label","name","selectList","columns","getCol","dataSource","addIndex","visible","onCancel","onOk","addSubmit","React","Component","connect","message","app","bindActionCreators"],"mappings":"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","file":"admin/js/7.d983c4de.chunk.js","sourcesContent":["import {MESSAGE_LOADING_START, MESSAGE_LOADING_END, MESSAGE_LOADING_NOT} from \"@admin/constant/message\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\nimport _ from \"lodash\"\r\nimport moment from \"moment\"\r\n\r\n/**\r\n * list API公共方法\r\n * \r\n */\r\ninterface OptionListProps{\r\n  options: any;\r\n  dispatch:any;\r\n  keyName: string;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n\r\ninterface ParamsListProps{\r\n  params: any;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n// options:any,keyName:string, obj?:any, next?:(...arg0:any)=>void\r\nconst optionList = async (opt: OptionListProps)=>{\r\n    const {options,dispatch, keyName, obj, next, type, refresh} = opt;\r\n    try{\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n    if(!isCache || refresh){\r\n      dispatch({\r\n        type: MESSAGE_LOADING_START\r\n      })\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      MC.put(key, data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n        [keyName]: data\r\n      })\r\n    }else{\r\n      if(obj && _.size(obj)){\r\n        let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n        if(type==\"edit\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }else if(type==\"add\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }\r\n\r\n        MC.put(key, isCache)\r\n        dispatch({\r\n          type: MESSAGE_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: MESSAGE_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }\r\n      \r\n    }\r\n    \r\n  }catch(e){\r\n    console.log(e)\r\n    dispatch({type: MESSAGE_LOADING_END})\r\n  }\r\n  \r\n}\r\n\r\nexport const statusMessageSign = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: MESSAGE_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-sms-sign/updateStatus\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: MESSAGE_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteMessageSign = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: MESSAGE_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-sms-sign/delById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: MESSAGE_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addMessageSign = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: MESSAGE_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-sms-sign/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: MESSAGE_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getMessageSign = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-sms-sign/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"signs\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\nexport const getMessagePackageSum = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-company-sms/systemSmsNum\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"packagesum\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const statusMessagePackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: MESSAGE_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-sms-package/updateStatus\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: MESSAGE_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const editMessagePackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: MESSAGE_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-sms-package/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: MESSAGE_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addMessagePackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: MESSAGE_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-sms-package/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: MESSAGE_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteMessagePackage = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: MESSAGE_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-sms-package/delById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: MESSAGE_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addMessageNum = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: MESSAGE_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company-sms/addSystemSmsNum\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: MESSAGE_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: MESSAGE_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getMessagePackage = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-sms-package/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"packages\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\nexport const getMessageOrder = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    \r\n    let newParams = _.omit(params, \"time\")\r\n    \r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-sms-order/page\",\r\n      method: \"get\",\r\n      data: {...newParams, \r\n        startTime: params.time?moment(params.time[0]).format(\"YYYY-MM-DD\"):\"\",\r\n        endTime: params.time?moment(params.time[1]).format(\"YYYY-MM-DD\"):\"\",\r\n      }\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"orders\", obj, next, refresh, type})\r\n  }\r\n}","import React from \"react\"\r\nimport {Status, DefaultStatus, MessageType} from \"@public/common/mapper\"\r\n\r\n\r\nexport const messageSignColumns = [\r\n  {\r\n    title: \"签名名称\",\r\n    dataIndex: \"signName\"\r\n  },\r\n  {\r\n    title: \"短信种类\",\r\n    dataIndex: \"signType\",\r\n    render: (item:number)=>MessageType[item]\r\n  },\r\n  {\r\n    title: \"备注\",\r\n    dataIndex: \"remark\"\r\n  },\r\n  {\r\n    title: \"是否默认\",\r\n    dataIndex: \"isDefault\",\r\n    render: (item:number)=>DefaultStatus[item]\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n]\r\n\r\nexport const messageConfColumns = [\r\n  {\r\n    title: \"短信包名称\",\r\n    dataIndex: \"packageName\"\r\n  },\r\n  {\r\n    title: \"短信包详情\",\r\n    dataIndex: \"packageDesc\"\r\n  },\r\n  {\r\n    title: \"短信数量(条)\",\r\n    dataIndex: \"num\"\r\n  },\r\n  {\r\n    title: \"短信包价格(元)\",\r\n    dataIndex: \"money\"\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n]\r\n\r\nexport const messageOrderColumns = [\r\n  {\r\n    title: \"购买时间\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n  {\r\n    title: \"短信包名称\",\r\n    dataIndex: \"packageName\"\r\n  },\r\n  {\r\n    title: \"短信数量(条)\",\r\n    dataIndex: \"num\"\r\n  },\r\n  {\r\n    title: \"短信包价格(元)\",\r\n    dataIndex: \"money\"\r\n  },\r\n  {\r\n    title: \"支付公司\",\r\n    dataIndex: \"companyName\"\r\n  },\r\n  {\r\n    title: \"支付信息\",\r\n    dataIndex: \"payWayStr\"\r\n  },\r\n  {\r\n    title: \"支付金额(元)\",\r\n    dataIndex: \"payMoney\"\r\n  },\r\n]","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport JCard from \"@admin/components/JCard\";\r\nimport {getMessageSign, addMessageSign, deleteMessageSign, statusMessageSign} from \"@admin/actions/messageAction\"\r\nimport { Button, Card, Input, Popconfirm, Select, Table } from \"antd\";\r\nimport {messageSignColumns} from \"../columns\"\r\nimport Search from \"@admin/components/Submit/Search\";\r\nimport AddPage from \"@admin/components/Page/AddPage\";\r\n\r\nconst {TextArea} = Input\r\nconst {Option} = Select\r\n\r\ninterface Props extends IProps {\r\n  signs:any;\r\n}\r\n\r\nlet params = {\r\n  current: 1,\r\n  signName: \"\",\r\n  status: \"\",\r\n  \r\n}\r\n\r\nlet resetParams = {\r\n  current: 1,\r\n  signName: \"\",\r\n  status: \"\"\r\n}\r\n\r\nclass MessageSign extends React.Component<Props> {\r\n  state = {\r\n    addVisible: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getMessageSign({params})\r\n  }\r\n\r\n  getCol(){\r\n    return [...messageSignColumns, {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render:(item:any, rows:any)=>{\r\n        return (\r\n          <Select size=\"small\" value={item} onChange={this.statusSubmit.bind(this, rows)} >\r\n            <Option value={1}>启用</Option>\r\n            <Option value={0}>禁用</Option>\r\n          </Select>\r\n        );\r\n      }\r\n    }, {\r\n      title: \"操作\",\r\n      width: 120,\r\n      render:(item:any)=>{\r\n        return (\r\n          <Popconfirm title=\"是否删除\" onConfirm={this.deleteSubmit.bind(this, item)}>\r\n            <Button type=\"link\">删除</Button>\r\n          </Popconfirm>\r\n        );\r\n      }\r\n    }]\r\n  }\r\n  \r\n\r\n  submitSearch(values:any){\r\n    if(!values){\r\n      params = resetParams;\r\n    }else{\r\n      params={...params, ...values}\r\n    }\r\n    this.props.actions.getMessageSign({params, refresh: true})\r\n  }\r\n\r\n  statusSubmit(item:any){\r\n    this.props.actions.statusMessageSign({id: item.id}, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getMessageSign({params, refresh: true})\r\n    })\r\n  }\r\n\r\n  deleteSubmit(item:any){\r\n    this.props.actions.deleteMessageSign({id: item.id}, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getMessageSign({params, refresh: true})\r\n    })\r\n  }\r\n\r\n  addSubmit(values:any){\r\n    this.props.actions.addMessageSign(values, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({addVisible: false})\r\n      this.props.actions.getMessageSign({params, refresh: true})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils, signs} = this.props\r\n    const {addVisible} = this.state\r\n    \r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <div key=\"a\">\r\n          <Search\r\n            \r\n            before={<Button type=\"primary\" onClick={()=>this.setState({addVisible: true})}>新增</Button>}\r\n            initialValues={params}\r\n            resetValues={resetParams}\r\n            handleSearch={this.submitSearch.bind(this)}\r\n            data={[\r\n              {label: \"签名名称\", name: \"signName\", type: Input},\r\n              {label: \"状态\", name: \"status\", type: Select, selectList: [\r\n                {label: \"全部\", id: \"\"},\r\n                {label: \"启用\", id: 1},\r\n                {label: \"禁用\", id: 0},\r\n              ]},\r\n            ]}\r\n          />\r\n        </div>\r\n        <div key=\"b\">\r\n          <Card size=\"small\" key=\"b\">\r\n            <Table size=\"small\" columns={this.getCol()} dataSource={signs?utils.addIndex(signs.list):[]} />\r\n          </Card>\r\n        </div>\r\n        \r\n        <AddPage\r\n          title=\"新增签名\"\r\n          spinning={spinning}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={this.addSubmit.bind(this)}\r\n          data={[\r\n            {label: \"签名名称\", name: \"signName\", type: Input},\r\n            {label: \"平台签名Id\", name: \"signId\", type: Input},\r\n            {label: \"是否默认\", name: \"isDefault\", type: Select, selectList: [\r\n              {name: \"是\", id: 1},\r\n              {name: \"否\", id: 0},\r\n            ]},\r\n            {label: \"短信种类\", name: \"signType\", type: Select, selectList: [\r\n              {name: \"阿里云\", id: \"ALY\"},\r\n              {name: \"飞鸽\", id: \"FG\"},\r\n            ]},\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n        />\r\n\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getMessageSign, addMessageSign, deleteMessageSign, statusMessageSign}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    signs: state.message.signs,\r\n    utils: state.app.utils,\r\n    spinning: state.message.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(MessageSign)"],"sourceRoot":""}