{"version":3,"sources":["admin/constant/app.ts","reportWebVitals.ts","admin/components/SideBar/menu.ts","admin/components/SideBar/index.tsx","admin/views/home/index.tsx","admin/constant/company.ts","admin/actions/companyAction.ts","admin/components/Element/Region.tsx","admin/views/company/detial/baseinfo.tsx","admin/views/company/columns/index.tsx","admin/views/company/detial/companyproject.tsx","admin/views/company/detial/companymessage.tsx","admin/views/company/detial/companyrole.tsx","admin/views/company/detial/index.tsx","admin/views/company/index.tsx","admin/routers/routeData.tsx","public/pages/error/index.tsx","admin/routers/index.tsx","admin/views/app/index.tsx","admin/views/index.tsx","admin/reducers/appReducer.ts","admin/reducers/companyReducer.ts","admin/reducers/userReducer.ts","admin/reducers/systemReducer.ts","admin/reducers/messageReducer.ts","admin/reducers/otherReducer.ts","admin/reducers/index.ts","admin/store/index.ts","public/pages/login/index.tsx","admin/index.tsx","admin/components/JCard/index.tsx","admin/components/Page/AddPage.tsx","admin/constant/message.ts","admin/components/Element/UploadElement.tsx","admin/components/Element/SelectCompany.tsx","admin/actions/appAction.ts","admin/constant/user.ts","admin/constant/system.ts","admin/constant/other.ts","public/common/mapper.ts","admin/components/Submit/Search.tsx","public/utils/http.ts","public/utils/index.ts"],"names":["APP_LOADING_START","APP_LOADING_END","APP_LOADING_NOT","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","name","key","path","children","SubMenu","Menu","SideBar","theme","mode","menu","map","item","icon","TeamOutlined","title","elem","Item","to","PieChartOutlined","config","data","year","value","xField","yField","point","size","shape","label","style","fill","HomePage","console","log","this","props","JCard","spinning","React","Component","connect","state","COMPANY_LOADING_START","COMPANY_LOADING_END","COMPANY_LOADING_NOT","optionList","opt","a","options","dispatch","keyName","obj","next","type","refresh","url","JSON","stringify","isCache","MC","get","fetch","put","_","index","findIndex","list","o","id","assign","getCompanyRole","getState","params","method","editCompanyProject","addCompanyProject","getCompanyProject","editCompanyBase","getCompanyDetail","updateCompanyStatus","addCompany","getCompanys","companyAddress","join","region","app","actions","bindActionCreators","getRegions","onChange","useEffect","defaultValue","changedValue","fieldNames","placeholder","TextArea","Input","layout","labelCol","span","wrapperCol","CompanyBaseInfo","formRef","createRef","formList","UploadElement","SelectCompany","Region","companyDetail","logo","match","res","split","setState","values","utils","submitFiles","OpenNotification","extra","ghost","onClick","current","submit","ref","onFinish","onFinishBase","bind","initialValues","uid","active","companyProjectColumns","dataIndex","render","Status","companyColumns","CompanyProject","addVisible","editVisible","detail","itemAddress","companyId","_this","companyproject","appSpinning","AddPage","visible","onCancel","onOk","addOk","initialValue","InputNumber","editOk","columns","getCol","dataSource","addIndex","pagination","Pagination","page","company","CompanyMessage","CompanyRole","arr","recursion","each","userAuthVoList","selectable","length","className","PlusOutlined","DeleteOutlined","companyrole","blockNode","defaultExpandAll","titleRender","treeData","handleData","onSelect","handleSelect","TabPane","Tabs","CompanyDetailPage","tabs","history","val","push","tabBarExtraContent","tab","component","from","Option","Select","status","restParams","CompanyPage","Object","rows","changeStatus","companys","resourceType","fileType","linkType","fileSize","isFlag","rules","submitAdd","before","resetValues","selectList","handleSearch","lazy","loader","loadable","cacheKey","fallback","routes","exact","Home","routeData","handleRoute","ErrorPage","margin","width","src","preview","Routers","Header","Layout","Content","Sider","Footer","App","Index","window","_navigation","withRouter","initialState","token","getToken","echoFiles","appReducer","action","companyReducer","USER_LOADING_START","USER_LOADING_END","USER_LOADING_NOT","systemReducer","SYSTEM_LOADING_START","SYSTEM_LOADING_END","SYSTEM_LOADING_NOT","messageReducer","MESSAGE_LOADING_START","MESSAGE_LOADING_END","MESSAGE_LOADING_NOT","otherReducer","OTHER_LOADING_START","OTHER_LOADING_END","OTHER_LOADING_NOT","combineReducers","user","userReducer","system","message","other","createStore","rootReducer","applyMiddleware","reduxThunk","Login","saveToken","getsoket","WxLogin","appid","scope","redirect_uri","encodeURI","href","rws","ReconnectingWebSocket","addEventListener","send","getWechatCode","background","paddingTop","bordered","handleChange","forceRender","required","prefix","UserOutlined","Password","LockOutlined","loading","block","htmlType","ReactDOM","store","locale","zhCN","document","getElementById","delay","tip","appear","modalVisible","showSearch","filterOption","destroyOnClose","confirmLoading","afterClose","handleRules","getElement","nextProps","prevState","more","useState","setLoading","uploadButton","marginTop","listType","fileList","e","Array","isArray","file","response","code","msg","imgArr","newArr","dowloadHttpUrl","fileName","showUploadList","onRemove","v","filter","pageSize","minWidth","input","option","toLowerCase","indexOf","getCompanyHe","companyhe","Sex","ClientType","Income","ProjectLevel","DefaultStatus","MessageType","RangePicker","DatePicker","Search","Form","useForm","form","marginRight","marginBottom","getNode","setFieldsValue","pending","instance","axios","CancelToken","create","timeout","responseType","interceptors","request","use","error","Promise","reject","cancel","splice","removePending","errorCode","undefined","pageInfo","hasIn","total","handleArr","save","load","notification","resolve","toUpperCase","post","qs","createInstance","catch","err"],"mappings":"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","file":"admin/js/main.15a55c0c.chunk.js","sourcesContent":["export const APP_LOADING_START = 'APP_LOADING_START'\r\nexport const APP_LOADING_END = 'APP_LOADING_END'\r\nexport const APP_LOADING_NOT = 'APP_LOADING_NOT'","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","export default [\r\n  {\r\n    name: \"工作台\", \r\n    key: \"1\",\r\n    path: \"/\"\r\n  },\r\n  {\r\n    name: \"用户管理\",\r\n    key: \"2\",\r\n    path: \"/users\"\r\n  },\r\n  {\r\n    name: \"系统管理\",\r\n    key: \"7\",\r\n    path: \"/system\"\r\n  },\r\n  {\r\n    name: \"公司项目管理\",\r\n    key: \"3\",\r\n    path: \"/company\"\r\n  },\r\n  {\r\n    name: \"系统资源管理\",\r\n    key: \"4\",\r\n    path: \"/resource\"\r\n  },\r\n  {\r\n    name: \"定时任务\",\r\n    key: \"5\",\r\n    children: [\r\n      {\r\n        name: \"任务配置\",\r\n        key: \"5-01\",\r\n        path: \"/timetask/conf\"\r\n      },\r\n      {\r\n        name: \"执行日志\",\r\n        key: \"5-02\",\r\n        path: \"/company\"\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    name: \"短信管理\",\r\n    key: \"6\",\r\n    path: \"/company\",\r\n    children: [\r\n      {\r\n        name: \"短信包订单\",\r\n        key: \"6-01\",\r\n        path: \"/message/order\"\r\n      },\r\n      {\r\n        name: \"短信包配置\",\r\n        key: \"6-02\",\r\n        path: \"/message/conf\"\r\n      },\r\n      {\r\n        name: \"短信包签名\",\r\n        key: \"6-03\",\r\n        path: \"/message/sign\"\r\n      },\r\n      {\r\n        name: \"短信模板\",\r\n        key: \"6-04\",\r\n        path: \"/message/template\"\r\n      },\r\n    ]\r\n  },\r\n]","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {Layout, Button, Menu} from \"antd\"\r\nimport {PieChartOutlined,TeamOutlined} from \"@ant-design/icons\"\r\nimport menu from \"./menu\"\r\n\r\nconst {SubMenu} = Menu\r\n\r\nconst SideBar:React.FC = ()=>{\r\n\r\n  return (\r\n    <Menu theme=\"dark\"  mode=\"inline\">\r\n      {menu.map(item=>{\r\n        if(!item.children){\r\n          return (\r\n            <Menu.Item key={item.key} icon={<PieChartOutlined />}>\r\n              <Link to={item.path}>{item.name}</Link>\r\n            </Menu.Item>\r\n          )\r\n        }\r\n        else{\r\n          return (\r\n            <SubMenu key={item.key} icon={<TeamOutlined />} title={item.name}>\r\n              {item.children.map(elem=>{\r\n                return <Menu.Item key={elem.key} >\r\n                        <Link to={elem.path}>{elem.name}</Link>\r\n                      </Menu.Item>\r\n              })}\r\n            </SubMenu> \r\n          )\r\n        }\r\n      })}\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default SideBar;","import React from \"react\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport { Line } from '@ant-design/charts';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst data = [\r\n  { year: '1991', value: 3 },\r\n  { year: '1992', value: 4 },\r\n  { year: '1993', value: 3.5 },\r\n  { year: '1994', value: 5 },\r\n  { year: '1995', value: 4.9 },\r\n  { year: '1996', value: 6 },\r\n  { year: '1997', value: 7 },\r\n  { year: '1998', value: 9 },\r\n  { year: '1999', value: 13 },\r\n];\r\n\r\nconst config = {\r\n  data,\r\n  xField: 'year',\r\n  yField: 'value',\r\n  point: {\r\n    size: 5,\r\n    shape: 'diamond',\r\n  },\r\n  label: {\r\n    style: {\r\n      fill: '#aaa',\r\n    },\r\n  },\r\n};\r\nclass HomePage extends React.Component {\r\n  componentDidMount(){\r\n    console.log(this.props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <JCard spinning={false} >\r\n        <div key=\"a\">\r\n          <Line {...config} />\r\n        </div>\r\n        <div key=\"b\">Queue 111Demo</div>\r\n        <div key=\"c\">Queue Demo</div>\r\n        <div key=\"d\">Queue Demo</div>\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {\r\n  console.log(state)\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePage)","export const COMPANY_LOADING_START = 'COMPANY_LOADING_START'\r\nexport const COMPANY_LOADING_END = 'COMPANY_LOADING_END'\r\nexport const COMPANY_LOADING_NOT = 'COMPANY_LOADING_NOT'","import {COMPANY_LOADING_START, COMPANY_LOADING_END, COMPANY_LOADING_NOT} from \"@admin/constant/company\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\nimport _ from \"lodash\"\r\n\r\n/**\r\n * list API公共方法\r\n * \r\n */\r\ninterface OptionListProps{\r\n  options: any;\r\n  dispatch:any;\r\n  keyName: string;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n\r\ninterface ParamsListProps{\r\n  params: any;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n// options:any,keyName:string, obj?:any, next?:(...arg0:any)=>void\r\nconst optionList = async (opt: OptionListProps)=>{\r\n    const {options,dispatch, keyName, obj, next, type, refresh} = opt;\r\n    try{\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n    if(!isCache || refresh){\r\n      dispatch({\r\n        type: COMPANY_LOADING_START\r\n      })\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      MC.put(key, data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n        [keyName]: data\r\n      })\r\n    }else{\r\n      if(obj && _.size(obj)){\r\n        let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n        if(type==\"edit\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }else if(type==\"add\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }\r\n\r\n        MC.put(key, isCache)\r\n        dispatch({\r\n          type: COMPANY_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: COMPANY_LOADING_END,\r\n          [keyName]: isCache\r\n        })\r\n      }\r\n      \r\n    }\r\n    \r\n  }catch(e){\r\n    console.log(e)\r\n    dispatch({type: COMPANY_LOADING_END})\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport const getCompanyRole = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-company/selectSystem\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"companyrole\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const editCompanyProject = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-item/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addCompanyProject = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-item/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanyProject = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-item/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"companyproject\", obj, next, refresh, type})\r\n  }\r\n}\r\n\r\n\r\nexport const editCompanyBase = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanyDetail = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/getById\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateCompanyStatus = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/updateStatus\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addCompany = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: COMPANY_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: COMPANY_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: COMPANY_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanys = (opt:ParamsListProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    \r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-company/page\",\r\n      method: \"get\",\r\n      data: {...params, companyAddress: params.companyAddress.join()}\r\n    }\r\n    optionList({options: options,dispatch,keyName: \"companys\", obj: obj, next:next, refresh:refresh, type:type})\r\n    \r\n    // try{\r\n    //   const options:any = {\r\n    //     url: \"/zlwj/api/system/sys/sys-company/page\",\r\n    //     method: \"get\",\r\n    //     data: params\r\n    //   }\r\n    //   let key = options.url+JSON.stringify(options.data)\r\n    //   let isCache = MC.get(key)\r\n      \r\n    //   if(!isCache){\r\n    //     dispatch({\r\n    //       type: COMPANY_LOADING_START\r\n    //     })\r\n    //     let data:any = await fetch(options)\r\n    //     MC.put(key, data)\r\n    //     dispatch({\r\n    //       type: COMPANY_LOADING_END,\r\n    //       companys: data\r\n    //     })\r\n    //   }else{\r\n    //     if(obj){\r\n    //       let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n    //       isCache.list[index] = _.assign(isCache.list[index], obj);\r\n    //       MC.put(key, isCache)\r\n    //       dispatch({\r\n    //         type: COMPANY_LOADING_NOT,\r\n    //         companys: isCache\r\n    //       })\r\n    //     }else{\r\n    //       dispatch({\r\n    //         type: COMPANY_LOADING_END,\r\n    //         companys: isCache\r\n    //       })\r\n    //     }\r\n        \r\n    //   }\r\n      \r\n    // }catch(e){\r\n    //   console.log(e)\r\n    //   dispatch({type: COMPANY_LOADING_END})\r\n    // }\r\n  }\r\n}\r\n","/**\r\n * onChange  地区框改变回调\r\n */\r\n\r\nimport React, {useEffect, useState} from \"react\"\r\nimport {Cascader} from \"antd\"\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {getRegions} from \"@admin/actions/appAction\"\r\n\r\n\r\n\r\ninterface Props {\r\n  actions: any;\r\n  region: any[];\r\n  onChange?: (value:any)=>void;\r\n  value?:any\r\n}\r\n\r\nconst RegionElement:React.FC<Props> = ({\r\n  actions,\r\n  region,\r\n  onChange,\r\n  value\r\n})=>{\r\n  \r\n  useEffect(() => {\r\n    actions.getRegions({})\r\n  }, [])\r\n\r\n  const triggerChange = (changedValue:any) => {\r\n    if (onChange) {\r\n      onChange(changedValue );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Cascader\r\n      defaultValue={value}\r\n      value={value} \r\n      onChange={triggerChange}\r\n      options={region} \r\n      fieldNames={{ label: 'name', value: 'code', children: 'child' }}\r\n      placeholder=\"请选择省/市/区\"/>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n    actions: bindActionCreators({getRegions}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {\r\n  return {\r\n    region: state.app.region\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionElement);","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {getCompanyDetail, editCompanyBase} from \"@admin/actions/companyAction\"\r\nimport { IProps } from \"@public/common/interface\";\r\nimport { Button, Card, Col, Form, Input, Row, Skeleton } from \"antd\"\r\nimport SelectCompany from \"@admin/components/Element/SelectCompany\"\r\nimport UploadElement from \"@admin/components/Element/UploadElement\";\r\nimport _ from \"lodash\"\r\nimport Region from \"@admin/components/Element/Region\"\r\nimport { FormInstance } from \"antd/lib/form\";\r\n\r\nconst {TextArea} = Input\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 19 },\r\n};\r\n\r\n\r\ninterface Props extends IProps {\r\n  companyDetail: any;\r\n}\r\n\r\n\r\n\r\nclass CompanyBaseInfo extends React.Component<Props> {\r\n\r\n  formRef = React.createRef<FormInstance>()\r\n\r\n  state = {\r\n    formList: [\r\n      {label: \"公司logo\", name: \"logo\", type: <UploadElement />},\r\n      {label: \"公司名称\",name: \"name\", type: <Input/>},\r\n      {label: \"公司简称\",name: \"nickname\", type: <Input/>},\r\n      {label: \"上级公司\",name: \"parentId\", type: <SelectCompany/>},\r\n      {label: \"省/市/区\",name: \"companyAddress\", type: <Region/>},\r\n      {label: \"公司地址\",name: \"addressDetail\", type: <TextArea/>},\r\n      {label: \"经度\",name: \"longitude\", type: <Input/>},\r\n      {label: \"纬度\",name: \"latitude\", type: <Input/>},\r\n    ],\r\n    companyDetail: {\r\n      logo: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getCompanyDetail({id: this.props.match.params.id}, (res:any)=>{\r\n      res.companyAddress = res.companyAddress?res.companyAddress.split(\",\"):[]\r\n      this.setState({companyDetail: res})\r\n    })\r\n  }\r\n\r\n  onFinishBase(values:any){\r\n    \r\n    const {companyAddress, logo} = values;\r\n    this.props.actions.editCompanyBase({\r\n      ...values,\r\n      id: this.props.match.params.id,\r\n      logo: this.props.utils.submitFiles(logo),\r\n      companyAddress: companyAddress?companyAddress.join():\"\"\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {companyDetail} = this.state;\r\n    \r\n    return (\r\n      \r\n        <Row>\r\n          <Col span={8}>\r\n            <Card size=\"small\" extra={<Button ghost type=\"primary\" onClick={()=>this.formRef.current?.submit()}>保存</Button>}>\r\n              {_.size(companyDetail)>2?\r\n              <Form {...layout} ref={this.formRef}\r\n                onFinish={this.onFinishBase.bind(this)}\r\n                initialValues={{...companyDetail, logo: [{url: companyDetail.logo, uid: -1, name: \"a\"}]}}>\r\n                {this.state.formList.map((item, index)=>(\r\n                  <Form.Item key={index} label={item.label} name={item.name} >\r\n                    {item.type}\r\n                  </Form.Item>\r\n                ))}\r\n              </Form>:<Skeleton active />}\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}></Col>\r\n          <Col span={8}></Col>\r\n        </Row>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyDetail, editCompanyBase}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyBaseInfo)","import {Status} from \"@public/common/mapper\"\r\n\r\n\r\nexport const companyProjectColumns = [\r\n  {\r\n    title: \"项目编号\",\r\n    dataIndex: \"key\"\r\n  },\r\n  {\r\n    title: \"项目名称\",\r\n    dataIndex: \"name\"\r\n  },\r\n  {\r\n    title: \"简称\",\r\n    dataIndex: \"nickname\"\r\n  },\r\n  {\r\n    title: \"项目联系信息\",\r\n    dataIndex: \"parentName\"\r\n  },\r\n  {\r\n    title: \"楼栋统计\",\r\n    dataIndex: \"addressDetail\"\r\n  },\r\n  {\r\n    title: \"资产合计\",\r\n    dataIndex: \"zIndex\"\r\n  },\r\n  {\r\n    title: \"系统分库\",\r\n    dataIndex: \"itemCount\"\r\n  },\r\n  {\r\n    title: \"关联员工\",\r\n    dataIndex: \"systemCount\"\r\n  },\r\n  {\r\n    title: \"状态\",\r\n    dataIndex: \"status\",\r\n    render:(item:number)=>Status[item]\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n]\r\nexport const companyColumns = [\r\n  {\r\n    title: \"公司logo\",\r\n    dataIndex: \"key\"\r\n  },\r\n  {\r\n    title: \"公司名称\",\r\n    dataIndex: \"name\"\r\n  },\r\n  {\r\n    title: \"简称\",\r\n    dataIndex: \"nickname\"\r\n  },\r\n  {\r\n    title: \"上级公司\",\r\n    dataIndex: \"parentName\"\r\n  },\r\n  {\r\n    title: \"公司联系信息\",\r\n    dataIndex: \"addressDetail\"\r\n  },\r\n  {\r\n    title: \"系统分库\",\r\n    dataIndex: \"zIndex\"\r\n  },\r\n  {\r\n    title: \"下属项目\",\r\n    dataIndex: \"itemCount\"\r\n  },\r\n  {\r\n    title: \"系统权限\",\r\n    dataIndex: \"systemCount\"\r\n  },\r\n  {\r\n    title: \"短信\",\r\n    dataIndex: \"smsCount\"\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n]","\r\nimport React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { Button, Card, Input, InputNumber, Table } from \"antd\";\r\nimport {companyProjectColumns} from \"../columns\"\r\nimport {getCompanyProject, addCompanyProject, editCompanyProject} from \"@admin/actions/companyAction\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport { IProps } from \"@public/common/interface\";\r\nimport AddPage from \"@admin/components/Page/AddPage\"\r\nimport Region from \"@admin/components/Element/Region\"\r\nimport _ from \"lodash\";\r\n\r\nconst {TextArea} = Input\r\n\r\ninterface Props extends IProps {\r\n  companyproject: any;\r\n  appSpinning: boolean;\r\n}\r\n\r\n\r\nclass CompanyProject extends React.Component<Props> {\r\n\r\n  state = {\r\n    addVisible: false,\r\n    editVisible: false,\r\n    detail: {\r\n      id: \"\",\r\n      itemAddress: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getCompanyProject({params: {companyId: this.props.match.params.id}})\r\n  }\r\n\r\n  addOk(values:any){\r\n    this.props.actions.addCompanyProject({\r\n      ...values,\r\n      companyId: this.props.match.params.id,\r\n      itemAddress: values.itemAddress.join()\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getCompanyProject({\r\n        params: {companyId: this.props.match.params.id},\r\n        refresh: true\r\n      })\r\n      this.setState({addVisible: false})\r\n    })\r\n  }\r\n\r\n  editOk(values:any){\r\n    console.log(values)\r\n    this.props.actions.editCompanyProject({\r\n      ...values,\r\n      id: this.state.detail.id,\r\n      companyId: this.props.match.params.id,\r\n      itemAddress: values.itemAddress.join()\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getCompanyProject({\r\n        params: {companyId: this.props.match.params.id},\r\n        refresh: true\r\n      })\r\n      this.setState({editVisible: false})\r\n    })\r\n  }\r\n\r\n  getCol(){\r\n    let _this = this;\r\n    return [...companyProjectColumns, {\r\n      title: \"操作\",\r\n      render(item:any) {\r\n        return <Button type=\"link\" size=\"small\" onClick={()=>_this.setState({editVisible: true, detail: item})}>编辑</Button>\r\n      }\r\n    }]\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils, companyproject, appSpinning, match} = this.props\r\n    const {addVisible, detail, editVisible} = this.state;\r\n    console.log(detail)\r\n    return (\r\n      <>\r\n        <AddPage\r\n          title=\"新增公司项目\"\r\n          spinning={appSpinning}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={this.addOk.bind(this)}\r\n          data={[\r\n            {label: \"项目名称\", name: \"name\", type: Input},\r\n            {label: \"项目简称\t\", name: \"nickname\", type: Input},\r\n            {label: \"项目编号\t\", name: \"code\", type: Input},\r\n            {label: \"省/市/区\", name: \"itemAddress\", type: <Region/>, initialValue: []},\r\n            {label: \"具体地址\", name: \"addressDetail\", type: TextArea},\r\n            {label: \"经度\", name: \"longitude\", type: InputNumber},\r\n            {label: \"纬度\", name: \"latitude\", type: InputNumber},\r\n          ]}\r\n        />\r\n        <AddPage\r\n          title=\"编辑公司项目\"\r\n          spinning={appSpinning}\r\n          visible={editVisible}\r\n          onCancel={()=>this.setState({editVisible: false})}\r\n          onOk={this.editOk.bind(this)}\r\n          initialValues={_.size(detail)>1?\r\n            {...detail, itemAddress: detail.itemAddress?detail.itemAddress.split(\",\"):[]}:null}\r\n          data={[\r\n            {label: \"项目名称\", name: \"name\", type: Input},\r\n            {label: \"项目简称\t\", name: \"nickname\", type: Input},\r\n            {label: \"项目编号\t\", name: \"code\", type: Input},\r\n            {label: \"省/市/区\", name: \"itemAddress\", type: <Region/>},\r\n            {label: \"具体地址\", name: \"addressDetail\", type: TextArea},\r\n            {label: \"经度\", name: \"longitude\", type: InputNumber},\r\n            {label: \"纬度\", name: \"latitude\", type: InputNumber},\r\n          ]}\r\n        />\r\n        <Card size=\"small\" title={<Button ghost type=\"primary\" onClick={()=>this.setState({addVisible: true})} >新增项目</Button>} >\r\n          <Table size=\"small\" columns={this.getCol()} \r\n            dataSource={companyproject?utils.addIndex(companyproject.list):[]} \r\n            pagination={utils.Pagination(companyproject, (page)=>{\r\n              this.props.actions.getCompanyProject({params: {\r\n                companyId: match.params.id,\r\n                current: page,\r\n              }, refresh: true})\r\n            })} />\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyProject, addCompanyProject, editCompanyProject}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    appSpinning: state.app.spinning,\r\n    companyproject: state.company.companyproject,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyProject)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\nclass CompanyMessage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        CompanyMessage\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps)(CompanyMessage)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {getCompanyRole} from \"@admin/actions/companyAction\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport { Card, Col, Row, Space, Tree, Skeleton} from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { DeleteOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\n\r\ninterface Props extends IProps{\r\n  companyrole:any;\r\n}\r\n\r\nclass CompanyRole extends React.Component<Props> {\r\n\r\n  componentDidMount(){\r\n    let params = {companyId: this.props.match.params.id}\r\n    this.props.actions.getCompanyRole({params})\r\n  }\r\n\r\n  handleData(arr:any[]){\r\n    let newArr:any[]=[]\r\n    if(!arr){\r\n      return newArr\r\n    }\r\n\r\n    function recursion(arr:any[]){\r\n      _.each(arr, (item,index)=>{\r\n        item.key = item.id\r\n        item.title = item.name\r\n        item.children = item.userAuthVoList\r\n        if(item.type===\"item\"){\r\n          item.selectable=false\r\n        }\r\n        if(item.userAuthVoList && item.userAuthVoList.length){\r\n          item.selectable=false\r\n          recursion(item.userAuthVoList)\r\n        }\r\n      })\r\n    }\r\n    recursion(arr)\r\n    return arr;\r\n  }\r\n\r\n  titleRender({title, type}:any){\r\n    return (\r\n      <div className=\"flexbetween\">\r\n        <span>{title}</span>\r\n        <Space size={20}>\r\n          {type==\"system\"?<PlusOutlined  />:null}\r\n          <DeleteOutlined />\r\n        </Space>\r\n      </div>\r\n    )\r\n    \r\n  }\r\n\r\n  handleSelect(){\r\n    \r\n  }\r\n\r\n  render() {\r\n    const {companyrole} = this.props\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={8}>\r\n          <Card size=\"small\">\r\n          {companyrole?<Tree \r\n            blockNode\r\n            defaultExpandAll\r\n            titleRender={this.titleRender }\r\n            treeData={this.handleData(companyrole)} \r\n            onSelect={this.handleSelect.bind(this)}\r\n            />: <Skeleton active />}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyRole}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    appSpinning: state.app.spinning,\r\n    companyrole: state.company.companyrole,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyRole)","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {Switch, Route, Redirect, Link} from \"react-router-dom\"\r\nimport {IProps} from \"@public/common/interface\"\r\nimport {Tabs, Card, Button} from \"antd\"\r\nimport JCard from \"@admin/components/JCard\";\r\nimport CompanyBaseInfo from \"./baseinfo\"\r\nimport CompanyProject from \"./companyproject\"\r\nimport CompanyMessage from \"./companymessage\"\r\nimport CompanyRole from \"./companyrole\"\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass CompanyDetailPage extends React.Component<IProps> {\r\n  state = {\r\n    tabs: [\r\n      {title: \"基础信息\", key: \"base\"},\r\n      {title: \"项目列表\", key: \"project\"},\r\n      {title: \"短信\", key: \"message\"},\r\n      {title: \"角色管理\", key: \"role\"},\r\n    ]\r\n  }\r\n  render() {\r\n    const {spinning, history, match} = this.props\r\n    \r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <div key=\"a\">\r\n          <Tabs type=\"card\" onChange={(val)=>{\r\n              history.push(`/company/${match.params.id}/detail/${val}`)\r\n            }}\r\n            tabBarExtraContent={<Link to=\"/company\"><Button>返回</Button></Link>}\r\n          >\r\n            {this.state.tabs.map(item=>(\r\n              <TabPane tab={item.title} key={item.key} />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n        <div key=\"b\">\r\n          <Switch>\r\n            <Route  path={\"/company/:id/detail/base\"} component={CompanyBaseInfo} />\r\n            <Route  path={\"/company/:id/detail/project\"} component={CompanyProject} />\r\n            <Route  path={\"/company/:id/detail/message\"} component={CompanyMessage} />\r\n            <Route  path={\"/company/:id/detail/role\"} component={CompanyRole} />\r\n            <Redirect from=\"/company/:id/detail\" to=\"/company/:id/detail/base\" />\r\n          </Switch>\r\n        </div>\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    spinning: state.company.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps)(CompanyDetailPage)","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {getCompanys, addCompany, updateCompanyStatus} from \"@admin/actions/companyAction\"\r\nimport {IProps, IState} from \"@public/common/interface\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport Seach from \"@admin/components/Submit/Search\"\r\nimport { Button, Input, Form, Select, Table, InputNumber} from \"antd\";\r\nimport RegionElement from \"@admin/components/Element/Region\"\r\nimport {companyColumns} from \"./columns\"\r\nimport AddPage from \"@admin/components/Page/AddPage\"\r\nimport SelectCompany from \"@admin/components/Element/SelectCompany\"\r\nimport UploadElement from \"@admin/components/Element/UploadElement\"\r\nimport _ from \"lodash\";\r\n\r\nconst {Option} = Select\r\nconst { TextArea } = Input;\r\n\r\n\r\nlet params:any = {\r\n  current: 1,\r\n  name: \"\",\r\n  companyAddress: [],\r\n  status: \"\"\r\n}\r\n\r\nlet restParams:any = {\r\n  current: 1,\r\n  name: \"\",\r\n  companyAddress: [],\r\n  status: \"\"\r\n}\r\n\r\ninterface Props extends IProps {\r\n  companys: any\r\n}\r\ninterface State {\r\n  addVisible:boolean\r\n}\r\n\r\nclass CompanyPage extends React.Component<Props, State> {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {\r\n      addVisible: false\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.props.actions.getCompanys({params})\r\n  }\r\n \r\n\r\n  handleSearch(values:any){\r\n    params = Object.assign(params, values)\r\n    if(!values){\r\n      console.log(restParams)\r\n      this.props.actions.getCompanys({params:restParams, refresh:true})\r\n      params= restParams\r\n      return\r\n    }\r\n    this.props.actions.getCompanys({params, refresh:true})\r\n  }\r\n\r\n  changeStatus(item:any){\r\n    this.props.actions.updateCompanyStatus({id: item.id}, (res:any)=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getCompanys({params, obj: res, type: \"edit\", refresh: true})\r\n    })\r\n  }\r\n\r\n  getCol(){\r\n    let _this = this;\r\n    return [...companyColumns, {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render(item:number, rows:any){\r\n        return (\r\n          <Select size=\"small\" value={item}\r\n              onChange={_this.changeStatus.bind(_this, rows)}\r\n            >\r\n            <Option value={1}>有效</Option>\r\n            <Option value={0}>无效</Option>\r\n          </Select>\r\n        )\r\n      }\r\n    },{\r\n      title: \"操作\",\r\n      render(item:any){\r\n        return (\r\n          <Link to={`/company/${item.id}/detail`}>\r\n            <Button type=\"link\" size=\"small\" >公司详情</Button>\r\n          </Link>\r\n        )\r\n      }\r\n    }]\r\n  }\r\n\r\n  submitAdd(values:any){\r\n    this.props.actions.addCompany({\r\n      ...values,\r\n      logo: this.props.utils.submitFiles(values.logo),\r\n      companyAddress: values.companyAddress.join()\r\n    }, (res:any)=>{\r\n      this.props.actions.getCompanys({params, refresh: true})\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({addVisible: false})\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {spinning,utils, companys} = this.props\r\n    const {addVisible} = this.state\r\n    const uploadData = {\r\n      resourceType: \"0\",\r\n      fileType: \"photo\",\r\n      linkType: \"logo\",\r\n      fileSize: 10240,\r\n      isFlag: 0\r\n    }\r\n    \r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <AddPage \r\n          spinning={spinning}\r\n          title=\"新增公司\"\r\n          data={[\r\n            {label: \"公司Logo\", name: \"logo\", type: <UploadElement data={uploadData}  />, },\r\n            {label: \"公司名称\", name: \"name\", type: Input, rules: true},\r\n            {label: \"公司简称\", name: \"nickname\", type: Input, rules: true},\r\n            {label: \"上级公司\", name: \"parentId\", type: <SelectCompany/>},\r\n            {label: \"省/市/区\", name: \"companyAddress\", type: <RegionElement />, rules: true},\r\n            {label: \"公司地址\", name: \"addressDetail\", type: TextArea, rules: true},\r\n            {label: \"经度\", name: \"longitude\", type: InputNumber},\r\n            {label: \"纬度\", name: \"latitude\", type: InputNumber},\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n          visible={addVisible} \r\n          onCancel={()=>this.setState({addVisible: false})} \r\n          onOk={this.submitAdd.bind(this)}/>\r\n        <div key=\"a\">\r\n          <Seach\r\n            before={<Button type=\"primary\" onClick={()=>this.setState({addVisible: true})}>新增</Button>}\r\n            initialValues={params}\r\n            resetValues={restParams}\r\n            data={[\r\n              {label: \"公司名称\", name: \"name\", type: Input},\r\n              {label: \"省/市/区\", name: \"companyAddress\", type: <RegionElement />,},\r\n              {label:\"状态\", name: \"status\", type: Select, selectList: [\r\n                {label: \"全部\", id: \"\"},\r\n                {label: \"有效\", id: 1},\r\n                {label: \"无效\", id: 0},\r\n              ]}\r\n            ]}\r\n            handleSearch={this.handleSearch.bind(this)}\r\n          />\r\n        </div>\r\n        <div key=\"b\">\r\n          <Table size=\"small\" columns={this.getCol()} dataSource={companys?utils.addIndex(companys.list, true):[]} \r\n          pagination={utils.Pagination(companys, (page)=>{\r\n            params.current = page;\r\n            this.props.actions.getCompanys(params)\r\n          })}/>\r\n        </div>\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n    actions: bindActionCreators({ getCompanys, addCompany, updateCompanyStatus}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:IState) => {\r\n  return {\r\n    companys: state.company.companys,\r\n    spinning: state.company.spinning,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyPage)","import React from \"react\"\r\nimport loadable from \"@loadable/component\";\r\nimport _ from \"lodash\"\r\nimport Home from \"@admin/views/home\"\r\nimport CompanyDetailPage from \"@admin/views/company/detial\"\r\nimport CompanyPage from \"@admin/views/company\"\r\n\r\n\r\nconst lazy = (props: {loader: any})=>{\r\n  const {loader} = props\r\n  return loadable( function(){\r\n    return loader\r\n  } , {\r\n    cacheKey: function(){\r\n      return \"key\"\r\n    },\r\n    fallback: <div>正在加载。。。</div>\r\n  })\r\n}\r\n\r\n\r\n\r\nconst routes = [\r\n  {\r\n    id: \"1\",\r\n    name: \"工作台\",\r\n    path: \"/\",\r\n    exact: true,\r\n    component: Home\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"用户管理\",\r\n    path: \"/users\",\r\n    exact: true,\r\n    component: lazy({loader: import(\"@admin/views/users\")}),\r\n    children: [\r\n      {\r\n        id: \"2-01\",\r\n        name: \"用户详情\",\r\n        path: \"/users/:id/detail/:temId\",\r\n        exact: false,\r\n        component: lazy({loader: import(\"@admin/views/users/detail\")}),\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: \"7\",\r\n    name: \"系统管理\",\r\n    path: \"/system\",\r\n    exact: true,\r\n    component: lazy({loader: import(\"@admin/views/system\")}),\r\n    children: [\r\n      {\r\n        id: \"7-01\",\r\n        name: \"公司详情\",\r\n        path: \"/company/:id/permisser\",\r\n        exact: true,\r\n        component: lazy({loader: import(\"@admin/views/system/permisser\")}),\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"公司管理\",\r\n    path: \"/company\",\r\n    exact: true,\r\n    component: CompanyPage,\r\n    children: [\r\n      {\r\n        id: \"3-01\",\r\n        name: \"公司详情\",\r\n        path: \"/company/:id/detail\",\r\n        exact: false,\r\n        component: CompanyDetailPage,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"资源管理\",\r\n    path: \"/resource\",\r\n    exact: true,\r\n    component: lazy({loader: import(\"@admin/views/resource\")})\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"定时任务\",\r\n    exact: true,\r\n    children: [\r\n      {\r\n        name: \"任务配置\",\r\n        path: \"/timetask/conf\",\r\n        component: lazy({loader: import(\"@admin/views/timetask/conf\")}),\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    id: \"6\",\r\n    name: \"短信管理\",\r\n    exact: true,\r\n    children: [\r\n      {\r\n        id: \"6-01\",\r\n        name: \"短信订单\",\r\n        path: \"/message/order\",\r\n        component: lazy({loader: import(\"@admin/views/message/order\")}),\r\n      },\r\n      {\r\n        id: \"6-02\",\r\n        name: \"短信配置\",\r\n        path: \"/message/conf\",\r\n        component: lazy({loader: import(\"@admin/views/message/conf\")}),\r\n      },\r\n      {\r\n        id: \"6-03\",\r\n        name: \"短信签名\",\r\n        path: \"/message/sign\",\r\n        component: lazy({loader: import(\"@admin/views/message/sign\")}),\r\n      },\r\n      {\r\n        id: \"6-04\",\r\n        name: \"短信模板\",\r\n        path: \"/message/template\",\r\n        component: lazy({loader: import(\"@admin/views/message/template\")}),\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nlet routeData:any[] = [];\r\n\r\n\r\n\r\nconst handleRoute = (arr: any[], obj:any=null)=>{\r\n  _.each(arr, async (item, index)=>{\r\n    if(item.component){\r\n      routeData.push(item)\r\n    }\r\n    if(item.children && item.children.length>0){\r\n      handleRoute(item.children, item)\r\n    }\r\n  })\r\n}\r\n\r\nhandleRoute(routes);\r\nexport default routeData;\r\n\r\n","import React from \"react\"\r\nimport {Image} from \"antd\"\r\n\r\nconst ErrorPage = ()=>{\r\n\r\n  \r\n  return (\r\n    <div style={{margin: \"auto\", width: 500}}>\r\n      <Image src=\"/images/error404.svg\" width={500} preview={false} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ErrorPage;","import React, {Suspense } from \"react\"\r\nimport {Switch, Route} from \"react-router-dom\"\r\nimport routeData from \"./routeData\"\r\nimport ErrorPage from \"@public/pages/error\"\r\nimport _ from \"lodash\"\r\n\r\ninterface RouteConf {\r\n  path: string;\r\n  componet?: any;\r\n  exact?: boolean;\r\n  key?: string\r\n}\r\n\r\nimport CompanyDetailPage from \"@admin/views/company/detial\"\r\n\r\nclass Routers extends React.Component {\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        {routeData.map((item:any, index:number)=>(\r\n          <Route \r\n            key={index} \r\n            exact={item.exact} \r\n            path={item.path} \r\n            component={item.component} />\r\n        ))}\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routers","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {Layout} from \"antd\"\r\nimport SideBar from \"@admin/components/SideBar\"\r\nimport \"./index.less\"\r\nimport Routers from \"@admin/routers\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"myApp\">\r\n        <Layout>\r\n          <Sider>\r\n            <div className=\"logo\"  />\r\n            <SideBar/>\r\n          </Sider>\r\n          <Layout className=\"content\">\r\n            <Header/>\r\n            <Content className=\"content_inner\" >\r\n              <Routers/>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state:any) => {\r\n  console.log(state)\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)","import React from \"react\"\r\nimport Routers from \"@admin/routers\"\r\nimport {withRouter} from \"react-router-dom\"\r\nimport App from \"@admin/views/app\"\r\n\r\n\r\nclass Index extends React.Component<any> {\r\n  constructor(props:any){\r\n    super(props);\r\n    (window as any)._navigation = props.history;\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <App/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Index)","import {APP_LOADING_START, APP_LOADING_END, APP_LOADING_NOT} from \"@admin/constant/app\"\r\nimport {getToken, OpenNotification, addIndex, Pagination, submitFiles, echoFiles} from \"@public/utils\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  token: getToken(),\r\n  utils: {\r\n    OpenNotification,\r\n    addIndex,\r\n    Pagination,\r\n    getToken,\r\n    submitFiles,\r\n    echoFiles\r\n  }\r\n}\r\n\r\nconst appReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case APP_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case APP_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case APP_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default appReducer;","import {COMPANY_LOADING_START, COMPANY_LOADING_END, COMPANY_LOADING_NOT} from \"@admin/constant/company\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst companyReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case COMPANY_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case COMPANY_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case COMPANY_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default companyReducer;","import {USER_LOADING_START, USER_LOADING_END, USER_LOADING_NOT} from \"@admin/constant/user\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst companyReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case USER_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case USER_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case USER_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default companyReducer;","import {SYSTEM_LOADING_START, SYSTEM_LOADING_END, SYSTEM_LOADING_NOT} from \"@admin/constant/system\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst systemReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case SYSTEM_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case SYSTEM_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case SYSTEM_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default systemReducer;","import {MESSAGE_LOADING_START, MESSAGE_LOADING_END, MESSAGE_LOADING_NOT} from \"@admin/constant/message\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst messageReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case MESSAGE_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case MESSAGE_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case MESSAGE_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default messageReducer;","import {OTHER_LOADING_START, OTHER_LOADING_END, OTHER_LOADING_NOT} from \"@admin/constant/other\"\r\n\r\nlet initialState = {\r\n  spinning: false,\r\n  \r\n}\r\n\r\nconst otherReducer = (state=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case OTHER_LOADING_START:\r\n      return Object.assign({}, state, action, {spinning: true})\r\n    case OTHER_LOADING_END:\r\n      return Object.assign({}, state, action, {spinning: false})\r\n    case OTHER_LOADING_NOT:\r\n      return Object.assign({}, state, action)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default otherReducer;","import {combineReducers} from \"redux\"\r\nimport appReducer from \"./appReducer\"\r\nimport companyReducer from \"./companyReducer\"\r\nimport userReducer from \"./userReducer\"\r\nimport systemReducer from \"./systemReducer\"\r\nimport messageReducer from \"./messageReducer\"\r\nimport otherReducer from \"./otherReducer\"\r\n\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  app: appReducer,\r\n  company: companyReducer,\r\n  user: userReducer,\r\n  system:systemReducer,\r\n  message: messageReducer,\r\n  other: otherReducer\r\n})","import {createStore, applyMiddleware} from \"redux\"\r\nimport reduxThunk from \"redux-thunk\"\r\nimport rootReducer from \"@admin/reducers\"\r\n\r\n\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(reduxThunk)\r\n)","import React from 'react';\r\nimport \"./index.less\"\r\nimport { Button, Card, Form, Input, Image, Tabs, notification} from 'antd';\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport ReconnectingWebSocket from 'reconnecting-websocket';\r\nimport {fetch, saveToken} from \"@public/utils\"\r\n\r\n\r\nconst {TabPane} = Tabs\r\n\r\ninterface IProps {\r\n  history: any\r\n}\r\n\r\nclass Login extends React.Component<IProps> {\r\n\r\n  state = {\r\n    spinning: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getsoket();\r\n  }\r\n\r\n  getWechatCode(){\r\n    var obj = new (window as any).WxLogin\r\n    ({\r\n      id:\"login_container\",//div的id\r\n      appid: \"wxb919df64cf99687a\",\r\n      scope: \"snsapi_login\",//写死\r\n      redirect_uri:encodeURI(\"http://zlwj.jiajgou.com/wx/callback\") ,\r\n      state: \"\",\r\n      style: \"black\",//二维码黑白风格\r\n      href: \"\"\r\n  })\r\n   \r\n  }\r\n\r\n  getsoket(){\r\n    const rws = new ReconnectingWebSocket('ws://192.168.1.34:4960');\r\n    rws.addEventListener('open', () => {\r\n      rws.send('hello!');\r\n    });\r\n    rws.addEventListener(\"message\", (value)=>{\r\n      console.log(value.data, \"asas\")\r\n    })\r\n  }\r\n\r\n  handleChange(key:string){\r\n    if(key==\"2\"){\r\n      this.getWechatCode()\r\n    }\r\n  }\r\n\r\n  onFinish = async (values:any)=>{\r\n    this.setState({spinning: true})\r\n    try{\r\n      let data:any = await fetch({\r\n        url:\"/zlwj/api/system/user/login\",\r\n        method: \"post\",\r\n        data: values\r\n      })\r\n      saveToken(data.token)\r\n      await this.setState({spinning: false})\r\n      this.props.history.push(\"/\")\r\n    }catch(e){\r\n      console.log(e)\r\n      this.setState({spinning: false})\r\n    }\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n       <div className=\"loginpage\" style={{background: 'url(\"/images/log_bj.svg\")'}}>\r\n         \r\n         <div style={{paddingTop:100}}>\r\n         <div className=\"logo\">\r\n           <Image src=\"/images/logo.png\" preview={false} width={200} />\r\n         </div>\r\n          <Card className=\"loginBox\" bordered={false}>\r\n            <Tabs\r\n              onChange={this.handleChange.bind(this)}\r\n            >\r\n              <TabPane tab=\"账号登录\" key=\"1\" forceRender className=\"mgt15\" >\r\n                <Form onFinish={this.onFinish}>\r\n                  <Form.Item\r\n                    name=\"account\"\r\n                    rules={[{required: true, message: \"请输入用户名！\"}]}\r\n                  >\r\n                    <Input prefix={<UserOutlined />}  size=\"large\" placeholder=\"用户名/手机号\" />\r\n                  </Form.Item>\r\n                  <Form.Item \r\n                    name=\"password\"\r\n                    rules={[{required: true, message: \"请输入密码！\"}]}\r\n                  >\r\n                    <Input.Password prefix={<LockOutlined />}  size=\"large\" placeholder=\"密码\" />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button loading={this.state.spinning} size=\"large\" block type=\"primary\" htmlType=\"submit\" >登录</Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </TabPane>\r\n              <TabPane tab=\"扫码登录\" key=\"2\" forceRender className=\"mgt15\" >\r\n                <div id=\"login_container\"></div>\r\n              </TabPane>\r\n            </Tabs>\r\n            \r\n          </Card>\r\n         </div>\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Login;","import reportWebVitals from '../reportWebVitals';\r\nimport React from 'react'\r\nimport * as ReactDOM from \"react-dom\"\r\nimport {Provider } from \"react-redux\"\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\"\r\nimport \"./index.less\"\r\nimport {ConfigProvider } from \"antd\"\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport Index from \"./views/index\"\r\nimport store from \"./store\"\r\nimport Login from \"@public/pages/login\"\r\n\r\n\r\n//热更新\r\nif( (module as any).hot) { \r\n  (module as any).hot.accept()\r\n}\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter> \r\n        <ConfigProvider  locale={zhCN}>\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Index/>\r\n          </Switch>\r\n        </ConfigProvider>\r\n      </HashRouter>\r\n    </Provider>\r\n  // </React.StrictMode>\r\n  ,\r\n  document.getElementById(\"root\")\r\n)\r\nreportWebVitals();\r\n","import React from \"react\"\r\nimport {Spin} from \"antd\"\r\nimport QueueAnim from \"rc-queue-anim\"\r\n\r\ninterface Props {\r\n  spinning: boolean;\r\n}\r\n\r\nconst JCard:React.FC<Props> = ({\r\n  children,\r\n  spinning\r\n})=>{\r\n\r\n  return (\r\n    <Spin spinning={spinning} size=\"large\" delay={500} tip=\"正在加载...\" >\r\n      <QueueAnim delay={300} appear={true}>\r\n        {children}\r\n      </QueueAnim>\r\n    </Spin>\r\n  )\r\n}\r\n\r\nexport default JCard;","\r\n/**\r\n * visible required boolean\r\n * width 模态框宽\r\n * onOk required 点击模态框确定按钮回调\r\n * onCancel required 点击模态框取消按钮回调\r\n * initialValue 设置初始值\r\n * spinning 加载动画\r\n */\r\n\r\nimport React, { ReactNode } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport {Modal, Form, Input, Select, InputNumber} from \"antd\"\r\nimport { FormInstance } from \"antd/lib/form\";\r\n\r\nconst {TextArea} = Input;\r\nconst {Option} = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 19 },\r\n};\r\n\r\ninterface ItemProps {\r\n  label?:string;\r\n  name: string;\r\n  type: ReactNode,\r\n  selectList?: any[];\r\n  showSearch?:boolean;\r\n  filterOption?:(...arg0:any)=>any;\r\n  initialValue?:any;\r\n  rules?: boolean | any[];\r\n}\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  width?:number;\r\n  onOk: (...arg0:any)=>void;\r\n  onCancel:()=>void;\r\n  title?:any;\r\n  data:ItemProps[];\r\n  initialValues?:any;\r\n  spinning?:boolean;\r\n}\r\n\r\nclass AddPage extends React.Component<Props> {\r\n\r\n  formRef = React.createRef<FormInstance>()\r\n\r\n  state = {\r\n    modalVisible: false\r\n  }\r\n  static getDerivedStateFromProps(nextProps:any, prevState:any){\r\n    if(nextProps.visible){\r\n      prevState.modalVisible = true\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getElement(item:ItemProps){\r\n    if(item.type == Input){\r\n      return <Input/>\r\n    }else if(item.type == TextArea){\r\n      return <TextArea  />\r\n    }else if(item.type == InputNumber){\r\n      return <InputNumber style={{width: \"100%\"}} />\r\n    }\r\n    else if(item.type == Select){\r\n      return (\r\n        <Select\r\n          showSearch={item.showSearch || false}\r\n          filterOption={item.filterOption || false}\r\n        >\r\n          {item.selectList?.map(elem=>(\r\n            <Option key={elem.id} value={elem.id} >{elem.name}</Option>\r\n          ))}\r\n        </Select>\r\n      )\r\n    }else{\r\n      return item.type;\r\n    }\r\n  }\r\n\r\n  onFinish(values: any){\r\n    this.props.onOk(values)\r\n  }\r\n  \r\n  handleRules(item:ItemProps){\r\n    if(typeof item.rules === 'boolean'){\r\n      return [{required: true, message: `${item.label}不能为空！`}]\r\n    }else if(typeof item.rules === 'object'){\r\n      return item.rules;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  render() {\r\n    const {visible, width, onCancel, title, data, spinning, initialValues} = this.props\r\n    const {modalVisible} = this.state\r\n    \r\n\r\n    return (\r\n      !visible && !modalVisible?null:\r\n      <Modal\r\n        //强渲染\r\n        forceRender={true}\r\n        title={title || null}\r\n        visible={visible}\r\n        destroyOnClose\r\n        width={width || 520}\r\n        onOk={()=>this.formRef.current?.submit()}\r\n        onCancel={onCancel}\r\n        confirmLoading={spinning}\r\n        afterClose={()=>{\r\n          this.setState({modalVisible: false})\r\n        }}\r\n      >\r\n        <Form \r\n          {...layout}\r\n          ref={this.formRef} \r\n          onFinish={this.onFinish.bind(this)}\r\n          initialValues={initialValues}\r\n          >\r\n          {data.map((item, index)=>(\r\n            <Form.Item \r\n              key={index} \r\n              label={item.label} \r\n              name={item.name} \r\n              initialValue={item.initialValue}\r\n              rules={this.handleRules(item)}\r\n              >\r\n              {this.getElement(item)}\r\n            </Form.Item>\r\n          ))}\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(AddPage)","export const MESSAGE_LOADING_START = 'MESSAGE_LOADING_START'\r\nexport const MESSAGE_LOADING_END = 'MESSAGE_LOADING_END'\r\nexport const MESSAGE_LOADING_NOT = 'MESSAGE_LOADING_NOT'","/**\r\n * type: 判断是否为图片 img是， file文件\r\n * data: required 传给服务器参数 DataProps\r\n      *  const uploadData = {\r\n            resourceType: \"0\",\r\n            fileType: \"photo\",\r\n            linkType: \"logo\",\r\n            fileSize: 10240,\r\n            isFlag: 0\r\n          }\r\n  more 是否上传多个文件 default false\r\n  fileList value对象 {url, uid, name}\r\n */\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport {Upload, Button, Form} from \"antd\"\r\nimport { connect } from \"react-redux\"\r\nimport {PlusOutlined, UploadOutlined, LoadingOutlined} from \"@ant-design/icons\"\r\nimport {IState, UtilsProps} from \"@public/common/interface\"\r\nimport \"./index.less\"\r\nimport _ from \"lodash\"\r\n\r\ninterface DataProps {\r\n  companyCode?:any;\r\n  fileType?:any;\r\n  fileSize?:any;\r\n  heCode?:any;\r\n  resourceType:any;\r\n  linkType?:any;\r\n  userId?:any;\r\n  isFlag?:any;\r\n}\r\n\r\ninterface Props {\r\n  data?:DataProps;\r\n  utils: UtilsProps;\r\n  type?:string;\r\n  onChange?:any;\r\n  value?:any;\r\n  more?:boolean;\r\n}\r\n\r\n\r\n\r\nconst UploadElement:React.FC<Props> = ({\r\n  data={\r\n    resourceType: \"0\",\r\n    fileType: \"photo\",\r\n    linkType: \"logo\",\r\n    fileSize: 10240,\r\n    isFlag: 0\r\n  }, \r\n  utils, \r\n  type=\"image\",\r\n  onChange,\r\n  value,\r\n  more=false\r\n})=>{\r\n  const [loading, setLoading] = useState(false)\r\n  \r\n  const uploadButton = (\r\n    <div>\r\n      {loading?<LoadingOutlined/>:<PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>上传图片</div>\r\n    </div>\r\n  );\r\n\r\n  const handleData = (arr:any[])=>{\r\n    var newArr:any[] = [];\r\n    _.each(arr, (item,index)=>{\r\n      if(item.response && item.response.code == 1){\r\n        const {dowloadHttpUrl, fileName, id} = item.response.data\r\n        newArr.push({url: dowloadHttpUrl, name: fileName, uid: id })\r\n      }else{\r\n        newArr.push(item)\r\n      }\r\n    })\r\n    \r\n    return newArr;\r\n  }\r\n\r\n  const handleChange = (e:any)=>{\r\n    setLoading(true)\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    if(e.file.status == \"done\"){\r\n      const {code, msg} = e.file.response\r\n      if(code!=1){\r\n        utils.OpenNotification(\"error\", msg)\r\n        return;\r\n      }\r\n    }\r\n    if( onChange && e.file.status == \"done\"){\r\n      if(!more && e.fileList && e.fileList.length>1){\r\n        e.fileList = [e.fileList[e.fileList.length-1]]\r\n      }\r\n      let imgArr = handleData(e.fileList);\r\n      onChange(imgArr)\r\n      setLoading(false)\r\n      return imgArr\r\n    }\r\n  }\r\n  const handleRemove = (file:any)=>{\r\n    let v = _.filter(value, o=>o.url!=file.url)\r\n    onChange(v)\r\n  }\r\n\r\n  const UploadWrap = (\r\n    <Upload\r\n      action=\"/zlwj/api/resource/file/uploadFile\"\r\n      listType={type==\"image\"?\"picture-card\":\"text\"}\r\n      name=\"file\"\r\n      fileList={ value || [] }\r\n      onChange={handleChange}\r\n      showUploadList={true}\r\n      onRemove={handleRemove}\r\n      data={{\r\n        token: utils.getToken(),\r\n        ...data,\r\n      }}\r\n    >\r\n\r\n      {loading}\r\n      {type==\"image\"?uploadButton:<Button size=\"small\" icon={loading?<LoadingOutlined/>:<UploadOutlined />}>上传附件</Button>}\r\n    </Upload>\r\n  )\r\n\r\n  return UploadWrap;\r\n}\r\nconst mapStateToProps = (state:IState) => {\r\n  return {\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadElement)","\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { Select } from \"antd\"\r\nimport { connect } from \"react-redux\"\r\nimport {IState} from \"@public/common/interface\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {getCompanys} from \"@admin/actions/appAction\"\r\n\r\n\r\nconst {Option} = Select\r\n\r\ninterface Props {\r\n  actions:any;\r\n  companys: any;\r\n  onChange?:(arg1:any)=>void;\r\n  value?: any;\r\n}\r\n\r\nconst SelectCompamy:React.FC<Props> = ({actions, companys, onChange, value})=>{\r\n\r\n  useEffect(() => {\r\n    actions.getCompanys({pageSize: 1000})\r\n  }, [])\r\n\r\n  const hanleChange = (val:any)=>{\r\n    if(onChange){\r\n      onChange(val);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      style={{minWidth: 100}}\r\n      showSearch\r\n      filterOption={(input, option:any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n      value={value}\r\n      onChange={hanleChange}\r\n    >\r\n      <Option value=\"\">全部公司</Option>\r\n      {companys?companys.list.map((item:any)=>(\r\n        <Option key={item.id} value={item.id}>{item.name}</Option>\r\n      )):null}\r\n    </Select>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n    actions: bindActionCreators({getCompanys}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:IState) => {\r\n  return {\r\n    companys: state.app.companys\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCompamy)","import {APP_LOADING_START, APP_LOADING_END, APP_LOADING_NOT} from \"@admin/constant/app\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\n\r\n\r\nexport const getCompanys = (params:any, next?:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/page\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n      if(!isCache){\r\n        dispatch({\r\n          type: APP_LOADING_START\r\n        })\r\n        let data:any = await fetch(options)\r\n        MC.put(key, data) \r\n        dispatch({\r\n          type: APP_LOADING_END,\r\n          companys: data\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: APP_LOADING_NOT,\r\n          companys: isCache\r\n        })\r\n      }\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: APP_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCompanyHe = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-company/companyItemList\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n      if(!isCache){ \r\n        dispatch({\r\n          type: APP_LOADING_START\r\n        })\r\n        let data:any = await fetch(options)\r\n        MC.put(key, data)\r\n        dispatch({\r\n          type: APP_LOADING_END,\r\n          companyhe: data\r\n        })\r\n      }\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: APP_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRegions = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/area/cityArea\",\r\n        method: \"get\",\r\n        data: params\r\n      }\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n      if(!isCache){ \r\n        dispatch({\r\n          type: APP_LOADING_START\r\n        })\r\n        let data:any = await fetch(options)\r\n        MC.put(key, data)\r\n        dispatch({\r\n          type: APP_LOADING_END,\r\n          region: data\r\n        })\r\n      }\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: APP_LOADING_END})\r\n    }\r\n  }\r\n}\r\n","export const USER_LOADING_START = 'USER_LOADING_START'\r\nexport const USER_LOADING_END = 'USER_LOADING_END'\r\nexport const USER_LOADING_NOT = 'USER_LOADING_NOT'","export const SYSTEM_LOADING_START = 'SYSTEM_LOADING_START'\r\nexport const SYSTEM_LOADING_END = 'SYSTEM_LOADING_END'\r\nexport const SYSTEM_LOADING_NOT = 'SYSTEM_LOADING_NOT'","export const OTHER_LOADING_START = 'OTHER_LOADING_START'\r\nexport const OTHER_LOADING_END = 'OTHER_LOADING_END'\r\nexport const OTHER_LOADING_NOT = 'OTHER_LOADING_NOT'","export const Status = [\"禁用\", \"启用\"]\r\n\r\nexport const Sex = [\"暂无\", \"男\", \"女\", \"未知\"]\r\n\r\nexport const ClientType:any = {\"XCX\": \"小程序\", \"APP\": \"智联万家APP\", \"WEB\": \"物业系统\", \"CDZ\": \"充电桩\"}\r\n\r\nexport const Income:any = {\"ADD\": \"收入\", \"RED\": \"支出\"}\r\n\r\nexport const ProjectLevel:any = {\"XM\": \"项目级别\", \"GS\": \"公司级别\"}\r\n\r\nexport const DefaultStatus = [\"否\", \"是\"]\r\n\r\nexport const MessageType:any = {\"ALY\": \"阿里云\", \"FG\": \"飞鸽\"}","/**\r\n * before: ReactElement,可添加在最前边\r\n * data: require List类型，生成表单数据\r\n * handleSearch require Function  点击搜索\r\n * initialValues require any 初始化回显数据\r\n */\r\n\r\nimport React, { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport {Button, Form, Input, Select, Card, Row, Col, DatePicker} from \"antd\"\r\nimport {SearchOutlined, RetweetOutlined } from \"@ant-design/icons\"\r\nimport _ from \"lodash\"\r\n\r\nconst {Option} = Select\r\nconst {RangePicker} = DatePicker\r\n\r\ninterface ItemType {\r\n  label?: string,\r\n  name: string,\r\n  type: ReactNode,\r\n  selectList?: any[];\r\n  initialValue?:any;\r\n  \r\n}\r\n\r\ninterface Props {\r\n  before?: ReactNode;\r\n  data: ItemType[];\r\n  handleSearch: Function;\r\n  initialValues: any;\r\n  resetValues:any;\r\n}\r\n\r\n\r\nconst Search:React.FC<Props> = ({\r\n  before,\r\n  data,\r\n  handleSearch,\r\n  initialValues,\r\n  resetValues\r\n})=>{\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values:any) => {\r\n    handleSearch(values)\r\n  };\r\n\r\n  const handleReset = function(){\r\n    form.setFieldsValue(resetValues)\r\n    handleSearch()\r\n  }\r\n\r\n\r\n  const getNode = ( item:any )=>{\r\n\r\n    if(item.type == Input){\r\n      return <Input/>\r\n    }else if(item.type == Select){\r\n      return (\r\n        <Select>\r\n          {item.selectList.map((elem:any)=>(\r\n            <Option key={elem.id} value={elem.id}>{elem.label}</Option>\r\n          ))}\r\n        </Select>\r\n      )\r\n    }else if(item.type == DatePicker){\r\n      return <DatePicker style={{width: \"100%\"}} />\r\n    }else if(item.type == RangePicker){\r\n      return <RangePicker style={{width: \"100%\"}} />\r\n    }\r\n    else{\r\n      return item.type\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Card size=\"small\" >\r\n      <div className=\"flexbetween\">\r\n        <div style={{marginRight: 30}}>\r\n          {before}\r\n        </div>\r\n        <div className=\"flexend\" style={{minWidth: \"80%\"}}>\r\n          <Form\r\n            form={form}\r\n            layout=\"inline\"\r\n            onFinish={onFinish}\r\n            initialValues={initialValues}\r\n          >\r\n            <Row >\r\n              {data.map((item, index)=>{\r\n                return (\r\n                  <Col style={{marginBottom: 5}} key={index}   >\r\n                    <Form.Item\r\n                      label={item.label||\"\"}\r\n                      name={item.name}\r\n                      initialValue={item.initialValue}\r\n                    >\r\n                      {getNode(item)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                )\r\n              })}\r\n              <Col  >\r\n                <Form.Item >\r\n                  <Button type=\"primary\" ghost htmlType=\"submit\" icon={<SearchOutlined />}>搜索</Button>\r\n                  <Button className=\"mgl10\" onClick={handleReset} icon={<RetweetOutlined />}>重置</Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            \r\n\r\n            \r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Search;","import axios, {AxiosRequestConfig, Method } from \"axios\"\r\n\r\n\r\n\r\n\r\nexport interface AxiosRequest {\r\n  baseUrl?: string;\r\n  url: string,\r\n  method: Method,\r\n  data?: any,\r\n}\r\n\r\n// 定义接口\r\ninterface PendingType {\r\n  url?: string;\r\n  method?: Method;\r\n  params: any;\r\n  data: any;\r\n  cancel: Function;\r\n}\r\n\r\n// 取消重复请求\r\nconst pending: Array<PendingType> = [];\r\nconst CancelToken = axios.CancelToken;\r\n// axios 实例\r\nconst instance = axios.create({\r\n    timeout: 10000,\r\n    responseType: 'json'\r\n});\r\n\r\n\r\n// 移除重复请求\r\nconst removePending = (config: AxiosRequestConfig) => {\r\n    \r\n  for (const key in pending) {\r\n      const item: number = +key;\r\n      const list: PendingType = pending[key];\r\n      // 当前请求在数组中存在时执行函数体\r\n      if (list.url === config.url && list.method === config.method && JSON.stringify(list.params) === JSON.stringify(config.params) && JSON.stringify(list.data) === JSON.stringify(config.data)) {\r\n          // 执行取消操作\r\n          list.cancel('操作太频繁，请稍后再试');\r\n          // 从数组中移除记录\r\n          pending.splice(item, 1);\r\n      }\r\n  }\r\n};\r\n\r\n// 添加请求拦截器\r\ninstance.interceptors.request.use(\r\n  request => {\r\n\r\n      // removePending(request);\r\n      // request.cancelToken = new CancelToken((c) => {\r\n      //     pending.push({ url: request.url, method: request.method, params: request.params, data: request.data, cancel: c });\r\n      // });\r\n      return request;\r\n  },\r\n  error => {\r\n      return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 添加响应拦截器\r\ninstance.interceptors.response.use(\r\n  response => {\r\n      removePending(response.config);\r\n\r\n      const errorCode = response?.data?.errorCode;\r\n      switch (errorCode) {\r\n          case '401':\r\n              // 根据errorCode，对业务做异常处理(和后端约定)\r\n              break;\r\n          default:\r\n              break;\r\n      }\r\n\r\n      return response;\r\n  },\r\n  error => {\r\n      const response = error.response;\r\n\r\n      // 根据返回的http状态码做不同的处理\r\n      switch (response?.status) {\r\n          case 401:\r\n              // token失效\r\n              break;\r\n          case 403:\r\n              // 没有权限\r\n              break;\r\n          case 500:\r\n              // 服务端错误\r\n              break;\r\n          case 503:\r\n              // 服务端错误\r\n              break;\r\n          default:\r\n              break;\r\n      }\r\n\r\n      // 超时重新请求\r\n      // const config = error.config;\r\n      \r\n      // // 全局的请求次数,请求的间隙\r\n      // const [RETRY_COUNT, RETRY_DELAY] = [3, 10000];\r\n\r\n      // if (config && RETRY_COUNT) {\r\n      //     // 设置用于跟踪重试计数的变量\r\n      //     config.__retryCount = config.__retryCount || 0;\r\n      //     // 检查是否已经把重试的总数用完\r\n      //     if (config.__retryCount >= RETRY_COUNT) {\r\n      //         return Promise.reject(response || { message: error.message });\r\n      //     }\r\n      //     // 增加重试计数\r\n      //     config.__retryCount++;\r\n      //     // 创造新的Promise来处理指数后退\r\n      //     const backoff = new Promise((resolve) => {\r\n      //         setTimeout(() => {\r\n      //             resolve();\r\n      //         }, RETRY_DELAY || 1);\r\n      //     });\r\n      //     // instance重试请求的Promise\r\n      //     return backoff.then(() => {\r\n      //         return instance(config);\r\n      //     });\r\n      // }\r\n\r\n      // // eslint-disable-next-line\r\n      // return Promise.reject(response || {message: error.message});\r\n      return Promise.reject(response)\r\n  }\r\n);\r\n\r\nexport default instance;","import instance, {AxiosRequest} from \"./http\"\r\nimport {notification } from \"antd\"\r\nimport qs from \"qs\"\r\nimport {save, remove, load} from \"react-cookies\"\r\nimport _ from \"lodash\"\r\n\r\n\r\nexport const echoFiles = (obj: string | any[])=>{\r\n  var newArr:any[] = []\r\n  \r\n  if(obj==\"\" || obj == null || obj == undefined){\r\n    return newArr\r\n  }\r\n  if(typeof obj === \"string\"){\r\n    var arr = obj.split(\",\");\r\n    _.each(arr, (item, index)=>{\r\n      newArr.push({\r\n        url: item,\r\n        uid: index+1,\r\n        name: index+1,\r\n      })\r\n    })\r\n  }\r\n  return newArr;\r\n}\r\n\r\n/* 处理图片上传服务器参数 */\r\nexport function submitFiles(arr:any[]){\r\n  if(!_.isArray(arr)) return \"\";\r\n  \r\n  let newArr:string[] = []\r\n  _.each(arr, (item:any)=>{\r\n    newArr.push(item.url)\r\n  })\r\n  return newArr.join();\r\n}\r\n\r\n/* 分页 */\r\nexport const Pagination = (pageInfo:any, next:(...arg0:any)=>void)=>{\r\n  if(!pageInfo) return {}\r\n  if(!_.hasIn(pageInfo, \"current\") || !_.hasIn(pageInfo, \"pageSize\") || !_.hasIn(pageInfo, \"total\")){\r\n    OpenNotification(\"error\", \"分页少了应有字段！\")\r\n    return {}\r\n  }\r\n  const {current, pageSize, total} = pageInfo\r\n  return {\r\n    current,\r\n    pageSize,\r\n    total,\r\n    onChange: function(page: number, pageSize: number){\r\n      if(next)next(page, pageSize);\r\n    }\r\n  }\r\n} \r\n\r\n/* 添加key */\r\nexport const addIndex = (arr:Array<any>, type:boolean=false)=>{\r\n  const handleArr = (obj:any[])=>{\r\n    _.each(obj, (item,index)=>{\r\n      item.key = !type?(index+1):item.id\r\n      if(item.children && item.children.length){\r\n        handleArr(item.children)\r\n      }\r\n    })\r\n  }\r\n  handleArr(arr)\r\n  return arr;\r\n}\r\n\r\n/* 移出token */\r\nexport const removeToken = ()=>{\r\n  remove(\"token\", {path: \"/\"})\r\n}\r\n/* 存储token */\r\nexport const saveToken = (token:string)=>{\r\n  save(\"token\", token, {path: \"/\"})\r\n}\r\n\r\n/* 获取token */\r\nexport const getToken = ()=>{\r\n  return load(\"token\")\r\n}\r\n\r\n\r\n/* 提示 */\r\nexport function OpenNotification(type:string=\"success\", msg:string=\"操作成功\"){\r\n  (notification as any)[type]({\r\n    message: msg\r\n  })\r\n}\r\n\r\n/**\r\n *  url： requuire\r\n *  method: get post put delete 默认 get\r\n *  data: not require {}\r\n */\r\n\r\nexport const fetch = (options: AxiosRequest)=>{\r\n  options.data = {...options.data, token: getToken()}\r\n  const createInstance = function(){\r\n    switch( options.method.toUpperCase() ){\r\n      case \"GET\":\r\n        return instance.get( options.url, {params: options.data?options.data:{} })\r\n      case \"POST\":\r\n        return instance.post( options.url, options.data? qs.stringify(options.data) :{} )\r\n      case \"PUT\":\r\n        return instance.post( options.url, options.data?qs.stringify(options.data):{} )\r\n      case \"DELETE\":\r\n        return instance.get( options.url, {params: options.data?options.data:{} })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return new Promise((resolve, reject)=>{\r\n    \r\n    createInstance()?.then( response=>{\r\n      const {data, msg, code } = response.data;\r\n      \r\n      if(code==1){\r\n        resolve( data );\r\n      }else if(code==0){\r\n        OpenNotification(\"error\", msg)\r\n        reject();\r\n      }else if(code==-1){\r\n        reject();\r\n        OpenNotification(\"error\", msg )\r\n      }else if(code==-2){\r\n        (window as any)._navigation.push(\"/login\")\r\n        reject();\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err, 'color: red')\r\n      reject(err);\r\n    })\r\n  });\r\n\r\n}"],"sourceRoot":""}