{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","admin/components/Element/Widget.tsx","admin/views/system/permisser/menupermisser.tsx","admin/views/system/permisser/seemenu.tsx","admin/views/system/permisser/index.tsx"],"names":["_objectDestructuringEmpty","obj","TypeError","EditOutlined","props","ref","React","AntdIcon","Object","assign","icon","EditOutlinedSvg","displayName","DeleteElement","children","onConfirm","onCancel","title","MenuPermisser","state","addVisible","menus","addDetial","editVisible","editDetial","this","initial","arr","recursion","_","each","item","index","menuName","key","id","childMenu","length","actions","getSelectChildTree","params","systemId","match","next","res","setState","refresh","values","addSelectChildTree","parentId","utils","OpenNotification","editSelectChildTree","deleteSelectChildTree","spinning","size","extra","type","onClick","defaultExpandAll","blockNode","treeData","handleData","titleRender","className","menuKey","PlusOutlined","deleteSubmit","bind","DeleteOutlined","active","AddPage","visible","onOk","addSubmit","data","label","name","Input","rules","editSubmit","initialValues","Select","selectList","Component","connect","app","user","dispatch","bindActionCreators","withRouter","databytype","system","getTreeDateByType","addBatchMenus","useHistory","useEffect","gData","console","log","tData","JSON","parse","arrJson","menusJson","stringify","nodeData","Text","Option","TextArea","SystemPermisser","packages","addPackageVisible","editPackageVisible","packageDetail","currentPackage","currentChecked","getSystemPackage","value","addSystemPackage","editSystemPackage","e","stopPropagation","deleteSystemPackage","menutree","JCard","gutter","span","dataSource","bordered","renderItem","Item","style","cursor","padding","findPackageMenu","packageId","packageName","disabled","savePackageMenu","join","checkStrictly","checkedKeys","checkable","onCheck","checked"],"mappings":"6GAAe,SAASA,EAA0BC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCADvC,mC,oOCEeC,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uZAA2Z,KAAQ,OAAQ,MAAS,Y,QCK1kBA,EAAe,SAAsBC,EAAOC,GAC9C,OAAoBC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CACzEC,IAAKA,EACLK,KAAMC,MAIVR,EAAaS,YAAc,eACCN,mBAAiBH,G,oBCHhCU,EAA6C,SAAC,GAItD,IAHHC,EAGE,EAHFA,SACAC,EAEE,EAFFA,UACAC,EACE,EADFA,SAEA,OACE,kBAAC,IAAD,CACEC,MAAM,iCACNF,UAAWA,EACXC,SAAUA,GAAkB,cAE3BF,I,qCCRDI,E,4MAEJC,MAAU,CACRC,YAAY,EACZC,MAAO,GACPC,UAAW,GACXC,aAAa,EACbC,WAAY,I,kEAIZC,KAAKC,Y,iCAGIC,GAaT,OAXA,SAASC,EAAUD,GACjBE,IAAEC,KAAKH,GAAK,SAACI,EAAKC,GAChBD,EAAKd,MAAQc,EAAKE,SAClBF,EAAKG,IAAMH,EAAKI,GAChBJ,EAAKjB,SAAWiB,EAAKK,UAClBL,EAAKK,WAAaL,EAAKK,UAAUC,QAClCT,EAAUG,EAAKK,cAIrBR,CAAUD,GACHA,I,gCAGC,IAAD,OACPF,KAAKrB,MAAMkC,QAAQC,mBAAmB,CAACC,OAAQ,CAC7CC,SAAUhB,KAAKrB,MAAMsC,MAAMF,OAAOL,IACjCQ,KAAM,SAACC,GACR,EAAKC,SAAS,CAACxB,MAAOuB,KACrBE,SAAS,M,gCAGJC,GAAa,IAAD,OACpBtB,KAAKrB,MAAMkC,QAAQU,mBAAnB,2BACKD,GADL,IAEEE,SAAUxB,KAAKN,MAAMG,UAAUG,KAAKN,MAAMG,UAAUa,GAAG,GACvDM,SAAUhB,KAAKrB,MAAMsC,MAAMF,OAAOL,MACjC,WACD,EAAK/B,MAAM8C,MAAMC,iBAAiB,WAClC,EAAKN,SAAS,CAACzB,YAAY,IAC3B,EAAKM,e,iCAGEqB,GAAa,IAAD,OACrBtB,KAAKrB,MAAMkC,QAAQc,oBAAnB,2BACKL,GADL,IAEEZ,GAAIV,KAAKN,MAAMK,WAAWW,MACzB,WACD,EAAK/B,MAAM8C,MAAMC,iBAAiB,WAClC,EAAKN,SAAS,CAACtB,aAAa,IAC5B,EAAKG,e,mCAIIK,GAAU,IAAD,OACpBN,KAAKrB,MAAMkC,QAAQe,sBAAsB,CAAClB,GAAIJ,EAAKI,KAAK,WACtD,EAAK/B,MAAM8C,MAAMC,iBAAiB,WAClC,EAAKzB,e,+BAIC,IAAD,SACmBD,KAAKrB,MAAxBkD,EADA,EACAA,SADA,KACUJ,MAC+CzB,KAAKN,OAA9DC,EAFA,EAEAA,WAAYC,EAFZ,EAEYA,MAAkBE,GAF9B,EAEmBD,UAFnB,EAE8BC,aAAaC,EAF3C,EAE2CA,WAElD,OACE,oCACE,kBAAC,IAAD,CAAM+B,KAAK,QAAQtC,MAAM,2BAAOuC,MAAO,kBAAC,IAAD,CAAQC,KAAK,UAAUC,QAAS,kBAAI,EAAKb,SAAS,CAACzB,YAAY,MAA/D,iBACpCC,EAAM,kBAAC,IAAD,CACLsC,kBAAgB,EAChBC,WAAS,EACTC,SAAUpC,KAAKqC,WAAWzC,GAC1B0C,YAAa,SAAChC,GAEZ,OACE,yBAAKiC,UAAU,eACb,8BAAOjC,EAAKd,MAAZ,IAAoBc,EAAKkC,QAAzB,KACA,kBAAC,IAAD,CAAOV,KAAM,IACX,kBAACW,EAAA,EAAD,CAAcR,QAAS,kBAAI,EAAKb,SAAS,CAACzB,YAAY,EAAME,UAAWS,OACvE,kBAAC,EAAD,CAAc2B,QAAS,kBAAI,EAAKb,SAAS,CAACtB,aAAa,EAAMC,WAAYO,OACzE,kBAAC,IAAD,CAAYd,MAAM,iCAAQF,UAAW,EAAKoD,aAAaC,KAAK,EAAMrC,IAChE,kBAACsC,EAAA,EAAD,YAOR,kBAAC,IAAD,CAAUC,QAAM,KAEtB,kBAACC,EAAA,EAAD,CACEtD,MAAM,2BACNqC,SAAUA,EACVkB,QAASpD,EACTJ,SAAU,kBAAI,EAAK6B,SAAS,CAACzB,YAAY,EAAOE,UAAU,MAC1DmD,KAAMhD,KAAKiD,UAAUN,KAAK3C,MAC1BkD,KAAM,CACJ,CAACC,MAAO,2BAAQC,KAAM,WAAYpB,KAAMqB,IAAOC,OAAO,GACtD,CAACH,MAAO,kBAASC,KAAM,UAAWpB,KAAMqB,IAAOC,OAAO,GACtD,CAACH,MAAO,kBAASC,KAAM,UAAWpB,KAAMqB,KACxC,CAACF,MAAO,eAAMC,KAAM,SAAUpB,KAAMqB,QAIxC,kBAACP,EAAA,EAAD,CACEtD,MAAM,2BACNqC,SAAUA,EACVkB,QAASjD,EACTP,SAAU,kBAAI,EAAK6B,SAAS,CAACtB,aAAa,EAAOC,WAAW,MAC5DiD,KAAMhD,KAAKuD,WAAWZ,KAAK3C,MAC3BwD,cAAezD,EACfmD,KAAM,CACJ,CAACC,MAAO,2BAAQC,KAAM,WAAYpB,KAAMqB,IAAOC,OAAO,GACtD,CAACH,MAAO,kBAASC,KAAM,UAAWpB,KAAMqB,IAAOC,OAAO,GACtD,CAACH,MAAO,2BAAQC,KAAM,YAAapB,KAAMyB,IAAQC,WAAY,CAC3D,CAACN,KAAM,2BAAQ1C,GAAI,GACnB,CAAC0C,KAAM,2BAAQ1C,GAAI,GACnB,CAAC0C,KAAM,2BAAQ1C,GAAI,KAErB,CAACyC,MAAO,kBAASC,KAAM,UAAWpB,KAAMqB,KACxC,CAACF,MAAO,eAAMC,KAAM,SAAUpB,KAAMqB,a,GA9HpBxE,IAAM8E,WAmJnBC,eAPO,SAAClE,GACrB,MAAO,CACL+B,MAAO/B,EAAMmE,IAAIpC,MACjBI,SAAUnC,EAAMoE,KAAKjC,aATA,SAACkC,GACxB,MAAO,CACLlD,QAASmD,YAAmB,CAAClD,uBAAoBS,uBAAoBI,wBAAqBC,2BAAwBmC,MAWvGH,CAAyCnE,G,6BC1EzCwE,cAAYL,aAPL,SAAClE,GACrB,MAAO,CACLwE,WAAYxE,EAAMyE,OAAOD,WACzBzC,MAAO/B,EAAMmE,IAAIpC,UATI,SAACsC,GACxB,MAAO,CACLlD,QAASmD,YAAmB,CAACI,sBAAmBC,mBAAgBN,MAWzCH,EAxEK,SAAC,GAI5B,IAHH/C,EAGE,EAHFA,QACAqD,EAEE,EAFFA,WACAzC,EACE,EADFA,MACE,EACS6C,cADT,eAIFC,qBAAU,WACR1D,EAAQuD,kBAAkB,CACxBpC,KAAM,cAER,IAEF,IAAMwC,EAAQ,SAARA,EAAStE,GASX,OARAE,IAAEC,KAAKH,GAAK,SAAAI,GACVA,EAAKG,IAAMH,EAAKI,GAChBJ,EAAKjB,SAAWiB,EAAKjB,UAAY,KAC9BiB,EAAKjB,UAAYiB,EAAKjB,SAASuB,QAEhC4D,EAAMlE,EAAKjB,aAGRa,GAgBX,OADAuE,QAAQC,IAAIjD,EAAMkD,MAAMT,EAAWU,KAAKC,MAAMX,GAAY,KAAM,OAAQ,KAAM,aAE5E,kBAAC,IAAD,CAAMpC,KAAK,QAAQtC,MAAM,2BAAOuC,MAAO,kBAAC,IAAD,CAAQC,KAAK,UAAUC,QAd1C,WACpB,IAAI6C,EAAUF,KAAKC,MAAMX,GACzBO,QAAQC,IAAIF,EAAMM,IAClBjE,EAAQwD,cAAc,CACpBU,UAAWH,KAAKI,UAAWR,EAAMM,IACjC9D,SAAU,KACT,WACDS,EAAMC,iBAAiB,gBAOc,uBACpCwC,EACC,kBAAC,IAAD,CACEhC,kBAAgB,EAChBE,SAAUX,EAAMkD,MAAMT,EAAWU,KAAKC,MAAMX,GAAY,KAAM,OAAQ,KAAM,YAC5E5B,YAAa,SAAC2C,GACZ,OACE,kBAAC,IAAD,KACE,8BAAOA,EAAS7B,MAChB,kBAAC,IAAW8B,KAAZ,CAAiBlD,KAAK,UAAtB,IAAkCiD,EAASvE,GAA3C,SAIL,UCrDJyE,EAAU1B,IAAV0B,OACAC,EAAY/B,IAAZ+B,SAMDC,E,4MAEJ3F,MAAY,CACV4F,SAAU,GACVC,mBAAmB,EACnBC,oBAAoB,EACpBC,cAAe,GACfC,eAAgB,GAChBC,eAAgB,I,kEAGE,IAAD,OACjB3F,KAAKrB,MAAMkC,QAAQ+E,iBAAiB,CAAC5E,SAAUhB,KAAKrB,MAAMsC,MAAMF,OAAOL,KAAK,SAACS,GAC3E,EAAKC,SAAS,CAACkE,SAAUnE,S,wCAIX0E,GAAW,IAAD,OAC1B7F,KAAKrB,MAAMkC,QAAQiF,iBAAnB,2BAAwCD,GAAxC,IAA+C7E,SAAUhB,KAAKrB,MAAMsC,MAAMF,OAAOL,MAAK,WACpF,EAAK/B,MAAM8C,MAAMC,iBAAiB,WAClC,EAAKN,SAAS,CAACmE,mBAAmB,IAClC,EAAK5G,MAAMkC,QAAQ+E,iBAAiB,CAAC5E,SAAU,EAAKrC,MAAMsC,MAAMF,OAAOL,KAAK,SAACS,GAC3E,EAAKC,SAAS,CAACkE,SAAUnE,Y,yCAKZG,GAAY,IAAD,OAC5BtB,KAAKrB,MAAMkC,QAAQkF,kBAAnB,2BACKzE,GADL,IAEEZ,GAAIV,KAAKN,MAAM+F,cAAc/E,MAC5B,WACD,EAAK/B,MAAM8C,MAAMC,iBAAiB,WAClC,EAAKN,SAAS,CAACoE,oBAAoB,IACnC,EAAK7G,MAAMkC,QAAQ+E,iBAAiB,CAAC5E,SAAU,EAAKrC,MAAMsC,MAAMF,OAAOL,KAAK,SAACS,GAC3E,EAAKC,SAAS,CAACkE,SAAUnE,Y,mCAMlBb,EAAU0F,GAAO,IAAD,OAC3BA,EAAEC,kBACFjG,KAAKrB,MAAMkC,QAAQqF,oBAAoB,CAACxF,GAAIJ,EAAKI,KAAK,WACpD,EAAK/B,MAAM8C,MAAMC,iBAAiB,WAClC,EAAK/C,MAAMkC,QAAQ+E,iBAAiB,CAAC5E,SAAU,EAAKrC,MAAMsC,MAAMF,OAAOL,KAAK,SAACS,GAC3E,EAAKC,SAAS,CAACkE,SAAUnE,Y,iCAIpBjB,GAaT,OAXA,SAASC,EAAUD,GACjBE,IAAEC,KAAKH,GAAK,SAACI,EAAKC,GAChBD,EAAKd,MAAQc,EAAKE,SAClBF,EAAKG,IAAMH,EAAKI,GAChBJ,EAAKjB,SAAWiB,EAAKK,UAClBL,EAAKK,WAAaL,EAAKK,UAAUC,QAClCT,EAAUG,EAAKK,cAIrBR,CAAUD,GACHA,I,+BAGC,IAAD,SAC6BF,KAAKrB,MAAlCkD,EADA,EACAA,SAAUsE,EADV,EACUA,SAAUlF,EADpB,EACoBA,MADpB,EAEkGjB,KAAKN,MAAvG4F,EAFA,EAEAA,SAAUC,EAFV,EAEUA,kBAAmBC,EAF7B,EAE6BA,mBAAoBC,EAFjD,EAEiDA,cAAeC,EAFhE,EAEgEA,eAAgBC,EAFhF,EAEgFA,eAEvF,OACE,kBAACS,EAAA,EAAD,CAAOvE,SAAUA,GACf,kBAAC,IAAD,CAAKwE,OAAQ,GAAK5F,IAAI,KACpB,kBAAC,IAAD,CAAK6F,KAAM,GACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKA,KAAM,GACT,kBAAC,EAAkBtG,KAAKrB,QAE1B,kBAAC,IAAD,CAAK2H,KAAM,GACT,kBAAC,IAAD,CAAMxE,KAAK,QAAQtC,MAAM,iCAAQuC,MAAO,kBAAC,IAAD,CAAQC,KAAK,UACnDC,QAAS,kBAAI,EAAKb,SAAS,CAACmE,mBAAmB,MADT,mCAEtC,kBAAC,IAAD,CACEgB,WAAYjB,EACZkB,UAAQ,EACRC,WAAY,SAACnG,GAAD,OACV,kBAAC,IAAKoG,KAAN,CACAC,MAAO,CAACC,OAAQ,UAAWC,QAAS,GACpC5E,QAAS,WACP,EAAKb,SAAS,CAACsE,eAAgBpF,IAC/B,EAAK3B,MAAMkC,QAAQiG,gBAAgB,CAACC,UAAWzG,EAAKI,KAAK,SAACS,GACxD,EAAKC,SAAS,CAACuE,eAAexE,QAGlCN,QAAS,CAAC,kBAAC,EAAD,CACNoB,QAAS,SAAC+D,GACRA,EAAEC,kBACF,EAAK7E,SAAS,CAACoE,oBAAoB,EAAMC,cAAenF,OAE1D,kBAAC,EAAD,CACEhB,UAAW,EAAKoD,aAAaC,KAAK,EAAMrC,GACxCf,SAAU,SAACyG,GAAD,OAAKA,EAAEC,oBAEjB,kBAACrD,EAAA,EAAD,CAAgBX,QAAS,SAAA+D,GAAC,OAAEA,EAAEC,wBAGlC3F,EAAK0G,kBAKf,kBAAC,IAAD,CAAKV,KAAM,GACT,kBAAC,IAAD,CAAMxE,KAAK,QAAQtC,MAAOkG,EAAesB,YACzCjF,MAAO,kBAAC,IAAD,CAAQkF,UAAUvB,EAAesB,YAAwBhF,KAAK,UAAUC,QAAS,WACtF,EAAKtD,MAAMkC,QAAQqG,gBAAgB,CACjCH,UAAWrB,EAAehF,GAC1Bd,MAAO+F,EAAewB,OACtBnG,SAAUC,EAAMF,OAAOL,OAJpB,iBAONyF,EACD,kBAAC,IAAD,CACEjE,kBAAgB,EAChBkF,eAAa,EACbC,YAAa1B,EACb2B,WAAS,EACTnF,WAAS,EACTC,SAAUpC,KAAKqC,WAAW8D,GAC1BoB,QAAS,YAAkB,IAAhBC,EAAe,EAAfA,QACT,EAAKpG,SAAS,CAACuE,eAAe6B,OAE9B,kBAAC,IAAD,CAAU3E,QAAM,OAIxB,kBAACC,EAAA,EAAD,CACEtD,MAAM,iCACNqC,SAAUA,EACVkB,QAASwC,EACThG,SAAU,kBAAI,EAAK6B,SAAS,CAACmE,mBAAmB,KAChDvC,KAAMhD,KAAKuF,kBAAkB5C,KAAK3C,MAClCkD,KAAM,CACJ,CAACC,MAAO,iCAASC,KAAM,cAAepB,KAAMqB,KAC5C,CAACF,MAAO,eAAMC,KAAM,YAAapB,KAC/B,kBAAC,IAAD,KACE,kBAACmD,EAAD,CAAQU,MAAM,KAAd,UACA,kBAACV,EAAD,CAAQU,MAAM,KAAd,YAGJ,CAAC1C,MAAO,eAAMC,KAAM,SAAUpB,KAAMoD,MAGxC,kBAACtC,EAAA,EAAD,CACEtD,MAAM,iCACNqC,SAAUA,EACVkB,QAASyC,EACTjG,SAAU,kBAAI,EAAK6B,SAAS,CAACoE,oBAAoB,KACjDxC,KAAMhD,KAAKwF,mBAAmB7C,KAAK3C,MACnCwD,cAAeiC,EACfvC,KAAM,CACJ,CAACC,MAAO,iCAASC,KAAM,cAAepB,KAAMqB,KAC5C,CAACF,MAAO,eAAMC,KAAM,YAAapB,KAC/B,kBAAC,IAAD,KACE,kBAACmD,EAAD,CAAQU,MAAM,KAAd,UACA,kBAACV,EAAD,CAAQU,MAAM,KAAd,YAGJ,CAAC1C,MAAO,eAAMC,KAAM,SAAUpB,KAAMoD,W,GAvKlBvG,IAAM8E,WA+LrBC,uBARO,SAAClE,GACrB,MAAO,CACLyG,SAAUzG,EAAMyE,OAAOgC,SACvB1E,MAAO/B,EAAMmE,IAAIpC,MACjBI,SAAUnC,EAAMyE,OAAOtC,aAXF,SAACkC,GACxB,MAAO,CACLlD,QAASmD,YAAmB,CAAC4B,qBAAkBE,qBAAkBC,sBAAmBG,wBAAqBY,oBACvGI,qBAAkBnD,MAYTH,CAAyCyB","file":"admin/js/9.f0136ac3.chunk.js","sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","import { Popconfirm } from \"antd\"\r\nimport { PopconfirmProps } from \"antd/lib/popconfirm\"\r\nimport React from \"react\"\r\n\r\n\r\ninterface DeleteElementProps {\r\n  children: any;\r\n  onConfirm:(...arg0:any)=>void;\r\n  onCancel?:(...arg0:any)=>void;\r\n}\r\n\r\nexport const DeleteElement:React.FC<DeleteElementProps> = ({\r\n  children,\r\n  onConfirm,\r\n  onCancel\r\n})=>{\r\n  return (\r\n    <Popconfirm\r\n      title=\"是否删除？\"\r\n      onConfirm={onConfirm}\r\n      onCancel={onCancel?onCancel:()=>{}}\r\n    >\r\n      {children}\r\n    </Popconfirm>\r\n  )\r\n}","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport { Button, Card, Input, Space, Tree, Popconfirm, Skeleton, Select} from \"antd\";\r\nimport AddPage from \"@admin/components/Page/AddPage\";\r\nimport {getSelectChildTree, addSelectChildTree, editSelectChildTree, deleteSelectChildTree} from \"@admin/actions/systemAction\"\r\nimport _ from \"lodash\";\r\nimport { DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\ninterface Props extends IProps {\r\n\r\n}\r\n\r\nclass MenuPermisser extends React.Component<Props> {\r\n\r\n  state:any={\r\n    addVisible: false,\r\n    menus: \"\",\r\n    addDetial: \"\",\r\n    editVisible: false,\r\n    editDetial: \"\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.initial()\r\n  }\r\n\r\n  handleData(arr:any[]){\r\n\r\n    function recursion(arr:any[]){\r\n      _.each(arr, (item,index)=>{\r\n        item.title = item.menuName\r\n        item.key = item.id\r\n        item.children = item.childMenu\r\n        if(item.childMenu && item.childMenu.length){\r\n          recursion(item.childMenu)\r\n        }\r\n      })\r\n    }\r\n    recursion(arr)\r\n    return arr;\r\n  }\r\n\r\n  initial(){\r\n    this.props.actions.getSelectChildTree({params: {\r\n      systemId: this.props.match.params.id\r\n    }, next: (res:any)=>{\r\n      this.setState({menus: res})\r\n    }, refresh: true})\r\n  }\r\n\r\n  addSubmit(values: any){\r\n    this.props.actions.addSelectChildTree({\r\n      ...values,\r\n      parentId: this.state.addDetial?this.state.addDetial.id:\"\",\r\n      systemId: this.props.match.params.id\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({addVisible: false})\r\n      this.initial()\r\n    })\r\n  }\r\n  editSubmit(values: any){\r\n    this.props.actions.editSelectChildTree({\r\n      ...values,\r\n      id: this.state.editDetial.id,\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({editVisible: false})\r\n      this.initial()\r\n    })\r\n  }\r\n\r\n  deleteSubmit(item:any){\r\n    this.props.actions.deleteSelectChildTree({id: item.id}, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.initial()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils} = this.props\r\n    const {addVisible, menus, addDetial, editVisible, editDetial} = this.state;\r\n    \r\n    return (\r\n      <>\r\n        <Card size=\"small\" title=\"权限菜单\" extra={<Button type=\"primary\" onClick={()=>this.setState({addVisible: true})} >新增</Button>} >\r\n          {menus?<Tree\r\n            defaultExpandAll\r\n            blockNode\r\n            treeData={this.handleData(menus)}\r\n            titleRender={(item:any)=>{\r\n              \r\n              return (\r\n                <div className=\"flexbetween\">\r\n                  <span>{item.title}({item.menuKey})</span>\r\n                  <Space size={20}>\r\n                    <PlusOutlined onClick={()=>this.setState({addVisible: true, addDetial: item})} />\r\n                    <EditOutlined onClick={()=>this.setState({editVisible: true, editDetial: item})} />\r\n                    <Popconfirm title=\"是否删除？\" onConfirm={this.deleteSubmit.bind(this, item)}>\r\n                      <DeleteOutlined />\r\n                    </Popconfirm>\r\n                    \r\n                  </Space>\r\n                </div>\r\n              )\r\n            }}\r\n          />: <Skeleton active />}\r\n        </Card>\r\n        <AddPage\r\n          title=\"新增菜单\"\r\n          spinning={spinning}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false, addDetial:\"\"})}\r\n          onOk={this.addSubmit.bind(this)}\r\n          data={[\r\n            {label: \"权限名称\", name: \"menuName\", type: Input, rules: true},\r\n            {label: \"权限key\", name: \"menuKey\", type: Input, rules: true},\r\n            {label: \"权限URL\", name: \"menuUrl\", type: Input},\r\n            {label: \"备注\", name: \"remark\", type: Input},\r\n          ]}\r\n        />\r\n\r\n        <AddPage\r\n          title=\"编辑菜单\"\r\n          spinning={spinning}\r\n          visible={editVisible}\r\n          onCancel={()=>this.setState({editVisible: false, editDetial:\"\"})}\r\n          onOk={this.editSubmit.bind(this)}\r\n          initialValues={editDetial}\r\n          data={[\r\n            {label: \"权限名称\", name: \"menuName\", type: Input, rules: true},\r\n            {label: \"权限key\", name: \"menuKey\", type: Input, rules: true},\r\n            {label: \"菜单级别\", name: \"menuLevel\", type: Select, selectList: [\r\n              {name: \"项目级别\", id: 0},\r\n              {name: \"公司级别\", id: 1},\r\n              {name: \"系统级别\", id: 2},\r\n            ]},\r\n            {label: \"权限URL\", name: \"menuUrl\", type: Input},\r\n            {label: \"备注\", name: \"remark\", type: Input},\r\n          ]}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getSelectChildTree, addSelectChildTree, editSelectChildTree, deleteSelectChildTree}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    utils: state.app.utils,\r\n    spinning: state.user.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(MenuPermisser)","import React, { useEffect } from \"react\"\r\nimport {getTreeDateByType, addBatchMenus} from \"@admin/actions/systemAction\"\r\nimport { connect } from \"react-redux\"\r\nimport {useHistory, withRouter} from \"react-router-dom\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { UtilsProps } from \"@public/common/interface\"\r\nimport { Button, Card, Space, Tree, Typography } from \"antd\"\r\nimport _ from \"lodash\"\r\n\r\ninterface Props {\r\n  actions:any;\r\n  databytype:any;\r\n  utils:UtilsProps\r\n}\r\n\r\nconst SeeMenu:React.FC<Props> = ({\r\n  actions,\r\n  databytype,\r\n  utils\r\n})=>{\r\n  const {} = useHistory()\r\n\r\n\r\n  useEffect(()=>{\r\n    actions.getTreeDateByType({\r\n      type: \"systema\"\r\n    })\r\n  },[])\r\n\r\n  const gData = (arr:any[])=>{\r\n      _.each(arr, item=>{\r\n        item.key = item.id\r\n        item.children = item.children || null\r\n        if(item.children && item.children.length){\r\n          \r\n          gData(item.children)\r\n        }\r\n      })\r\n      return arr\r\n  }\r\n\r\n  const AddBatchMenus = ()=>{\r\n    let arrJson = JSON.parse(databytype)\r\n    console.log(gData(arrJson))\r\n    actions.addBatchMenus({\r\n      menusJson: JSON.stringify( gData(arrJson) ),\r\n      systemId: 26\r\n    }, ()=>{\r\n      utils.OpenNotification(\"success\")\r\n    })\r\n\r\n  }\r\n\r\n  console.log(utils.tData(databytype?JSON.parse(databytype):null, \"name\", \"id\", \"children\"))\r\n  return (\r\n    <Card size=\"small\" title=\"系统菜单\" extra={<Button type=\"primary\" onClick={AddBatchMenus}>初始化</Button>} >\r\n      {databytype?\r\n        <Tree \r\n          defaultExpandAll\r\n          treeData={utils.tData(databytype?JSON.parse(databytype):null, \"name\", \"id\", \"children\")}\r\n          titleRender={(nodeData:any)=>{\r\n            return (\r\n              <Space>\r\n                <span>{nodeData.name}</span>\r\n                <Typography.Text type=\"danger\" >({nodeData.id})</Typography.Text>\r\n              </Space>\r\n            )\r\n          }}\r\n        />:null}\r\n    </Card>\r\n    \r\n  )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getTreeDateByType, addBatchMenus}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    databytype: state.system.databytype,\r\n    utils: state.app.utils,\r\n  }\r\n}\r\n\r\nexport default withRouter( connect(mapStateProps, mapDispatchProps)(SeeMenu) ) ","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport { Button, Card, Col, Input, List, Row, Select, Skeleton, Tree } from \"antd\";\r\nimport {getSystemPackage, addSystemPackage, editSystemPackage, deleteSystemPackage, findPackageMenu,\r\n  savePackageMenu } from \"@admin/actions/systemAction\"\r\nimport AddPage from \"@admin/components/Page/AddPage\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { DeleteElement } from \"@admin/components/Element/Widget\";\r\nimport MenuPermisser from \"./menupermisser\"\r\nimport _ from \"lodash\";\r\nimport SeeMenu from \"./seemenu\"\r\n\r\nconst {Option} = Select\r\nconst {TextArea} = Input\r\n\r\ninterface Props extends IProps {\r\n  menutree:any;\r\n}\r\n\r\nclass SystemPermisser extends React.Component<Props> {\r\n\r\n  state:any = {\r\n    packages: [],\r\n    addPackageVisible: false,\r\n    editPackageVisible: false,\r\n    packageDetail: {},\r\n    currentPackage: {},\r\n    currentChecked: []\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getSystemPackage({systemId: this.props.match.params.id}, (res:any)=>{\r\n      this.setState({packages: res})\r\n    })\r\n  }\r\n\r\n  addPackageVisible(value:any){\r\n    this.props.actions.addSystemPackage({...value, systemId: this.props.match.params.id}, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({addPackageVisible: false})\r\n      this.props.actions.getSystemPackage({systemId: this.props.match.params.id}, (res:any)=>{\r\n        this.setState({packages: res})\r\n      })\r\n    })\r\n  }\r\n\r\n  editPackageVisible(values:any){\r\n    this.props.actions.editSystemPackage({\r\n      ...values, \r\n      id: this.state.packageDetail.id\r\n    }, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({editPackageVisible: false})\r\n      this.props.actions.getSystemPackage({systemId: this.props.match.params.id}, (res:any)=>{\r\n        this.setState({packages: res})\r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n  deleteSubmit(item:any, e:any){\r\n    e.stopPropagation();\r\n    this.props.actions.deleteSystemPackage({id: item.id}, ()=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getSystemPackage({systemId: this.props.match.params.id}, (res:any)=>{\r\n        this.setState({packages: res})\r\n      })\r\n    })\r\n  }\r\n  handleData(arr:any[]){\r\n\r\n    function recursion(arr:any[]){\r\n      _.each(arr, (item,index)=>{\r\n        item.title = item.menuName\r\n        item.key = item.id\r\n        item.children = item.childMenu\r\n        if(item.childMenu && item.childMenu.length){\r\n          recursion(item.childMenu)\r\n        }\r\n      })\r\n    }\r\n    recursion(arr)\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    const {spinning, menutree, match} = this.props\r\n    const {packages, addPackageVisible, editPackageVisible, packageDetail, currentPackage, currentChecked} = this.state\r\n    \r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <Row gutter={10}  key=\"a\">\r\n          <Col span={6}>\r\n            <SeeMenu/>\r\n          </Col>\r\n          <Col span={6}>\r\n            <MenuPermisser {...this.props}/>\r\n          </Col>\r\n          <Col span={6} >\r\n            <Card size=\"small\" title=\"新增权限包\" extra={<Button type=\"primary\" \r\n              onClick={()=>this.setState({addPackageVisible: true})} >新增权限包</Button>} >\r\n              <List \r\n                dataSource={packages}\r\n                bordered\r\n                renderItem={(item:any)=>(\r\n                  <List.Item \r\n                  style={{cursor: \"pointer\", padding: 8}}\r\n                  onClick={()=>{\r\n                    this.setState({currentPackage: item})\r\n                    this.props.actions.findPackageMenu({packageId: item.id}, (res:any)=>{\r\n                      this.setState({currentChecked:res})\r\n                    })\r\n                  }}\r\n                  actions={[<EditOutlined \r\n                      onClick={(e)=>{\r\n                        e.stopPropagation();\r\n                        this.setState({editPackageVisible: true, packageDetail: item})\r\n                      }} />, \r\n                      <DeleteElement\r\n                        onConfirm={this.deleteSubmit.bind(this, item)}\r\n                        onCancel={(e)=>e.stopPropagation()}\r\n                      >\r\n                        <DeleteOutlined onClick={e=>e.stopPropagation()} />\r\n                      </DeleteElement>\r\n                    ]}\r\n                  >{item.packageName}</List.Item>\r\n                )}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col span={6} >\r\n            <Card size=\"small\" title={currentPackage.packageName} \r\n            extra={<Button disabled={currentPackage.packageName?false:true} type=\"primary\" onClick={()=>{\r\n              this.props.actions.savePackageMenu({\r\n                packageId: currentPackage.id,\r\n                menus: currentChecked.join(),\r\n                systemId: match.params.id\r\n              })\r\n            }}>保存</Button>} >\r\n            {menutree?\r\n            <Tree\r\n              defaultExpandAll\r\n              checkStrictly\r\n              checkedKeys={currentChecked}\r\n              checkable\r\n              blockNode\r\n              treeData={this.handleData(menutree)}\r\n              onCheck={({checked}:any)=>{\r\n                this.setState({currentChecked:checked})\r\n              }}\r\n            />: <Skeleton active />}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <AddPage \r\n          title=\"新增权限包\"\r\n          spinning={spinning}\r\n          visible={addPackageVisible}\r\n          onCancel={()=>this.setState({addPackageVisible: false})}\r\n          onOk={this.addPackageVisible.bind(this)}\r\n          data={[\r\n            {label: \"权限包名称\", name: \"packageName\", type: Input},\r\n            {label: \"默认\", name: \"isDefault\", type: (\r\n              <Select>\r\n                <Option value=\"Y\">是</Option>\r\n                <Option value=\"N\">否</Option>\r\n              </Select>\r\n            )},\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n        />\r\n        <AddPage \r\n          title=\"编辑权限包\"\r\n          spinning={spinning}\r\n          visible={editPackageVisible}\r\n          onCancel={()=>this.setState({editPackageVisible: false})}\r\n          onOk={this.editPackageVisible.bind(this)}\r\n          initialValues={packageDetail}\r\n          data={[\r\n            {label: \"权限包名称\", name: \"packageName\", type: Input},\r\n            {label: \"默认\", name: \"isDefault\", type: (\r\n              <Select>\r\n                <Option value=\"Y\">是</Option>\r\n                <Option value=\"N\">否</Option>\r\n              </Select>\r\n            )},\r\n            {label: \"备注\", name: \"remark\", type: TextArea},\r\n          ]}\r\n        />\r\n\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getSystemPackage, addSystemPackage, editSystemPackage, deleteSystemPackage, findPackageMenu,\r\n      savePackageMenu}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    menutree: state.system.menutree,\r\n    utils: state.app.utils,\r\n    spinning: state.system.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(SystemPermisser)"],"sourceRoot":""}