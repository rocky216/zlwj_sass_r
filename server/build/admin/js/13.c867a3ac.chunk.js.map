{"version":3,"sources":["admin/components/Element/CompanyHeElement.tsx","admin/views/users/index.tsx"],"names":["connect","state","companyhe","app","dispatch","actions","bindActionCreators","getCompanyHe","onChange","value","useEffect","options","changedValue","fieldNames","label","children","placeholder","Option","Select","params","current","userName","phone","status","userNick","account","companyId","heId","temId","UsersPage","formRef","React","createRef","addVisible","currentKey","filterSelect","authList","name","type","initialValue","userList","style","width","accountList","this","props","getUsers","refresh","values","auth","Object","assign","length","console","log","item","statusSysUser","id","res","utils","OpenNotification","obj","_this","usersColumns","title","dataIndex","render","rows","size","statusUser","bind","to","addSysUser","setState","spinning","users","JCard","AddPage","visible","onCancel","onOk","addUser","data","InputNumber","rules","Input","key","display","justifyContent","onClick","className","layout","ref","onFinish","handleSearch","Item","v","map","index","ghost","htmlType","columns","getCol","dataSource","addIndex","list","pagination","Pagination","pages","Component","user"],"mappings":"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","file":"admin/js/13.c867a3ac.chunk.js","sourcesContent":["import React, { useEffect } from \"react\"\r\nimport {Cascader} from \"antd\"\r\nimport {getCompanyHe} from \"@admin/actions/appAction\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\n\r\n\r\ninterface Props {\r\n  companyhe: any[];\r\n  actions: any;\r\n  onChange?:(value:any)=>void;\r\n  value?:string[];\r\n}\r\n\r\nconst CompanyHeElement:React.FC<Props> = ({\r\n  onChange,\r\n  value=[],\r\n  actions,\r\n  companyhe\r\n})=>{\r\n\r\n  useEffect(()=>{\r\n    actions.getCompanyHe({})\r\n  }, [])\r\n\r\n  const triggerChange = (changedValue:any) => {\r\n    if (onChange) {\r\n      onChange(changedValue );\r\n    }\r\n  };\r\n\r\n  return <Cascader \r\n          value={value} \r\n          options={companyhe || []} \r\n          onChange={triggerChange}\r\n          fieldNames={{ label: 'name', value: 'id', children: 'items' }} \r\n          placeholder=\"请选择公司/小区\"\r\n        />\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getCompanyHe}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    companyhe: state.app.companyhe\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(CompanyHeElement)","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {Button, Card, Form, Input, InputNumber, Select, Table} from \"antd\"\r\nimport {usersColumns} from \"./columns\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {getUsers, addSysUser, statusSysUser} from \"@admin/actions/userAction\"\r\nimport {IProps} from \"@public/common/interface\"\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport AddPage from \"@admin/components/Page/AddPage\"\r\nimport CompanyHeElement from \"@admin/components/Element/CompanyHeElement\" \r\n\r\nconst {Option} = Select\r\n\r\ninterface Props extends IProps {\r\n  users:any;\r\n}\r\n\r\nlet params = {\r\n  current: 1,\r\n  userName: \"\",\r\n  phone: \"\",\r\n  status: \"\",\r\n  userNick: \"\",\r\n  account: \"\",\r\n  companyId: \"\",\r\n  heId: \"\",\r\n  temId: \"\",\r\n}\r\n\r\n\r\nclass UsersPage extends React.Component<Props> {\r\n  formRef = React.createRef<FormInstance>()\r\n\r\n  state:any={\r\n    addVisible: false,\r\n    currentKey: \"authList\",\r\n    filterSelect: [\r\n      {label: \"权限查询\", value: \"authList\"},\r\n      {label: \"用户查询\", value: \"userList\"},\r\n      {label: \"账户查询\", value: \"accountList\"}\r\n    ],\r\n    authList: [\r\n      {label: \"公司项区权限\", name: \"auth\", type: <CompanyHeElement/>, \r\n        initialValue: params.companyId?[params.companyId,params.heId]:[]},\r\n    ],\r\n    userList: [\r\n      {label: \"姓名\", name: \"userName\", type: <Input/>},\r\n      {label: \"手机号\", name: \"phone\", type: <InputNumber style={{width: 130}}/>},\r\n      {label: \"昵称\", name: \"userNick\", type: <Input/>},\r\n    ],\r\n    accountList: [\r\n      {label: \"唯一ID\", name: \"temId\", type: <Input/>},\r\n      {label: \"账号\", name: \"account\", type: <Input/>},\r\n      {label: \"状态\", name: \"status\", type: (\r\n        <Select >\r\n          <Option value=\"\">全部</Option>\r\n          <Option value={1}>启用</Option>\r\n          <Option value={0}>禁用</Option>\r\n        </Select>\r\n      ), initialValue:\"\" },\r\n    ],\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n    this.props.actions.getUsers({params, refresh:true}) \r\n    \r\n  }\r\n\r\n  handleSearch(values:any){\r\n    const {currentKey} = this.state\r\n    const {auth, userName, phone, userNick, status, account, temId} = values\r\n    if(currentKey == \"authList\"){\r\n      params = Object.assign(params, {\r\n        companyId: auth.length?auth[0]:\"\",\r\n        heId: auth.length?auth[1]:\"\",\r\n      })\r\n      console.log(params, \"params\")\r\n      this.props.actions.getUsers({params, refresh: true})\r\n      return\r\n    }\r\n    if(currentKey == \"userList\"){\r\n      params = Object.assign(params, { \r\n        userName,\r\n        phone,\r\n        userNick,\r\n      })\r\n      this.props.actions.getUsers({params, refresh: true})\r\n      return\r\n    }\r\n    if(currentKey == \"accountList\"){\r\n      params = Object.assign(params, {\r\n        status,\r\n        account,\r\n        temId,\r\n      })\r\n      this.props.actions.getUsers({params, refresh: true})\r\n      return\r\n    }\r\n  }\r\n\r\n  statusUser(item:any){\r\n    this.props.actions.statusSysUser({id: item.id}, (res:any)=>{\r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.props.actions.getUsers({params, obj:res, type: \"edit\"}) \r\n    })\r\n  }\r\n\r\n  getCol(){\r\n    let _this = this;\r\n    return [...usersColumns,{\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render(item:any, rows:any) {\r\n        return (\r\n          <Select size=\"small\" value={item} onChange={_this.statusUser.bind(_this, rows)}>\r\n            <Option value={1}>启用</Option>\r\n            <Option value={0}>禁用</Option>\r\n          </Select>\r\n        );\r\n      }\r\n    }, {\r\n      title: \"操作\",\r\n      width: 100,\r\n      render(item:any) {\r\n        return (\r\n          <Link to={`/users/${item.id}/detail/${item.temId}/base`}>\r\n            <Button type=\"link\">用户详情</Button>\r\n          </Link>\r\n        )\r\n      }\r\n    }]\r\n  }\r\n\r\n  addUser(values:any){\r\n    this.props.actions.addSysUser({\r\n      ...values,\r\n    }, ()=>{\r\n      this.props.actions.getUsers({params, refresh:true}) \r\n      this.props.utils.OpenNotification(\"success\")\r\n      this.setState({addVisible: false})\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {spinning, utils, users} = this.props;\r\n    const {filterSelect, currentKey, addVisible} = this.state\r\n    \r\n    return (\r\n      <JCard spinning={spinning}>\r\n        <AddPage\r\n          title=\"新增用户\"\r\n          spinning={false}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={this.addUser.bind(this)}\r\n          data={[\r\n            {label:\"手机号\", name: \"phoneAccount\", type: InputNumber, rules: true},\r\n            {label:\"姓名\", name: \"userName\", type: Input},\r\n            {label:\"昵称\", name: \"userNick\", type: Input},\r\n            {label:\"性别\", name: \"gender\", type: (\r\n              <Select>\r\n                <Option value={1}>男</Option>\r\n                <Option value={2}>女</Option>\r\n                <Option value={3}>未知</Option>\r\n              </Select>\r\n            )},\r\n          ]}\r\n        />\r\n\r\n        <div key=\"a\">\r\n          <Card size=\"small\" >\r\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n              <Button type=\"primary\" onClick={()=>this.setState({addVisible: true})}>新增用户</Button>\r\n              <div>\r\n                <Form className=\"flexend\" layout=\"inline\" ref={this.formRef} onFinish={this.handleSearch.bind(this)} >\r\n                  <Form.Item label=\"搜索类型\" name=\"type\" initialValue={currentKey}>\r\n                    <Select onChange={(v)=>{\r\n                      this.setState({currentKey: v})\r\n                    }}>\r\n                      {filterSelect.map((item:any)=>(\r\n                        <Option key={item.value} value={item.value}>{item.label}</Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  {this.state[currentKey].map((item:any, index:number)=>(\r\n                    <Form.Item key={index} name={item.name} label={item.label} initialValue={item.initialValue}  >\r\n                      {item.type}\r\n                    </Form.Item>\r\n                  ))}\r\n                  <Form.Item>\r\n                    <Button ghost type=\"primary\" htmlType=\"submit\">搜索</Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n        <div key=\"b\">\r\n          <Card size=\"small\"  >\r\n            <Table size=\"small\" columns={this.getCol()} dataSource={users?utils.addIndex(users.list):[]} \r\n            pagination={utils.Pagination(users, (pages:number)=>{\r\n              params.current = pages;\r\n              this.props.actions.getUsers({params, refresh: true})\r\n            })}/>\r\n          </Card>\r\n        </div>\r\n      </JCard>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getUsers, addSysUser, statusSysUser}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    users: state.user.users,\r\n    spinning: state.user.spinning,\r\n    utils: state.app.utils\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(UsersPage)"],"sourceRoot":""}