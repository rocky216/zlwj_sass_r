{"version":3,"sources":["admin/actions/otherAction.ts","admin/views/resource/columns/index.tsx","public/components/Modular/getnode.tsx","public/components/Modular/AddModular.tsx","public/components/Modular/SearchModular.tsx","public/components/Element/StatusElement.tsx","admin/views/resource/restype/index.tsx"],"names":["ACTION","deleteLogoLink","params","next","dispatch","getState","a","options","url","method","data","stateApi","statusLogoLink","editLogoLink","addLogoLink","getLogoLink","opt","storetApi","statusResType","deleteResType","editResType","addResType","getResTypeList","optionList","keyName","obj","type","refresh","key","JSON","stringify","isCache","MC","get","OTHER_LOADING_START","fetch","put","OTHER_LOADING_END","_","size","index","findIndex","list","o","id","assign","OTHER_LOADING_NOT","console","log","deleteSysResource","editSysResource","addSysResource","getSysResource","Paragraph","Typography","logoLinkColumns","title","dataIndex","restypeColumns","resourceColumns","render","item","style","width","copyable","ellipsis","TextArea","Input","Option","Select","RangePicker","DatePicker","getNode","selectList","map","elem","value","label","notAll","layout","labelCol","span","wrapperCol","AddModular","visible","onOk","onCancel","initialValues","spinning","Form","useForm","form","useState","modalVisible","setModalVisible","useEffect","setFieldsValue","handleRules","rules","required","message","resetFields","destroyOnClose","submit","confirmLoading","afterClose","name","onFinish","values","Item","initialValue","SearchModular","before","submitSearch","resetValues","bordered","className","marginRight","marginBottom","valuePropName","ghost","htmlType","icon","onClick","StatusElement","onChange","v","current","linkName","linkCode","resetParams","ResType","state","addVisible","editVisible","detail","fileSuffixCollect","this","props","actions","rows","res","utils","OpenNotification","setState","onConfirm","restype","columns","getCol","dataSource","addIndex","pagination","Pagination","page","join","mode","split","React","Component","connect","other","app","bindActionCreators"],"mappings":"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","file":"admin/js/5.b165ec8e.chunk.js","sourcesContent":["import {OTHER_LOADING_START, OTHER_LOADING_END, OTHER_LOADING_NOT} from \"@admin/constant/other\"\r\nimport {fetch} from \"@public/utils\"\r\nimport MC from \"memory-cache\"\r\nimport _ from \"lodash\"\r\nimport moment from \"moment\"\r\nimport {storetApi, stateApi} from \"@public/utils/action\"\r\nconst ACTION = \"OTHER\"\r\nimport {OptProps} from \"@public/utils/action\"\r\n\r\n\r\nexport const deleteLogoLink = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-logo/deleteById\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const statusLogoLink = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-logo/enable\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const editLogoLink = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-logo/updateById\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const addLogoLink = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-logo/save\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getLogoLink = (params:any, opt?:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-logo/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n\r\n    storetApi(options, \"logolink\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\nexport const statusResType = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-type/enable\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\n\r\nexport const deleteResType = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-type/deleteById\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const editResType = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-type/updateById\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const addResType = (params:any, next?:(...arg:any)=>void)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-type/save\",\r\n      method: \"post\",\r\n      data: params\r\n    }\r\n    stateApi(options, dispatch, ACTION, next)\r\n  }\r\n}\r\n\r\nexport const getResTypeList = (params:any, opt?:OptProps)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    const options:any = {\r\n      url: \"/zlwj/api/resource/link-type/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n\r\n    storetApi(options, \"restype\", dispatch, ACTION, opt)\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * list API公共方法\r\n * \r\n */\r\ninterface OptionListProps{\r\n  options: any;\r\n  dispatch:any;\r\n  keyName: string;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n\r\ninterface ParamsListProps{\r\n  params: any;\r\n  obj?:any;\r\n  next?:(...arg0:any)=>void;\r\n  type?:string;  //\"add\" | \"edit\"\r\n  refresh?: boolean\r\n}\r\n// options:any,keyName:string, obj?:any, next?:(...arg0:any)=>void\r\nconst optionList = async (opt: OptionListProps)=>{\r\n    const {options,dispatch, keyName, obj, next, type, refresh} = opt;\r\n    try{\r\n      let key = options.url+JSON.stringify(options.data)\r\n      let isCache = MC.get(key)\r\n      \r\n    if(!isCache || refresh){\r\n      dispatch({\r\n        type: OTHER_LOADING_START\r\n      })\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      MC.put(key, data)\r\n      dispatch({\r\n        type: OTHER_LOADING_END,\r\n        [keyName]: data\r\n      })\r\n    }else{\r\n      if(obj && _.size(obj)){\r\n        let index = _.findIndex(isCache.list, (o:any)=>o.id==obj.id)\r\n        if(type==\"edit\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }else if(type==\"add\"){\r\n          isCache.list[index] = _.assign(isCache.list[index], obj);\r\n        }\r\n\r\n        MC.put(key, isCache)\r\n        dispatch({\r\n          type: OTHER_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }else{\r\n        dispatch({\r\n          type: OTHER_LOADING_NOT,\r\n          [keyName]: isCache\r\n        })\r\n      }\r\n      \r\n    }\r\n    \r\n  }catch(e){\r\n    console.log(e)\r\n    dispatch({type: OTHER_LOADING_END})\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport const deleteSysResource = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: OTHER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-resource/removeById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: OTHER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: OTHER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const editSysResource = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: OTHER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-resource/updateById\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: OTHER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: OTHER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const addSysResource = (params:any, next:Function)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n    dispatch({\r\n      type: OTHER_LOADING_START,\r\n    })\r\n    try{\r\n      const options:any = {\r\n        url: \"/zlwj/api/system/sys/sys-resource/save\",\r\n        method: \"post\",\r\n        data: params\r\n      }\r\n      let data:any = await fetch(options)\r\n      if(next)next(data)\r\n      dispatch({\r\n        type: OTHER_LOADING_END,\r\n      })\r\n      \r\n    }catch(e){\r\n      console.log(e)\r\n      dispatch({type: OTHER_LOADING_END})\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSysResource = (opt:any)=>{\r\n  return async (dispatch:Function, getState:any)=>{\r\n\r\n    const {params, obj, next, type, refresh=false} = opt\r\n    const options:any = {\r\n      url: \"/zlwj/api/system/sys/sys-resource/page\",\r\n      method: \"get\",\r\n      data: params\r\n    }\r\n    optionList({\r\n      options,\r\n      dispatch,\r\n      keyName: \"resource\", obj, next, refresh, type})\r\n  }\r\n}","import React from \"react\"\r\nimport { Typography } from \"antd\"\r\n\r\nconst { Paragraph } = Typography;\r\n\r\n\r\nexport const logoLinkColumns = [\r\n  {\r\n    title: \"LOGO名称\",\r\n    dataIndex: \"logoName\"\r\n  },\r\n  {\r\n    title: \"LOGO URL\",\r\n    dataIndex: \"logoUrl\"\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n  {\r\n    title: \"修改信息\",\r\n    dataIndex: \"updateTime\"\r\n  },\r\n]\r\n\r\nexport const restypeColumns = [\r\n  {\r\n    title: \"资源类型编号\",\r\n    dataIndex: \"linkCode\"\r\n  },\r\n  {\r\n    title: \"资源类型名称\",\r\n    dataIndex: \"linkName\"\r\n  },\r\n  {\r\n    title: \"资源服务器类型\",\r\n    dataIndex: \"resourceType\"\r\n  },\r\n  {\r\n    title: \"文件类型\",\r\n    dataIndex: \"fileType\"\r\n  },\r\n  {\r\n    title: \"文件大小限制\",\r\n    dataIndex: \"fileSize\"\r\n  },\r\n  {\r\n    title: \"可上传资源后缀\",\r\n    dataIndex: \"fileSuffixCollect\"\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n  {\r\n    title: \"修改信息\",\r\n    dataIndex: \"updateTime\"\r\n  },\r\n]\r\n\r\nexport const resourceColumns = [\r\n  {\r\n    title: \"资源key\",\r\n    dataIndex: \"resourceKey\"\r\n  },\r\n  {\r\n    title: \"附件名称\",\r\n    dataIndex: \"annexName\"\r\n  },\r\n  {\r\n    title: \"文件下载路径\",\r\n    dataIndex: \"resourceDownload\",\r\n    render:(item:string)=>(\r\n      <div style={{width: 180}} title={item}>\r\n        <Paragraph copyable ellipsis >{item}</Paragraph>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    title: \"文件存储路径\",\r\n    dataIndex: \"resourceStorage\",\r\n    render:(item:string)=>(\r\n      <div style={{width: 180}} title={item}>\r\n        <Paragraph copyable ellipsis >{item}</Paragraph>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    title: \"文件后缀\",\r\n    dataIndex: \"suffix\"\r\n  },\r\n  {\r\n    title: \"文件大小\",\r\n    dataIndex: \"size\"\r\n  },\r\n  {\r\n    title: \"创建信息\",\r\n    dataIndex: \"buildTime\"\r\n  },\r\n  {\r\n    title: \"更新信息\",\r\n    dataIndex: \"updateTime\"\r\n  },\r\n]","import React, { ReactNode } from \"react\"\r\nimport {Input, InputNumber, Select, DatePicker} from \"antd\"\r\nconst {TextArea} = Input\r\nconst {Option} = Select\r\nconst {RangePicker} = DatePicker\r\n\r\ninterface selectListProps {\r\n  label: string,\r\n  id: any;\r\n}\r\n\r\nexport interface ItemType {\r\n  label?: string,\r\n  name: string,\r\n  type: any,\r\n  selectList?: selectListProps[];\r\n  initialValue?:any;\r\n  valuePropName?:string;\r\n  notAll?:boolean;\r\n  rules?:any;\r\n}\r\n\r\nexport const getNode = (item:ItemType)=>{\r\n  switch(item.type){\r\n    case \"input\":\r\n      return <Input/>\r\n    case \"textarea\":\r\n      return <TextArea/>\r\n    case \"inputNumber\":\r\n      return <InputNumber style={{width: \"100%\"}}/>\r\n    case \"datepicker\":\r\n      return <DatePicker style={{width: \"100%\"}}/>\r\n    case \"rangepicker\":\r\n      return <RangePicker style={{width: \"100%\"}}/>\r\n    case \"select\":\r\n      return (\r\n        <Select>\r\n          {item.selectList?.map(elem=>(\r\n            <Option key={elem.id} value={elem.id} >{elem.label}</Option>\r\n          ))}\r\n        </Select>\r\n      )\r\n    case \"status\":\r\n      return (\r\n        <Select>\r\n          {item.notAll?null:<Option value=\"\">全部</Option>}\r\n          <Option value={1}>启用</Option>\r\n          <Option value={0}>禁用</Option>\r\n        </Select>\r\n      )\r\n  }\r\n\r\n  return item.type;\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { Form, Modal } from \"antd\"\r\nimport {ItemType, getNode} from \"./getnode\"\r\n\r\n\r\ninterface ItemTypeProps extends ItemType {\r\n  rules?: boolean | any[];\r\n  wrapperCol?:any;\r\n  labelCol?:any;\r\n}\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  width?:number;\r\n  onOk: (...arg0:any)=>void;\r\n  onCancel:()=>void;\r\n  title?:any;\r\n  data:ItemTypeProps[];\r\n  initialValues?:any;\r\n  spinning?:boolean;\r\n}\r\n\r\nconst layout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst AddModular:React.FC<Props> = ({\r\n  visible,\r\n  width,\r\n  onOk,\r\n  onCancel,\r\n  title,\r\n  data,\r\n  initialValues,\r\n  spinning,\r\n})=>{\r\n  const [form] = Form.useForm();\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    if(visible){\r\n      setModalVisible(true)\r\n      form.setFieldsValue(initialValues)\r\n    }\r\n\r\n  }, [visible])\r\n\r\n  const handleRules = (item:ItemTypeProps)=>{\r\n    if(typeof item.rules === 'boolean'){\r\n      return [{required: true, message: `${item.label || \"\"}不能为空！`}]\r\n    }else if(typeof item.rules === 'object'){\r\n      return item.rules;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  return (\r\n    !visible && !modalVisible?null:\r\n    <Modal\r\n      title={title || null}\r\n      visible={visible}\r\n      width={width || 560}\r\n      onCancel={()=>{\r\n        form.resetFields()\r\n        onCancel()\r\n      }}\r\n      destroyOnClose\r\n      onOk={()=>form.submit()}\r\n      confirmLoading={spinning}\r\n      afterClose={()=>{\r\n        setModalVisible(false)\r\n      }}\r\n    >\r\n      <Form \r\n        name=\"addModular\" \r\n        {...layout}\r\n        form={form} onFinish={(values)=>onOk(values)} initialValues={initialValues} >\r\n        {data.map((item, index)=>(\r\n          <Form.Item \r\n            key={index} \r\n            label={item.label} \r\n            name={item.name} \r\n            initialValue={item.initialValue}\r\n            rules={handleRules(item)}\r\n            wrapperCol={item.wrapperCol}\r\n            labelCol={item.labelCol}\r\n            >\r\n            {getNode(item)}\r\n          </Form.Item>\r\n        ))}\r\n      </Form>\r\n\r\n    </Modal>\r\n  )\r\n}\r\n\r\n\r\nexport default AddModular;","import React, { ReactNode } from \"react\"\r\nimport { Button, Card, Form, Input, InputNumber} from \"antd\"\r\nimport {ItemType, getNode} from \"./getnode\"\r\nimport { RetweetOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport { FormLayout } from \"antd/lib/form/Form\";\r\n\r\n\r\n\r\ninterface Props {\r\n  before?: ReactNode;\r\n  data: ItemType[];\r\n  submitSearch: Function;\r\n  initialValues: any;\r\n  resetValues?:any;\r\n  layout?:FormLayout; //inline | vertical | horizontal\r\n  bordered?:boolean;\r\n}\r\n\r\nconst SearchModular:React.FC<Props> = ({\r\n  before,\r\n  data,\r\n  submitSearch,\r\n  initialValues,\r\n  resetValues,\r\n  layout=\"inline\",\r\n  bordered\r\n})=>{\r\n  const [form] = Form.useForm();\r\n\r\n  const submitReset = ()=>{\r\n    form.setFieldsValue(resetValues)\r\n    submitSearch()\r\n  }\r\n\r\n  const handleRules = (item:ItemType)=>{\r\n    if(typeof item.rules === 'boolean'){\r\n      return [{required: true, message: `${item.label||\"\"}不能为空！`}]\r\n    }else if(typeof item.rules === 'object'){\r\n      return item.rules;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  return (\r\n    <Card size=\"small\" bordered={bordered} >\r\n      <div className={layout==\"inline\"?\"flexbetween\":\"\"} >\r\n        <div style={layout==\"inline\"?{marginRight:30}:{marginBottom: 20}}  >\r\n          {before}\r\n        </div>\r\n        <div>\r\n          <Form form={form} \r\n            layout={layout}\r\n            onFinish={(values)=>submitSearch({...values})}\r\n            initialValues={initialValues}\r\n          > \r\n            {data.map((item, index)=>(\r\n              <Form.Item\r\n                key={index}\r\n                label={item.label||null}\r\n                name={item.name}\r\n                initialValue={item.initialValue}\r\n                valuePropName={item.valuePropName || \"value\"}\r\n                rules={handleRules(item)}\r\n              >\r\n                {getNode(item)}\r\n              </Form.Item>\r\n            ))}\r\n            <Form.Item >\r\n              <Button type=\"primary\" ghost htmlType=\"submit\" icon={<SearchOutlined />}>搜索</Button>\r\n              {resetValues?\r\n              <Button className=\"mgl10\" onClick={submitReset} icon={<RetweetOutlined />}>重置</Button>:null}\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n    \r\n  )\r\n}\r\n\r\nexport default SearchModular;","import React from \"react\"\r\nimport {Select} from \"antd\"\r\nimport { SizeType } from \"antd/lib/config-provider/SizeContext\";\r\n\r\nconst {Option} = Select;\r\n\r\n\r\ninterface Props {\r\n  value?:any;\r\n  onChange?:any;\r\n  notAll?:boolean;\r\n  size?:SizeType;\r\n}\r\n\r\nconst StatusElement: React.FC<Props> = ({value, onChange, notAll, size})=>{\r\n  return (\r\n    <Select size={size} value={value} onChange={(v)=>{\r\n      if(onChange){\r\n        onChange(v)\r\n      }\r\n    }} >\r\n      {notAll?null:<Option value=\"\" >全部</Option>}\r\n      <Option value={1} >启用</Option>\r\n      <Option value={0} >禁用</Option>\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport default StatusElement","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport {IProps} from \"@public/common/interface\"\r\nimport JCard from \"@admin/components/JCard\"\r\nimport {getResTypeList, addResType, statusResType, editResType, deleteResType } from \"@admin/actions/otherAction\"\r\nimport { Button, Popconfirm, Select, Table } from \"antd\";\r\nimport {restypeColumns} from \"../columns\"\r\nimport AddModular from \"@public/components/Modular/AddModular\";\r\nimport SearchModular from \"@public/components/Modular/SearchModular\";\r\nimport StatusElement from \"@public/components/Element/StatusElement\";\r\n\r\nconst {Option} = Select\r\n\r\ninterface Props extends IProps {\r\n  restype:any;\r\n}\r\n\r\n\r\nlet params = {\r\n  current: 1,\r\n  linkName: \"\",\r\n  linkCode: \"\"\r\n}\r\nlet resetParams = {\r\n  current: 1,\r\n  linkName: \"\",\r\n  linkCode: \"\"\r\n}\r\n\r\nclass ResType extends React.Component<Props> {\r\n\r\n\r\n  state = {\r\n    addVisible: false,\r\n    editVisible: false,\r\n    detail: {id: \"\", fileSuffixCollect:\"\"}\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.actions.getResTypeList(params)\r\n  }\r\n\r\n  getCol(){\r\n    return [...restypeColumns, {\r\n      title: \"状态\",\r\n      dataIndex: 'status',\r\n      render:(item:any, rows:any)=><StatusElement size=\"small\" notAll value={item} onChange={(v:any)=>{\r\n        this.props.actions.statusResType({id: rows.id}, (res:any)=>{\r\n          this.props.utils.OpenNotification(\"success\")\r\n          this.props.actions.getResTypeList(params, {obj:res, type: \"edit\"})\r\n        })\r\n      }} />\r\n    },{\r\n      title: \"操作\",\r\n      render:(item:any)=>{\r\n        return (\r\n          <>\r\n            <Button size=\"small\" type=\"link\" onClick={()=>this.setState({editVisible: true, detail: item})}>编辑</Button>\r\n            <Popconfirm title=\"是否删除？\" onConfirm={()=>{\r\n              this.props.actions.deleteResType({id: item.id}, ()=>{\r\n                this.props.utils.OpenNotification(\"success\")\r\n                this.props.actions.getResTypeList(params, {refresh: true})\r\n              })\r\n            }}>\r\n              <Button size=\"small\" type=\"link\">删除</Button>\r\n            </Popconfirm>\r\n          </>\r\n        )\r\n      }\r\n    }]\r\n  }\r\n\r\n  render() {\r\n    const {spinning, utils, restype} = this.props\r\n    const {addVisible, editVisible, detail} = this.state\r\n\r\n    return (\r\n      <JCard spinning={spinning}> \r\n        <div key=\"a\">\r\n          <SearchModular\r\n            before={<Button type=\"primary\" onClick={()=>this.setState({addVisible: true})} >新增</Button>}\r\n            initialValues={params}\r\n            resetValues={resetParams}\r\n            submitSearch={(values:any)=>{\r\n              if(!values){\r\n                params = resetParams\r\n              }else {\r\n                params = {...params, ...values}\r\n              }\r\n              this.props.actions.getResTypeList(params)\r\n            }}\r\n            data={[\r\n              {label: \"资源类型名称\", name: \"linkName\", type: \"input\"},\r\n              {label: \"资源类型key\", name: \"linkCode\", type: \"input\"},\r\n            ]}\r\n          />\r\n        </div>\r\n        <div key=\"b\">\r\n          <Table size=\"small\" columns={this.getCol()} dataSource={restype?utils.addIndex(restype.list):[]} \r\n          pagination={utils.Pagination(restype, page=>{\r\n            params.current = page\r\n            this.props.actions.getResTypeList(params)\r\n          })}/>\r\n        </div>\r\n\r\n        <AddModular\r\n          title=\"新增资源类型\"\r\n          spinning={spinning}\r\n          visible={addVisible}\r\n          onCancel={()=>this.setState({addVisible: false})}\r\n          onOk={(values:any)=>{\r\n            this.props.actions.addResType({\r\n              ...values,\r\n              fileSuffixCollect: values.fileSuffixCollect.join()\r\n            }, ()=>{\r\n              utils.OpenNotification(\"success\")\r\n              this.props.actions.getResTypeList(params, {refresh: true})\r\n              this.setState({addVisible: false})\r\n            })\r\n          }}\r\n          data={[\r\n            {label: \"资源类型\", name: \"resourceType\", type: \"select\", selectList: [\r\n              {label: \"系统资源\", id: \"system\"},\r\n              {label: \"公司资源\", id: \"company\"},\r\n              {label: \"项目资源\", id: \"item\"},\r\n              {label: \"用户资源\", id: \"user\"},\r\n              {label: \"公共资源\", id: \"common\"},\r\n            ], rules: true},\r\n            {label: \"资源类型名称\", name: \"linkName\", type: \"input\" , rules: true},\r\n            {label: \"资源类型编号\", name: \"linkCode\", type: \"input\", rules: true},\r\n            {label: \"文件大小限制\", name: \"fileSize\", type: \"input\", rules: true},\r\n            {label: \"文件类型\", name: \"fileType\", type: \"select\", selectList: [\r\n              {label: \"图片\", id: \"P\"},\r\n              {label: \"文档\", id: \"W\"},\r\n              {label: \"文件\", id: \"Y\"},\r\n            ]},\r\n            {label: \"资源后缀\", name: \"fileSuffixCollect\", type: (\r\n              <Select mode=\"multiple\">\r\n                <Option value=\"jpg\">jpg</Option>\r\n                <Option value=\"png\">png</Option>\r\n                <Option value=\"xlsx\">xlsx</Option>\r\n                <Option value=\"xls\">xls</Option>\r\n                <Option value=\"doc\">doc</Option>\r\n                <Option value=\"docx\">docx</Option>\r\n              </Select>\r\n            )},\r\n            // {label: \"是否压缩\", name: \"linkName\", type: \"input\"},\r\n          ]}\r\n        />\r\n\r\n        <AddModular\r\n          title=\"编辑资源类型\"\r\n          spinning={spinning}\r\n          visible={editVisible}\r\n          initialValues={{...detail, fileSuffixCollect: detail.fileSuffixCollect.split(\",\")}}\r\n          onCancel={()=>this.setState({editVisible: false})}\r\n          onOk={(values:any)=>{\r\n            this.props.actions.editResType({\r\n              ...values,\r\n              id: detail.id,\r\n              fileSuffixCollect: values.fileSuffixCollect.join()\r\n            }, ()=>{\r\n              utils.OpenNotification(\"success\")\r\n              this.props.actions.getResTypeList(params, {refresh: true})\r\n              this.setState({editVisible: false})\r\n            })\r\n          }}\r\n          data={[\r\n            {label: \"资源类型\", name: \"resourceType\", type: \"select\", selectList: [\r\n              {label: \"系统资源\", id: \"system\"},\r\n              {label: \"公司资源\", id: \"company\"},\r\n              {label: \"项目资源\", id: \"item\"},\r\n              {label: \"用户资源\", id: \"user\"},\r\n              {label: \"公共资源\", id: \"common\"},\r\n            ], rules: true},\r\n            {label: \"资源类型名称\", name: \"linkName\", type: \"input\" , rules: true},\r\n            {label: \"资源类型编号\", name: \"linkCode\", type: \"input\", rules: true},\r\n            {label: \"文件大小限制\", name: \"fileSize\", type: \"input\", rules: true},\r\n            {label: \"文件类型\", name: \"fileType\", type: \"select\", selectList: [\r\n              {label: \"图片\", id: \"P\"},\r\n              {label: \"文档\", id: \"W\"},\r\n              {label: \"文件\", id: \"Y\"},\r\n            ]},\r\n            {label: \"资源后缀\", name: \"fileSuffixCollect\", type: (\r\n              <Select mode=\"multiple\">\r\n                <Option value=\"jpg\">jpg</Option>\r\n                <Option value=\"png\">png</Option>\r\n                <Option value=\"xlsx\">xlsx</Option>\r\n                <Option value=\"xls\">xls</Option>\r\n                <Option value=\"doc\">doc</Option>\r\n                <Option value=\"docx\">docx</Option>\r\n              </Select>\r\n            )},\r\n            // {label: \"是否压缩\", name: \"linkName\", type: \"input\"},\r\n          ]}\r\n        />\r\n      </JCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any)=>{\r\n  return {\r\n    actions: bindActionCreators({getResTypeList, addResType, statusResType, editResType, deleteResType}, dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state:any)=>{\r\n  return {\r\n    restype: state.other.restype,\r\n    utils: state.app.utils,\r\n    spinning: state.other.spinning\r\n  }\r\n}\r\n\r\nexport default connect(mapStateProps, mapDispatchProps)(ResType)"],"sourceRoot":""}